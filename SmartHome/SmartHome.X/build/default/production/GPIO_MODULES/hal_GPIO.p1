Version 4.0 HI-TECH Software Intermediate Code
"2032 C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC18F-K_DFP/1.13.292/xc8\pic\include\proc\pic18f46k20.h
[v _TRISA `Vuc ~T0 @X0 0 e@3986 ]
"2254
[v _TRISB `Vuc ~T0 @X0 0 e@3987 ]
"2476
[v _TRISC `Vuc ~T0 @X0 0 e@3988 ]
"2698
[v _TRISD `Vuc ~T0 @X0 0 e@3989 ]
"2920
[v _TRISE `Vuc ~T0 @X0 0 e@3990 ]
"1532
[v _LATA `Vuc ~T0 @X0 0 e@3977 ]
"1644
[v _LATB `Vuc ~T0 @X0 0 e@3978 ]
"1756
[v _LATC `Vuc ~T0 @X0 0 e@3979 ]
"1868
[v _LATD `Vuc ~T0 @X0 0 e@3980 ]
"1980
[v _LATE `Vuc ~T0 @X0 0 e@3981 ]
"552
[v _PORTA `Vuc ~T0 @X0 0 e@3968 ]
"788
[v _PORTB `Vuc ~T0 @X0 0 e@3969 ]
"996
[v _PORTC `Vuc ~T0 @X0 0 e@3970 ]
"1184
[v _PORTD `Vuc ~T0 @X0 0 e@3971 ]
"1326
[v _PORTE `Vuc ~T0 @X0 0 e@3972 ]
"68 GPIO_MODULES/hal_GPIO.h
[; ;GPIO_MODULES/hal_GPIO.h: 68: typedef struct {
[s S306 :3 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S306 . port pin direction logic ]
"39 GPIO_MODULES/hal_GPIO.c
[; ;GPIO_MODULES/hal_GPIO.c: 39:         }
[c E3668 0 1 .. ]
[n E3668 . GPIO_DIRECTION_OUTPUT GPIO_DIRECTION_INPUT  ]
"47
[; ;GPIO_MODULES/hal_GPIO.c: 47: Std_ReturnType gpio_pin_write_logic (const pin_config_t *_pin_config, logic_t logic){
[c E3664 0 1 .. ]
[n E3664 . GPIO_LOW GPIO_HIGH  ]
"136
[; ;GPIO_MODULES/hal_GPIO.c: 136: Std_ReturnType gpio_port_direction_intialization (port_index_t port,uint8 direction){
[c E3672 0 1 2 3 4 .. ]
[n E3672 . PORTA_INDEX PORTB_INDEX PORTC_INDEX PORTD_INDEX PORTE_INDEX  ]
"54 C:/Program Files/Microchip/MPLABX/v6.20/packs/Microchip/PIC18F-K_DFP/1.13.292/xc8\pic\include\proc\pic18f46k20.h
[; <" SSPMSK equ 0F77h ;# ">
"124
[; <" SLRCON equ 0F78h ;# ">
"168
[; <" CM2CON1 equ 0F79h ;# ">
"207
[; <" CM2CON0 equ 0F7Ah ;# ">
"277
[; <" CM1CON0 equ 0F7Bh ;# ">
"347
[; <" WPUB equ 0F7Ch ;# ">
"409
[; <" IOCB equ 0F7Dh ;# ">
"448
[; <" ANSEL equ 0F7Eh ;# ">
"510
[; <" ANSELH equ 0F7Fh ;# ">
"554
[; <" PORTA equ 0F80h ;# ">
"790
[; <" PORTB equ 0F81h ;# ">
"998
[; <" PORTC equ 0F82h ;# ">
"1186
[; <" PORTD equ 0F83h ;# ">
"1328
[; <" PORTE equ 0F84h ;# ">
"1534
[; <" LATA equ 0F89h ;# ">
"1646
[; <" LATB equ 0F8Ah ;# ">
"1758
[; <" LATC equ 0F8Bh ;# ">
"1870
[; <" LATD equ 0F8Ch ;# ">
"1982
[; <" LATE equ 0F8Dh ;# ">
"2034
[; <" TRISA equ 0F92h ;# ">
"2039
[; <" DDRA equ 0F92h ;# ">
"2256
[; <" TRISB equ 0F93h ;# ">
"2261
[; <" DDRB equ 0F93h ;# ">
"2478
[; <" TRISC equ 0F94h ;# ">
"2483
[; <" DDRC equ 0F94h ;# ">
"2700
[; <" TRISD equ 0F95h ;# ">
"2705
[; <" DDRD equ 0F95h ;# ">
"2922
[; <" TRISE equ 0F96h ;# ">
"2927
[; <" DDRE equ 0F96h ;# ">
"3074
[; <" OSCTUNE equ 0F9Bh ;# ">
"3144
[; <" PIE1 equ 0F9Dh ;# ">
"3221
[; <" PIR1 equ 0F9Eh ;# ">
"3298
[; <" IPR1 equ 0F9Fh ;# ">
"3375
[; <" PIE2 equ 0FA0h ;# ">
"3455
[; <" PIR2 equ 0FA1h ;# ">
"3535
[; <" IPR2 equ 0FA2h ;# ">
"3615
[; <" EECON1 equ 0FA6h ;# ">
"3681
[; <" EECON2 equ 0FA7h ;# ">
"3688
[; <" EEDATA equ 0FA8h ;# ">
"3695
[; <" EEADR equ 0FA9h ;# ">
"3757
[; <" EEADRH equ 0FAAh ;# ">
"3783
[; <" RCSTA equ 0FABh ;# ">
"3788
[; <" RCSTA1 equ 0FABh ;# ">
"3993
[; <" TXSTA equ 0FACh ;# ">
"3998
[; <" TXSTA1 equ 0FACh ;# ">
"4249
[; <" TXREG equ 0FADh ;# ">
"4254
[; <" TXREG1 equ 0FADh ;# ">
"4261
[; <" RCREG equ 0FAEh ;# ">
"4266
[; <" RCREG1 equ 0FAEh ;# ">
"4273
[; <" SPBRG equ 0FAFh ;# ">
"4278
[; <" SPBRG1 equ 0FAFh ;# ">
"4285
[; <" SPBRGH equ 0FB0h ;# ">
"4292
[; <" T3CON equ 0FB1h ;# ">
"4404
[; <" TMR3 equ 0FB2h ;# ">
"4411
[; <" TMR3L equ 0FB2h ;# ">
"4418
[; <" TMR3H equ 0FB3h ;# ">
"4425
[; <" CVRCON2 equ 0FB4h ;# ">
"4452
[; <" CVRCON equ 0FB5h ;# ">
"4531
[; <" ECCP1AS equ 0FB6h ;# ">
"4613
[; <" PWM1CON equ 0FB7h ;# ">
"4683
[; <" BAUDCON equ 0FB8h ;# ">
"4688
[; <" BAUDCTL equ 0FB8h ;# ">
"4849
[; <" PSTRCON equ 0FB9h ;# ">
"4893
[; <" CCP2CON equ 0FBAh ;# ">
"4957
[; <" CCPR2 equ 0FBBh ;# ">
"4964
[; <" CCPR2L equ 0FBBh ;# ">
"4971
[; <" CCPR2H equ 0FBCh ;# ">
"4978
[; <" CCP1CON equ 0FBDh ;# ">
"5060
[; <" CCPR1 equ 0FBEh ;# ">
"5067
[; <" CCPR1L equ 0FBEh ;# ">
"5074
[; <" CCPR1H equ 0FBFh ;# ">
"5081
[; <" ADCON2 equ 0FC0h ;# ">
"5152
[; <" ADCON1 equ 0FC1h ;# ">
"5203
[; <" ADCON0 equ 0FC2h ;# ">
"5322
[; <" ADRES equ 0FC3h ;# ">
"5329
[; <" ADRESL equ 0FC3h ;# ">
"5336
[; <" ADRESH equ 0FC4h ;# ">
"5343
[; <" SSPCON2 equ 0FC5h ;# ">
"5405
[; <" SSPCON1 equ 0FC6h ;# ">
"5475
[; <" SSPSTAT equ 0FC7h ;# ">
"5700
[; <" SSPADD equ 0FC8h ;# ">
"5707
[; <" SSPBUF equ 0FC9h ;# ">
"5714
[; <" T2CON equ 0FCAh ;# ">
"5785
[; <" PR2 equ 0FCBh ;# ">
"5790
[; <" MEMCON equ 0FCBh ;# ">
"5895
[; <" TMR2 equ 0FCCh ;# ">
"5902
[; <" T1CON equ 0FCDh ;# ">
"6005
[; <" TMR1 equ 0FCEh ;# ">
"6012
[; <" TMR1L equ 0FCEh ;# ">
"6019
[; <" TMR1H equ 0FCFh ;# ">
"6026
[; <" RCON equ 0FD0h ;# ">
"6159
[; <" WDTCON equ 0FD1h ;# ">
"6187
[; <" HLVDCON equ 0FD2h ;# ">
"6192
[; <" LVDCON equ 0FD2h ;# ">
"6457
[; <" OSCCON equ 0FD3h ;# ">
"6534
[; <" T0CON equ 0FD5h ;# ">
"6604
[; <" TMR0 equ 0FD6h ;# ">
"6611
[; <" TMR0L equ 0FD6h ;# ">
"6618
[; <" TMR0H equ 0FD7h ;# ">
"6625
[; <" STATUS equ 0FD8h ;# ">
"6696
[; <" FSR2 equ 0FD9h ;# ">
"6703
[; <" FSR2L equ 0FD9h ;# ">
"6710
[; <" FSR2H equ 0FDAh ;# ">
"6717
[; <" PLUSW2 equ 0FDBh ;# ">
"6724
[; <" PREINC2 equ 0FDCh ;# ">
"6731
[; <" POSTDEC2 equ 0FDDh ;# ">
"6738
[; <" POSTINC2 equ 0FDEh ;# ">
"6745
[; <" INDF2 equ 0FDFh ;# ">
"6752
[; <" BSR equ 0FE0h ;# ">
"6759
[; <" FSR1 equ 0FE1h ;# ">
"6766
[; <" FSR1L equ 0FE1h ;# ">
"6773
[; <" FSR1H equ 0FE2h ;# ">
"6780
[; <" PLUSW1 equ 0FE3h ;# ">
"6787
[; <" PREINC1 equ 0FE4h ;# ">
"6794
[; <" POSTDEC1 equ 0FE5h ;# ">
"6801
[; <" POSTINC1 equ 0FE6h ;# ">
"6808
[; <" INDF1 equ 0FE7h ;# ">
"6815
[; <" WREG equ 0FE8h ;# ">
"6827
[; <" FSR0 equ 0FE9h ;# ">
"6834
[; <" FSR0L equ 0FE9h ;# ">
"6841
[; <" FSR0H equ 0FEAh ;# ">
"6848
[; <" PLUSW0 equ 0FEBh ;# ">
"6855
[; <" PREINC0 equ 0FECh ;# ">
"6862
[; <" POSTDEC0 equ 0FEDh ;# ">
"6869
[; <" POSTINC0 equ 0FEEh ;# ">
"6876
[; <" INDF0 equ 0FEFh ;# ">
"6883
[; <" INTCON3 equ 0FF0h ;# ">
"6975
[; <" INTCON2 equ 0FF1h ;# ">
"7045
[; <" INTCON equ 0FF2h ;# ">
"7162
[; <" PROD equ 0FF3h ;# ">
"7169
[; <" PRODL equ 0FF3h ;# ">
"7176
[; <" PRODH equ 0FF4h ;# ">
"7183
[; <" TABLAT equ 0FF5h ;# ">
"7192
[; <" TBLPTR equ 0FF6h ;# ">
"7199
[; <" TBLPTRL equ 0FF6h ;# ">
"7206
[; <" TBLPTRH equ 0FF7h ;# ">
"7213
[; <" TBLPTRU equ 0FF8h ;# ">
"7222
[; <" PCLAT equ 0FF9h ;# ">
"7229
[; <" PC equ 0FF9h ;# ">
"7236
[; <" PCL equ 0FF9h ;# ">
"7243
[; <" PCLATH equ 0FFAh ;# ">
"7250
[; <" PCLATU equ 0FFBh ;# ">
"7257
[; <" STKPTR equ 0FFCh ;# ">
"7331
[; <" TOS equ 0FFDh ;# ">
"7338
[; <" TOSL equ 0FFDh ;# ">
"7345
[; <" TOSH equ 0FFEh ;# ">
"7352
[; <" TOSU equ 0FFFh ;# ">
"12 GPIO_MODULES/hal_GPIO.c
[; ;GPIO_MODULES/hal_GPIO.c: 12: uint8 *tris_reg[]={&TRISA,&TRISB,&TRISC,&TRISD,&TRISE};
[v _tris_reg `*uc ~T0 @X0 -> 5 `i e ]
[i _tris_reg
:U ..
-> &U _TRISA `*uc
-> &U _TRISB `*uc
-> &U _TRISC `*uc
-> &U _TRISD `*uc
-> &U _TRISE `*uc
..
]
"13
[; ;GPIO_MODULES/hal_GPIO.c: 13: uint8 *lat_reg[] = {&LATA,&LATB,&LATC,&LATD,&LATE};
[v _lat_reg `*uc ~T0 @X0 -> 5 `i e ]
[i _lat_reg
:U ..
-> &U _LATA `*uc
-> &U _LATB `*uc
-> &U _LATC `*uc
-> &U _LATD `*uc
-> &U _LATE `*uc
..
]
"14
[; ;GPIO_MODULES/hal_GPIO.c: 14: uint8 *port_reg[]={&PORTA,&PORTB,&PORTC,&PORTD,&PORTE};
[v _port_reg `*uc ~T0 @X0 -> 5 `i e ]
[i _port_reg
:U ..
-> &U _PORTA `*uc
-> &U _PORTB `*uc
-> &U _PORTC `*uc
-> &U _PORTD `*uc
-> &U _PORTE `*uc
..
]
"18
[; ;GPIO_MODULES/hal_GPIO.c: 18: Std_ReturnType gpio_pin_direction_intialization (const pin_config_t *_pin_config){
[v _gpio_pin_direction_intialization `(uc ~T0 @X0 1 ef1`*CS306 ]
{
[e :U _gpio_pin_direction_intialization ]
[v __pin_config `*CS306 ~T0 @X0 1 r1 ]
[f ]
"20
[; ;GPIO_MODULES/hal_GPIO.c: 20:     Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"22
[; ;GPIO_MODULES/hal_GPIO.c: 22:     if(((void*)0) == _pin_config || (_pin_config ->pin) > 8 ){
[e $ ! || == -> -> -> 0 `i `*v `*CS306 __pin_config > -> . *U __pin_config 1 `i -> 8 `i 308  ]
{
"23
[; ;GPIO_MODULES/hal_GPIO.c: 23:         ret = (Std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"24
[; ;GPIO_MODULES/hal_GPIO.c: 24:     }
}
[e $U 309  ]
"25
[; ;GPIO_MODULES/hal_GPIO.c: 25:     else
[e :U 308 ]
"26
[; ;GPIO_MODULES/hal_GPIO.c: 26:     {
{
"27
[; ;GPIO_MODULES/hal_GPIO.c: 27:         switch(_pin_config->direction)
[e $U 311  ]
"28
[; ;GPIO_MODULES/hal_GPIO.c: 28:         {
{
"29
[; ;GPIO_MODULES/hal_GPIO.c: 29:             case GPIO_DIRECTION_OUTPUT:
[e :U 312 ]
"30
[; ;GPIO_MODULES/hal_GPIO.c: 30:                 (*(tris_reg[_pin_config->port]) &= ~((uint8)1 << (_pin_config->pin)));
[e =& *U *U + &U _tris_reg * -> . *U __pin_config 0 `ux -> -> # *U &U _tris_reg `ui `ux -> ~ << -> -> -> 1 `i `uc `i -> . *U __pin_config 1 `i `uc ]
"31
[; ;GPIO_MODULES/hal_GPIO.c: 31:                 break;
[e $U 310  ]
"32
[; ;GPIO_MODULES/hal_GPIO.c: 32:             case GPIO_DIRECTION_INPUT:
[e :U 313 ]
"33
[; ;GPIO_MODULES/hal_GPIO.c: 33:                 (*(tris_reg[_pin_config->port]) |= ((uint8)1 << (_pin_config->pin)));
[e =| *U *U + &U _tris_reg * -> . *U __pin_config 0 `ux -> -> # *U &U _tris_reg `ui `ux -> << -> -> -> 1 `i `uc `i -> . *U __pin_config 1 `i `uc ]
"34
[; ;GPIO_MODULES/hal_GPIO.c: 34:                 break;
[e $U 310  ]
"35
[; ;GPIO_MODULES/hal_GPIO.c: 35:             default:
[e :U 314 ]
"36
[; ;GPIO_MODULES/hal_GPIO.c: 36:                 ret = (Std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"37
[; ;GPIO_MODULES/hal_GPIO.c: 37:                 break;
[e $U 310  ]
"39
[; ;GPIO_MODULES/hal_GPIO.c: 39:         }
}
[e $U 310  ]
[e :U 311 ]
[e [\ . *U __pin_config 2 , $ . `E3668 0 312
 , $ . `E3668 1 313
 314 ]
[e :U 310 ]
"40
[; ;GPIO_MODULES/hal_GPIO.c: 40:     }
}
[e :U 309 ]
"41
[; ;GPIO_MODULES/hal_GPIO.c: 41:     return ret;
[e ) _ret ]
[e $UE 307  ]
"42
[; ;GPIO_MODULES/hal_GPIO.c: 42: }
[e :UE 307 ]
}
"47
[; ;GPIO_MODULES/hal_GPIO.c: 47: Std_ReturnType gpio_pin_write_logic (const pin_config_t *_pin_config, logic_t logic){
[v _gpio_pin_write_logic `(uc ~T0 @X0 1 ef2`*CS306`E3664 ]
{
[e :U _gpio_pin_write_logic ]
[v __pin_config `*CS306 ~T0 @X0 1 r1 ]
[v _logic `E3664 ~T0 @X0 1 r2 ]
[f ]
"49
[; ;GPIO_MODULES/hal_GPIO.c: 49:   Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"51
[; ;GPIO_MODULES/hal_GPIO.c: 51:     if(((void*)0) == _pin_config || (_pin_config ->pin) > 8 -1 ){
[e $ ! || == -> -> -> 0 `i `*v `*CS306 __pin_config > -> . *U __pin_config 1 `i - -> 8 `i -> 1 `i 316  ]
{
"52
[; ;GPIO_MODULES/hal_GPIO.c: 52:         ret = (Std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"53
[; ;GPIO_MODULES/hal_GPIO.c: 53:     }
}
[e $U 317  ]
"54
[; ;GPIO_MODULES/hal_GPIO.c: 54:     else
[e :U 316 ]
"55
[; ;GPIO_MODULES/hal_GPIO.c: 55:     {
{
"56
[; ;GPIO_MODULES/hal_GPIO.c: 56:         switch(logic)
[e $U 319  ]
"57
[; ;GPIO_MODULES/hal_GPIO.c: 57:         {
{
"58
[; ;GPIO_MODULES/hal_GPIO.c: 58:             case GPIO_LOW:
[e :U 320 ]
"59
[; ;GPIO_MODULES/hal_GPIO.c: 59:                 (*(lat_reg[_pin_config->port]) &= ~((uint8)1 << (_pin_config->pin)));
[e =& *U *U + &U _lat_reg * -> . *U __pin_config 0 `ux -> -> # *U &U _lat_reg `ui `ux -> ~ << -> -> -> 1 `i `uc `i -> . *U __pin_config 1 `i `uc ]
"60
[; ;GPIO_MODULES/hal_GPIO.c: 60:                 break;
[e $U 318  ]
"61
[; ;GPIO_MODULES/hal_GPIO.c: 61:             case GPIO_HIGH:
[e :U 321 ]
"62
[; ;GPIO_MODULES/hal_GPIO.c: 62:                 (*(lat_reg[_pin_config->port]) |= ((uint8)1 << (_pin_config->pin)));
[e =| *U *U + &U _lat_reg * -> . *U __pin_config 0 `ux -> -> # *U &U _lat_reg `ui `ux -> << -> -> -> 1 `i `uc `i -> . *U __pin_config 1 `i `uc ]
"63
[; ;GPIO_MODULES/hal_GPIO.c: 63:                 break;
[e $U 318  ]
"64
[; ;GPIO_MODULES/hal_GPIO.c: 64:             default:
[e :U 322 ]
"65
[; ;GPIO_MODULES/hal_GPIO.c: 65:                 ret = (Std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"66
[; ;GPIO_MODULES/hal_GPIO.c: 66:                 break;
[e $U 318  ]
"68
[; ;GPIO_MODULES/hal_GPIO.c: 68:         }
}
[e $U 318  ]
[e :U 319 ]
[e [\ -> _logic `ui , $ -> . `E3664 0 `ui 320
 , $ -> . `E3664 1 `ui 321
 322 ]
[e :U 318 ]
"69
[; ;GPIO_MODULES/hal_GPIO.c: 69:     }
}
[e :U 317 ]
"70
[; ;GPIO_MODULES/hal_GPIO.c: 70:     return ret;
[e ) _ret ]
[e $UE 315  ]
"72
[; ;GPIO_MODULES/hal_GPIO.c: 72: };
[e :UE 315 ]
}
"77
[; ;GPIO_MODULES/hal_GPIO.c: 77: Std_ReturnType gpio_pin_direction_status (const pin_config_t *_pin_config, direction_t *direction_status)
[v _gpio_pin_direction_status `(uc ~T0 @X0 1 ef2`*CS306`*E3668 ]
"78
[; ;GPIO_MODULES/hal_GPIO.c: 78: {
{
[e :U _gpio_pin_direction_status ]
"77
[; ;GPIO_MODULES/hal_GPIO.c: 77: Std_ReturnType gpio_pin_direction_status (const pin_config_t *_pin_config, direction_t *direction_status)
[v __pin_config `*CS306 ~T0 @X0 1 r1 ]
[v _direction_status `*E3668 ~T0 @X0 1 r2 ]
"78
[; ;GPIO_MODULES/hal_GPIO.c: 78: {
[f ]
"79
[; ;GPIO_MODULES/hal_GPIO.c: 79:     Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"80
[; ;GPIO_MODULES/hal_GPIO.c: 80:     if(((void*)0)==_pin_config || ((void*)0)==direction_status || _pin_config->pin > 8 -1)
[e $ ! || || == -> -> -> 0 `i `*v `*CS306 __pin_config == -> -> -> 0 `i `*v `*E3668 _direction_status > -> . *U __pin_config 1 `i - -> 8 `i -> 1 `i 324  ]
"81
[; ;GPIO_MODULES/hal_GPIO.c: 81:     {
{
"82
[; ;GPIO_MODULES/hal_GPIO.c: 82:         ret= (Std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"83
[; ;GPIO_MODULES/hal_GPIO.c: 83:     }
}
[e $U 325  ]
"84
[; ;GPIO_MODULES/hal_GPIO.c: 84:     else {
[e :U 324 ]
{
"85
[; ;GPIO_MODULES/hal_GPIO.c: 85:         *direction_status = ((uint8)1 & (*tris_reg[_pin_config->port] >> _pin_config->pin));
[e = *U _direction_status -> & -> -> -> 1 `i `uc `i >> -> *U *U + &U _tris_reg * -> . *U __pin_config 0 `ux -> -> # *U &U _tris_reg `ui `ux `i -> . *U __pin_config 1 `i `E3668 ]
"86
[; ;GPIO_MODULES/hal_GPIO.c: 86:     }
}
[e :U 325 ]
"87
[; ;GPIO_MODULES/hal_GPIO.c: 87:     return ret;
[e ) _ret ]
[e $UE 323  ]
"88
[; ;GPIO_MODULES/hal_GPIO.c: 88: }
[e :UE 323 ]
}
"93
[; ;GPIO_MODULES/hal_GPIO.c: 93: Std_ReturnType gpio_pin_read_logic (const pin_config_t *_pin_config, logic_t *logic){
[v _gpio_pin_read_logic `(uc ~T0 @X0 1 ef2`*CS306`*E3664 ]
{
[e :U _gpio_pin_read_logic ]
[v __pin_config `*CS306 ~T0 @X0 1 r1 ]
[v _logic `*E3664 ~T0 @X0 1 r2 ]
[f ]
"94
[; ;GPIO_MODULES/hal_GPIO.c: 94:      Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"95
[; ;GPIO_MODULES/hal_GPIO.c: 95:     if(((void*)0)==_pin_config || ((void*)0)==logic )
[e $ ! || == -> -> -> 0 `i `*v `*CS306 __pin_config == -> -> -> 0 `i `*v `*E3664 _logic 327  ]
"96
[; ;GPIO_MODULES/hal_GPIO.c: 96:     {
{
"97
[; ;GPIO_MODULES/hal_GPIO.c: 97:         ret= (Std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"98
[; ;GPIO_MODULES/hal_GPIO.c: 98:     }
}
[e $U 328  ]
"99
[; ;GPIO_MODULES/hal_GPIO.c: 99:     else
[e :U 327 ]
"100
[; ;GPIO_MODULES/hal_GPIO.c: 100:     {
{
"101
[; ;GPIO_MODULES/hal_GPIO.c: 101:    *logic = ((uint8)1 & (*port_reg[_pin_config->port] >> _pin_config->pin));
[e = *U _logic -> & -> -> -> 1 `i `uc `i >> -> *U *U + &U _port_reg * -> . *U __pin_config 0 `ux -> -> # *U &U _port_reg `ui `ux `i -> . *U __pin_config 1 `i `E3664 ]
"102
[; ;GPIO_MODULES/hal_GPIO.c: 102:     }
}
[e :U 328 ]
"103
[; ;GPIO_MODULES/hal_GPIO.c: 103:     return ret;
[e ) _ret ]
[e $UE 326  ]
"104
[; ;GPIO_MODULES/hal_GPIO.c: 104: }
[e :UE 326 ]
}
"109
[; ;GPIO_MODULES/hal_GPIO.c: 109: Std_ReturnType gpio_pin_toggle_logic (const pin_config_t *_pin_config){
[v _gpio_pin_toggle_logic `(uc ~T0 @X0 1 ef1`*CS306 ]
{
[e :U _gpio_pin_toggle_logic ]
[v __pin_config `*CS306 ~T0 @X0 1 r1 ]
[f ]
"110
[; ;GPIO_MODULES/hal_GPIO.c: 110:      Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"112
[; ;GPIO_MODULES/hal_GPIO.c: 112:     if(((void*)0)==_pin_config || _pin_config->pin > 8 -1)
[e $ ! || == -> -> -> 0 `i `*v `*CS306 __pin_config > -> . *U __pin_config 1 `i - -> 8 `i -> 1 `i 330  ]
"113
[; ;GPIO_MODULES/hal_GPIO.c: 113:     {
{
"114
[; ;GPIO_MODULES/hal_GPIO.c: 114:         ret= (Std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"115
[; ;GPIO_MODULES/hal_GPIO.c: 115:     }
}
[e $U 331  ]
"116
[; ;GPIO_MODULES/hal_GPIO.c: 116:     else
[e :U 330 ]
"117
[; ;GPIO_MODULES/hal_GPIO.c: 117:     {
{
"118
[; ;GPIO_MODULES/hal_GPIO.c: 118:         (*lat_reg[_pin_config->port] ^= ((uint8)1 << _pin_config->pin));
[e =^ *U *U + &U _lat_reg * -> . *U __pin_config 0 `ux -> -> # *U &U _lat_reg `ui `ux -> << -> -> -> 1 `i `uc `i -> . *U __pin_config 1 `i `uc ]
"119
[; ;GPIO_MODULES/hal_GPIO.c: 119:     }
}
[e :U 331 ]
"120
[; ;GPIO_MODULES/hal_GPIO.c: 120:     return ret;
[e ) _ret ]
[e $UE 329  ]
"122
[; ;GPIO_MODULES/hal_GPIO.c: 122: }
[e :UE 329 ]
}
"127
[; ;GPIO_MODULES/hal_GPIO.c: 127: Std_ReturnType gpio_pin_initialization (const pin_config_t *_pin_config){
[v _gpio_pin_initialization `(uc ~T0 @X0 1 ef1`*CS306 ]
{
[e :U _gpio_pin_initialization ]
[v __pin_config `*CS306 ~T0 @X0 1 r1 ]
[f ]
"128
[; ;GPIO_MODULES/hal_GPIO.c: 128:     Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"129
[; ;GPIO_MODULES/hal_GPIO.c: 129:    ret = gpio_pin_direction_intialization(_pin_config);
[e = _ret ( _gpio_pin_direction_intialization (1 __pin_config ]
"130
[; ;GPIO_MODULES/hal_GPIO.c: 130:    ret = gpio_pin_write_logic(_pin_config,_pin_config->logic);
[e = _ret ( _gpio_pin_write_logic (2 , __pin_config -> . *U __pin_config 3 `E3664 ]
"131
[; ;GPIO_MODULES/hal_GPIO.c: 131: }
[e :UE 332 ]
}
"136
[; ;GPIO_MODULES/hal_GPIO.c: 136: Std_ReturnType gpio_port_direction_intialization (port_index_t port,uint8 direction){
[v _gpio_port_direction_intialization `(uc ~T0 @X0 1 ef2`E3672`uc ]
{
[e :U _gpio_port_direction_intialization ]
[v _port `E3672 ~T0 @X0 1 r1 ]
[v _direction `uc ~T0 @X0 1 r2 ]
[f ]
"137
[; ;GPIO_MODULES/hal_GPIO.c: 137:      Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"139
[; ;GPIO_MODULES/hal_GPIO.c: 139:     if(port>5 -1)
[e $ ! > -> _port `ui -> - -> 5 `i -> 1 `i `ui 334  ]
"140
[; ;GPIO_MODULES/hal_GPIO.c: 140:     {
{
"141
[; ;GPIO_MODULES/hal_GPIO.c: 141:         ret= (Std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"142
[; ;GPIO_MODULES/hal_GPIO.c: 142:     }
}
[e $U 335  ]
"143
[; ;GPIO_MODULES/hal_GPIO.c: 143:     else
[e :U 334 ]
"144
[; ;GPIO_MODULES/hal_GPIO.c: 144:     {
{
"145
[; ;GPIO_MODULES/hal_GPIO.c: 145:         *tris_reg[port]=direction;
[e = *U *U + &U _tris_reg * -> _port `ux -> -> # *U &U _tris_reg `ui `ux _direction ]
"146
[; ;GPIO_MODULES/hal_GPIO.c: 146:     }
}
[e :U 335 ]
"147
[; ;GPIO_MODULES/hal_GPIO.c: 147:     return ret;
[e ) _ret ]
[e $UE 333  ]
"148
[; ;GPIO_MODULES/hal_GPIO.c: 148: }
[e :UE 333 ]
}
"153
[; ;GPIO_MODULES/hal_GPIO.c: 153: Std_ReturnType gpio_port_direction_status (port_index_t port, uint8 *direction_status){
[v _gpio_port_direction_status `(uc ~T0 @X0 1 ef2`E3672`*uc ]
{
[e :U _gpio_port_direction_status ]
[v _port `E3672 ~T0 @X0 1 r1 ]
[v _direction_status `*uc ~T0 @X0 1 r2 ]
[f ]
"154
[; ;GPIO_MODULES/hal_GPIO.c: 154:      Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"156
[; ;GPIO_MODULES/hal_GPIO.c: 156:     if(port>5 -1 || direction_status ==((void*)0))
[e $ ! || > -> _port `ui -> - -> 5 `i -> 1 `i `ui == _direction_status -> -> -> 0 `i `*v `*uc 337  ]
"157
[; ;GPIO_MODULES/hal_GPIO.c: 157:     {
{
"158
[; ;GPIO_MODULES/hal_GPIO.c: 158:         ret= (Std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"159
[; ;GPIO_MODULES/hal_GPIO.c: 159:     }
}
[e $U 338  ]
"160
[; ;GPIO_MODULES/hal_GPIO.c: 160:     else
[e :U 337 ]
"161
[; ;GPIO_MODULES/hal_GPIO.c: 161:     {
{
"162
[; ;GPIO_MODULES/hal_GPIO.c: 162:         *direction_status = *tris_reg[port];
[e = *U _direction_status *U *U + &U _tris_reg * -> _port `ux -> -> # *U &U _tris_reg `ui `ux ]
"163
[; ;GPIO_MODULES/hal_GPIO.c: 163:     }
}
[e :U 338 ]
"164
[; ;GPIO_MODULES/hal_GPIO.c: 164:     return ret;
[e ) _ret ]
[e $UE 336  ]
"165
[; ;GPIO_MODULES/hal_GPIO.c: 165: }
[e :UE 336 ]
}
"171
[; ;GPIO_MODULES/hal_GPIO.c: 171: Std_ReturnType gpio_port_write_logic (port_index_t port, uint8 logic){
[v _gpio_port_write_logic `(uc ~T0 @X0 1 ef2`E3672`uc ]
{
[e :U _gpio_port_write_logic ]
[v _port `E3672 ~T0 @X0 1 r1 ]
[v _logic `uc ~T0 @X0 1 r2 ]
[f ]
"172
[; ;GPIO_MODULES/hal_GPIO.c: 172:      Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"174
[; ;GPIO_MODULES/hal_GPIO.c: 174:     if(port>5 -1)
[e $ ! > -> _port `ui -> - -> 5 `i -> 1 `i `ui 340  ]
"175
[; ;GPIO_MODULES/hal_GPIO.c: 175:     {
{
"176
[; ;GPIO_MODULES/hal_GPIO.c: 176:         ret= (Std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"177
[; ;GPIO_MODULES/hal_GPIO.c: 177:     }
}
[e $U 341  ]
"178
[; ;GPIO_MODULES/hal_GPIO.c: 178:     else
[e :U 340 ]
"179
[; ;GPIO_MODULES/hal_GPIO.c: 179:     {
{
"180
[; ;GPIO_MODULES/hal_GPIO.c: 180:          *lat_reg[port]=logic;
[e = *U *U + &U _lat_reg * -> _port `ux -> -> # *U &U _lat_reg `ui `ux _logic ]
"181
[; ;GPIO_MODULES/hal_GPIO.c: 181:     }
}
[e :U 341 ]
"182
[; ;GPIO_MODULES/hal_GPIO.c: 182:     return ret;
[e ) _ret ]
[e $UE 339  ]
"183
[; ;GPIO_MODULES/hal_GPIO.c: 183: }
[e :UE 339 ]
}
"189
[; ;GPIO_MODULES/hal_GPIO.c: 189: Std_ReturnType gpio_port_read_logic (port_index_t port, uint8 *logic){
[v _gpio_port_read_logic `(uc ~T0 @X0 1 ef2`E3672`*uc ]
{
[e :U _gpio_port_read_logic ]
[v _port `E3672 ~T0 @X0 1 r1 ]
[v _logic `*uc ~T0 @X0 1 r2 ]
[f ]
"190
[; ;GPIO_MODULES/hal_GPIO.c: 190:      Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"192
[; ;GPIO_MODULES/hal_GPIO.c: 192:     if(port>5 -1 || logic ==((void*)0))
[e $ ! || > -> _port `ui -> - -> 5 `i -> 1 `i `ui == _logic -> -> -> 0 `i `*v `*uc 343  ]
"193
[; ;GPIO_MODULES/hal_GPIO.c: 193:     {
{
"194
[; ;GPIO_MODULES/hal_GPIO.c: 194:         ret= (Std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"195
[; ;GPIO_MODULES/hal_GPIO.c: 195:     }
}
[e $U 344  ]
"196
[; ;GPIO_MODULES/hal_GPIO.c: 196:     else
[e :U 343 ]
"197
[; ;GPIO_MODULES/hal_GPIO.c: 197:     {
{
"198
[; ;GPIO_MODULES/hal_GPIO.c: 198:         *logic = *port_reg[port];
[e = *U _logic *U *U + &U _port_reg * -> _port `ux -> -> # *U &U _port_reg `ui `ux ]
"199
[; ;GPIO_MODULES/hal_GPIO.c: 199:     }
}
[e :U 344 ]
"200
[; ;GPIO_MODULES/hal_GPIO.c: 200:     return ret;
[e ) _ret ]
[e $UE 342  ]
"201
[; ;GPIO_MODULES/hal_GPIO.c: 201: }
[e :UE 342 ]
}
"206
[; ;GPIO_MODULES/hal_GPIO.c: 206: Std_ReturnType gpio_port_toggle_logic (port_index_t port){
[v _gpio_port_toggle_logic `(uc ~T0 @X0 1 ef1`E3672 ]
{
[e :U _gpio_port_toggle_logic ]
[v _port `E3672 ~T0 @X0 1 r1 ]
[f ]
"207
[; ;GPIO_MODULES/hal_GPIO.c: 207:      Std_ReturnType ret = (Std_ReturnType)0x00;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 0 `i `uc ]
"209
[; ;GPIO_MODULES/hal_GPIO.c: 209:     if(port>5 -1)
[e $ ! > -> _port `ui -> - -> 5 `i -> 1 `i `ui 346  ]
"210
[; ;GPIO_MODULES/hal_GPIO.c: 210:     {
{
"211
[; ;GPIO_MODULES/hal_GPIO.c: 211:         ret= (Std_ReturnType)0x01;
[e = _ret -> -> 1 `i `uc ]
"212
[; ;GPIO_MODULES/hal_GPIO.c: 212:     }
}
[e $U 347  ]
"213
[; ;GPIO_MODULES/hal_GPIO.c: 213:     else
[e :U 346 ]
"214
[; ;GPIO_MODULES/hal_GPIO.c: 214:     {
{
"215
[; ;GPIO_MODULES/hal_GPIO.c: 215:         *lat_reg[port] ^= 0xFF;
[e =^ *U *U + &U _lat_reg * -> _port `ux -> -> # *U &U _lat_reg `ui `ux -> -> 255 `i `uc ]
"216
[; ;GPIO_MODULES/hal_GPIO.c: 216:     }
}
[e :U 347 ]
"217
[; ;GPIO_MODULES/hal_GPIO.c: 217:     return ret;
[e ) _ret ]
[e $UE 345  ]
"218
[; ;GPIO_MODULES/hal_GPIO.c: 218: }
[e :UE 345 ]
}
