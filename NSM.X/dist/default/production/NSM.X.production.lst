

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Aug 28 16:25:05 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,inline
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1,inline
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1,inline
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1,inline
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1,inline
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1,inline
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1,inline
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1,inline
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1,inline
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1,inline
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1,inline
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	text39,global,reloc=2,class=CODE,delta=1
    50                           	psect	text40,global,reloc=2,class=CODE,delta=1,inline
    51                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56   000000                     
    57                           ; Generated 12/10/2023 GMT
    58                           ; 
    59                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution. Publication is not required when
    73                           ;        this file is used in an embedded application.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F46K20 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91   000000                     
    92 ;; Function _I2C_SlaveDefWrColInterruptHandler is unused but had its address taken
    93   000000                     
    94 ;; Function _I2C_SlaveDefBusColInterruptHandler is unused but had its address taken
    95   000000                     
    96                           	psect	idataCOMRAM
    97   001722                     __pidataCOMRAM:
    98                           	callstack 0
    99                           
   100                           ;initializer for _port_reg
   101   001722  80                 	db	128
   102   001723  0F                 	db	15
   103   001724  81                 	db	129
   104   001725  0F                 	db	15
   105   001726  82                 	db	130
   106   001727  0F                 	db	15
   107   001728  83                 	db	131
   108   001729  0F                 	db	15
   109   00172A  84                 	db	132
   110   00172B  0F                 	db	15
   111                           
   112                           ;initializer for _lat_reg
   113   00172C  89                 	db	137
   114   00172D  0F                 	db	15
   115   00172E  8A                 	db	138
   116   00172F  0F                 	db	15
   117   001730  8B                 	db	139
   118   001731  0F                 	db	15
   119   001732  8C                 	db	140
   120   001733  0F                 	db	15
   121   001734  8D                 	db	141
   122   001735  0F                 	db	15
   123                           
   124                           ;initializer for _tris_reg
   125   001736  92                 	db	146
   126   001737  0F                 	db	15
   127   001738  93                 	db	147
   128   001739  0F                 	db	15
   129   00173A  94                 	db	148
   130   00173B  0F                 	db	15
   131   00173C  95                 	db	149
   132   00173D  0F                 	db	15
   133   00173E  96                 	db	150
   134   00173F  0F                 	db	15
   135                           
   136                           ;initializer for _motor
   137   001740  33                 	db	51
   138   001741  3B                 	db	59
   139                           
   140                           ;initializer for _led
   141   001742  03                 	db	3
   142   000000                     _ANSELH	set	3967
   143   000000                     _SSPCON2bits	set	4037
   144   000000                     _SSPSTATbits	set	4039
   145   000000                     _SSPCON1bits	set	4038
   146   000000                     _SSPMSK	set	3959
   147   000000                     _PORTA	set	3968
   148   000000                     _LATA	set	3977
   149   000000                     _TRISA	set	3986
   150   000000                     _OSCTUNE	set	3995
   151   000000                     _PIE1bits	set	3997
   152   000000                     _SSPCON2	set	4037
   153   000000                     _SSPCON1	set	4038
   154   000000                     _SSPSTAT	set	4039
   155   000000                     _TRISE	set	3990
   156   000000                     _TRISD	set	3989
   157   000000                     _TRISC	set	3988
   158   000000                     _TRISB	set	3987
   159   000000                     _LATE	set	3981
   160   000000                     _LATD	set	3980
   161   000000                     _LATC	set	3979
   162   000000                     _LATB	set	3978
   163   000000                     _PORTE	set	3972
   164   000000                     _PORTD	set	3971
   165   000000                     _PORTC	set	3970
   166   000000                     _PORTB	set	3969
   167   000000                     _RCONbits	set	4048
   168   000000                     _OSCCON	set	4051
   169   000000                     _SSPBUF	set	4041
   170   000000                     _SSPADD	set	4040
   171   000000                     _WPUB	set	3964
   172   000000                     _ANSEL	set	3966
   173   000000                     _PIE2bits	set	4000
   174   000000                     _PIR1bits	set	3998
   175   000000                     _INTCON2bits	set	4081
   176   000000                     _INTCONbits	set	4082
   177   000000                     _PIR2bits	set	4001
   178                           
   179                           ; #config settings
   180                           
   181                           	psect	cinit
   182   0015AE                     __pcinit:
   183                           	callstack 0
   184   0015AE                     start_initialization:
   185                           	callstack 0
   186   0015AE                     __initialization:
   187                           	callstack 0
   188                           
   189                           ; Initialize objects allocated to COMRAM (33 bytes)
   190                           ; load TBLPTR registers with __pidataCOMRAM
   191   0015AE  0E22               	movlw	low __pidataCOMRAM
   192   0015B0  6EF6               	movwf	tblptrl,c
   193   0015B2  0E17               	movlw	high __pidataCOMRAM
   194   0015B4  6EF7               	movwf	tblptrh,c
   195   0015B6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   196   0015B8  6EF8               	movwf	tblptru,c
   197   0015BA  EE00  F001         	lfsr	0,__pdataCOMRAM
   198   0015BE  EE10 F021          	lfsr	1,33
   199   0015C2                     copy_data0:
   200   0015C2  0009               	tblrd		*+
   201   0015C4  CFF5 FFEE          	movff	tablat,postinc0
   202   0015C8  50E5               	movf	postdec1,w,c
   203   0015CA  50E1               	movf	fsr1l,w,c
   204   0015CC  E1FA               	bnz	copy_data0
   205                           
   206                           ; Clear objects allocated to COMRAM (24 bytes)
   207   0015CE  EE00  F022         	lfsr	0,__pbssCOMRAM
   208   0015D2  0E18               	movlw	24
   209   0015D4                     clear_0:
   210   0015D4  6AEE               	clrf	postinc0,c
   211   0015D6  06E8               	decf	wreg,f,c
   212   0015D8  E1FD               	bnz	clear_0
   213   0015DA                     end_of_initialization:
   214                           	callstack 0
   215   0015DA                     __end_of__initialization:
   216                           	callstack 0
   217   0015DA  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   218   0015DC  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   219   0015DE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   220   0015E0  6EF8               	movwf	tblptru,c
   221   0015E2  0100               	movlb	0
   222   0015E4  EF90  F009         	goto	_main	;jump to C main() function
   223                           
   224                           	psect	bssCOMRAM
   225   000022                     __pbssCOMRAM:
   226                           	callstack 0
   227   000022                     _I2C_SlaveWrColInterruptHandler:
   228                           	callstack 0
   229   000022                     	ds	2
   230   000024                     _I2C_SlaveBusColInterruptHandler:
   231                           	callstack 0
   232   000024                     	ds	2
   233   000026                     _I2C_SlaveAddrInterruptHandler:
   234                           	callstack 0
   235   000026                     	ds	2
   236   000028                     _I2C_SlaveWrInterruptHandler:
   237                           	callstack 0
   238   000028                     	ds	2
   239   00002A                     _I2C_SlaveRdInterruptHandler:
   240                           	callstack 0
   241   00002A                     	ds	2
   242   00002C                     _MSSP_InterruptHandler:
   243                           	callstack 0
   244   00002C                     	ds	2
   245   00002E                     _ggggg:
   246                           	callstack 0
   247   00002E                     	ds	1
   248   00002F                     _mmmm:
   249                           	callstack 0
   250   00002F                     	ds	1
   251   000030                     _i2cSlaveState:
   252                           	callstack 0
   253   000030                     	ds	1
   254   000031                     _i2cSlaveAddr:
   255                           	callstack 0
   256   000031                     	ds	1
   257   000032                     _i2cRdData:
   258                           	callstack 0
   259   000032                     	ds	1
   260   000033                     _i2cWrData:
   261                           	callstack 0
   262   000033                     	ds	1
   263   000034                     ecu_led_toggle@F3749:
   264                           	callstack 0
   265   000034                     	ds	1
   266   000035                     ecu_led_off@F3744:
   267                           	callstack 0
   268   000035                     	ds	1
   269   000036                     ecu_led_on@F3739:
   270                           	callstack 0
   271   000036                     	ds	1
   272   000037                     ecu_led_initialization@F3734:
   273                           	callstack 0
   274   000037                     	ds	1
   275   000038                     	ds	1
   276   000039                     	ds	1
   277                           
   278                           	psect	dataCOMRAM
   279   000001                     __pdataCOMRAM:
   280                           	callstack 0
   281   000001                     _port_reg:
   282                           	callstack 0
   283   000001                     	ds	10
   284   00000B                     _lat_reg:
   285                           	callstack 0
   286   00000B                     	ds	10
   287   000015                     _tris_reg:
   288                           	callstack 0
   289   000015                     	ds	10
   290   00001F                     _motor:
   291                           	callstack 0
   292   00001F                     	ds	2
   293   000021                     _led:
   294                           	callstack 0
   295   000021                     	ds	1
   296                           
   297                           	psect	cstackCOMRAM
   298   00003A                     __pcstackCOMRAM:
   299                           	callstack 0
   300   00003A                     I2C_SlaveSendTxData@data:
   301                           	callstack 0
   302                           
   303                           ; 1 bytes @ 0x0
   304   00003A                     	ds	1
   305   00003B                     ??_I2C_Isr:
   306   00003B                     
   307                           ; 1 bytes @ 0x1
   308   00003B                     	ds	2
   309   00003D                     ??_INTERRUPT_InterruptManager:
   310                           
   311                           ; 1 bytes @ 0x3
   312   00003D                     	ds	2
   313   00003F                     gpio_pin_direction_intialization@_pin_config:
   314                           	callstack 0
   315   00003F                     gpio_pin_write_logic@_pin_config:
   316                           	callstack 0
   317   00003F                     I2C_SlaveSetSlaveAddr@slaveAddr:
   318                           	callstack 0
   319   00003F                     I2C_SlaveSetSlaveMask@maskAddr:
   320                           	callstack 0
   321   00003F                     I2C_SlaveSetIsrHandler@handler:
   322                           	callstack 0
   323   00003F                     I2C_SlaveSetReadIntHandler@handler:
   324                           	callstack 0
   325   00003F                     I2C_SlaveSetWriteIntHandler@handler:
   326                           	callstack 0
   327   00003F                     I2C_SlaveSetAddrIntHandler@handler:
   328                           	callstack 0
   329   00003F                     I2C_SlaveSetWrColIntHandler@handler:
   330                           	callstack 0
   331   00003F                     I2C_SlaveSetBusColIntHandler@handler:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x5
   335   00003F                     	ds	1
   336   000040                     ??_gpio_pin_direction_intialization:
   337   000040                     gpio_pin_write_logic@logic:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0x6
   341   000040                     	ds	1
   342   000041                     ??_gpio_pin_write_logic:
   343   000041                     
   344                           ; 1 bytes @ 0x7
   345   000041                     	ds	4
   346   000045                     gpio_pin_direction_intialization@ret:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0xB
   350   000045                     	ds	1
   351   000046                     ecu_motor_initialization@my_motor:
   352                           	callstack 0
   353   000046                     gpio_pin_write_logic@ret:
   354                           	callstack 0
   355   000046                     ecu_led_initialization@led:
   356                           	callstack 0
   357                           
   358                           ; 1 bytes @ 0xC
   359   000046                     	ds	1
   360   000047                     ??_ecu_led_initialization:
   361   000047                     ecu_motor_move_right@my_motor:
   362                           	callstack 0
   363   000047                     ecu_motor_stop@my_motor:
   364                           	callstack 0
   365   000047                     ecu_led_on@led:
   366                           	callstack 0
   367   000047                     ecu_led_off@led:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0xD
   371   000047                     	ds	1
   372   000048                     ??_ecu_led_on:
   373   000048                     ??_ecu_led_off:
   374   000048                     ecu_led_initialization@mid_term:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0xE
   378   000048                     	ds	1
   379   000049                     ecu_led_on@mid_term:
   380                           	callstack 0
   381   000049                     ecu_led_off@mid_term:
   382                           	callstack 0
   383                           
   384                           ; 1 bytes @ 0xF
   385   000049                     	ds	1
   386   00004A                     ??_main:
   387                           
   388                           ; 1 bytes @ 0x10
   389   00004A                     	ds	2
   390                           
   391 ;;
   392 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   393 ;;
   394 ;; *************** function _main *****************
   395 ;; Defined at:
   396 ;;		line 69 in file "main.c"
   397 ;; Parameters:    Size  Location     Type
   398 ;;		None
   399 ;; Auto vars:     Size  Location     Type
   400 ;;		None
   401 ;; Return value:  Size  Location     Type
   402 ;;                  1    wreg      void 
   403 ;; Registers used:
   404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   405 ;; Tracked objects:
   406 ;;		On entry : 0/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   412 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   413 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   414 ;;Total ram usage:        2 bytes
   415 ;; Hardware stack levels required when called: 7
   416 ;; This function calls:
   417 ;;		_I2C_Open
   418 ;;		_SYSTEM_Initialize
   419 ;;		_ecu_led_initialization
   420 ;;		_ecu_led_off
   421 ;;		_ecu_led_on
   422 ;;		_ecu_motor_initialization
   423 ;;		_ecu_motor_move_right
   424 ;;		_ecu_motor_stop
   425 ;; This function is called by:
   426 ;;		Startup code after reset
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430                           	psect	text0
   431   001320                     __ptext0:
   432                           	callstack 0
   433   001320                     _main:
   434                           	callstack 24
   435   001320                     
   436                           ;main.c: 72:     SYSTEM_Initialize();
   437   001320  ECD9  F00B         	call	_SYSTEM_Initialize	;wreg free
   438                           
   439                           ;main.c: 73:     I2C_Open();
   440   001324  ECA8  F00A         	call	_I2C_Open	;wreg free
   441   001328                     
   442                           ;main.c: 90:               ecu_motor_initialization(&motor);
   443   001328  0E1F               	movlw	low _motor
   444   00132A  6E46               	movwf	ecu_motor_initialization@my_motor^0,c
   445   00132C  EC7E  F00B         	call	_ecu_motor_initialization	;wreg free
   446   001330                     
   447                           ;main.c: 91:               ecu_led_initialization(&led);
   448   001330  0E21               	movlw	low _led
   449   001332  6E46               	movwf	ecu_led_initialization@led^0,c
   450   001334  EC75  F00A         	call	_ecu_led_initialization	;wreg free
   451   001338                     
   452                           ;main.c: 92:               (TRISE &= ~((uint8)1 << 1));
   453   001338  9296               	bcf	150,1,c	;volatile
   454   00133A                     
   455                           ;main.c: 93:               (TRISB &= ~((uint8)1 << 4));
   456   00133A  9893               	bcf	147,4,c	;volatile
   457   00133C                     
   458                           ;main.c: 94:               (TRISB &= ~((uint8)1 << 0));
   459   00133C  9093               	bcf	147,0,c	;volatile
   460   00133E                     
   461                           ;main.c: 95:               (TRISB &= ~((uint8)1 << 2));
   462   00133E  9493               	bcf	147,2,c	;volatile
   463   001340                     
   464                           ;main.c: 96:               (TRISB &= ~((uint8)1 << 3));
   465   001340  9693               	bcf	147,3,c	;volatile
   466   001342                     l1970:
   467                           
   468                           ;main.c: 100:     {;main.c: 101:         ggggg=SSPBUF;
   469   001342  CFC9 F02E          	movff	4041,_ggggg	;volatile
   470                           
   471                           ;main.c: 103:         switch(ggggg){
   472   001346  EFE6  F009         	goto	l2016
   473   00134A                     l1972:
   474   00134A  0E1F               	movlw	low _motor
   475   00134C  6E47               	movwf	ecu_motor_move_right@my_motor^0,c
   476   00134E  EC0B  F00B         	call	_ecu_motor_move_right	;wreg free
   477   001352                     l1974:
   478                           
   479                           ;main.c: 105:                         ggggg=0;
   480   001352  0E00               	movlw	0
   481   001354  6E2E               	movwf	_ggggg^0,c
   482                           
   483                           ;main.c: 106:             break;
   484   001356  EFA1  F009         	goto	l1970
   485   00135A                     l1976:
   486   00135A  0E1F               	movlw	low _motor
   487   00135C  6E47               	movwf	ecu_motor_stop@my_motor^0,c
   488   00135E  ECF4  F00A         	call	_ecu_motor_stop	;wreg free
   489   001362  EFA9  F009         	goto	l1974
   490   001366                     l1980:
   491   001366  0E21               	movlw	low _led
   492   001368  6E47               	movwf	ecu_led_on@led^0,c
   493   00136A  EC0B  F00A         	call	_ecu_led_on	;wreg free
   494   00136E  EFA9  F009         	goto	l1974
   495   001372                     l1984:
   496   001372  0E21               	movlw	low _led
   497   001374  6E47               	movwf	ecu_led_off@led^0,c
   498   001376  EC40  F00A         	call	_ecu_led_off	;wreg free
   499   00137A  EFA9  F009         	goto	l1974
   500   00137E                     l1988:
   501   00137E  828D               	bsf	141,1,c	;volatile
   502   001380                     
   503                           ;main.c: 117:                         _delay((unsigned long)((.5)*(1000000/4000.0)));
   504   001380  0E29               	movlw	41
   505   001382                     u877:
   506   001382  2EE8               	decfsz	wreg,f,c
   507   001384  D7FE               	bra	u877
   508   001386  F000 F000          	nop2	
   509   00138A                     l1992:
   510                           
   511                           ;main.c: 118:                         (LATE &= ~((uint8)1 << 1));
   512   00138A  928D               	bcf	141,1,c	;volatile
   513                           
   514                           ;main.c: 119:                        _delay((unsigned long)((1000)*(1000000/4000.0)));
   515   00138C  0E02               	movlw	2
   516   00138E  6E4B               	movwf	(??_main+1)^0,c
   517   001390  0E45               	movlw	69
   518   001392  6E4A               	movwf	??_main^0,c
   519   001394  0EAA               	movlw	170
   520   001396                     u887:
   521   001396  2EE8               	decfsz	wreg,f,c
   522   001398  D7FE               	bra	u887
   523   00139A  2E4A               	decfsz	??_main^0,f,c
   524   00139C  D7FC               	bra	u887
   525   00139E  2E4B               	decfsz	(??_main+1)^0,f,c
   526   0013A0  D7FA               	bra	u887
   527   0013A2  EFA9  F009         	goto	l1974
   528   0013A6                     l1996:
   529   0013A6  828D               	bsf	141,1,c	;volatile
   530   0013A8                     
   531                           ;main.c: 123:                        _delay((unsigned long)((10.4999)*(1000000/4000.0)))
      +                          ;
   532   0013A8  0E04               	movlw	4
   533   0013AA  6E4A               	movwf	??_main^0,c
   534   0013AC  0E67               	movlw	103
   535   0013AE                     u897:
   536   0013AE  2EE8               	decfsz	wreg,f,c
   537   0013B0  D7FE               	bra	u897
   538   0013B2  2E4A               	decfsz	??_main^0,f,c
   539   0013B4  D7FC               	bra	u897
   540   0013B6  0000               	nop	
   541   0013B8  EFC5  F009         	goto	l1992
   542   0013BC                     l2004:
   543   0013BC  808A               	bsf	138,0,c	;volatile
   544                           
   545                           ;main.c: 129:                        (LATB |= ((uint8)1 << 2));
   546   0013BE  848A               	bsf	138,2,c	;volatile
   547   0013C0  EFA9  F009         	goto	l1974
   548   0013C4                     l2008:
   549   0013C4  908A               	bcf	138,0,c	;volatile
   550                           
   551                           ;main.c: 134:                        (LATB &= ~((uint8)1 << 2));
   552   0013C6  948A               	bcf	138,2,c	;volatile
   553   0013C8  EFA9  F009         	goto	l1974
   554   0013CC                     l2016:
   555   0013CC  502E               	movf	_ggggg^0,w,c
   556                           
   557                           ; Switch size 1, requested type "simple"
   558                           ; Number of cases is 8, Range of values is 97 to 113
   559                           ; switch strategies available:
   560                           ; Name         Instructions Cycles
   561                           ; simple_byte           25    13 (average)
   562                           ;	Chosen strategy is simple_byte
   563   0013CE  0A61               	xorlw	97	; case 97
   564   0013D0  B4D8               	btfsc	status,2,c
   565   0013D2  EFA5  F009         	goto	l1972
   566   0013D6  0A03               	xorlw	3	; case 98
   567   0013D8  B4D8               	btfsc	status,2,c
   568   0013DA  EFAD  F009         	goto	l1976
   569   0013DE  0A01               	xorlw	1	; case 99
   570   0013E0  B4D8               	btfsc	status,2,c
   571   0013E2  EFB3  F009         	goto	l1980
   572   0013E6  0A07               	xorlw	7	; case 100
   573   0013E8  B4D8               	btfsc	status,2,c
   574   0013EA  EFB9  F009         	goto	l1984
   575   0013EE  0A01               	xorlw	1	; case 101
   576   0013F0  B4D8               	btfsc	status,2,c
   577   0013F2  EFBF  F009         	goto	l1988
   578   0013F6  0A09               	xorlw	9	; case 108
   579   0013F8  B4D8               	btfsc	status,2,c
   580   0013FA  EFE2  F009         	goto	l2008
   581   0013FE  0A01               	xorlw	1	; case 109
   582   001400  B4D8               	btfsc	status,2,c
   583   001402  EFDE  F009         	goto	l2004
   584   001406  0A1C               	xorlw	28	; case 113
   585   001408  B4D8               	btfsc	status,2,c
   586   00140A  EFD3  F009         	goto	l1996
   587   00140E  EFA9  F009         	goto	l1974
   588   001412  EF43  F000         	goto	start
   589   001416                     __end_of_main:
   590                           	callstack 0
   591                           
   592 ;; *************** function _ecu_motor_stop *****************
   593 ;; Defined at:
   594 ;;		line 67 in file "DC_MOTOR/ecu_dc_motor.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;  my_motor        1   13[COMRAM] PTR const struct .
   597 ;;		 -> motor(2), 
   598 ;; Auto vars:     Size  Location     Type
   599 ;;  ret             1    0        unsigned char 
   600 ;; Return value:  Size  Location     Type
   601 ;;                  1    wreg      unsigned char 
   602 ;; Registers used:
   603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   604 ;; Tracked objects:
   605 ;;		On entry : 0/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   609 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   612 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   613 ;;Total ram usage:        1 bytes
   614 ;; Hardware stack levels used: 1
   615 ;; Hardware stack levels required when called: 6
   616 ;; This function calls:
   617 ;;		_gpio_pin_write_logic
   618 ;; This function is called by:
   619 ;;		_main
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623                           	psect	text1
   624   0015E8                     __ptext1:
   625                           	callstack 0
   626   0015E8                     _ecu_motor_stop:
   627                           	callstack 24
   628   0015E8                     
   629                           ;DC_MOTOR/ecu_dc_motor.c: 69:     if(((void*)0) == my_motor){
   630   0015E8  5047               	movf	ecu_motor_stop@my_motor^0,w,c
   631   0015EA  A4D8               	btfss	status,2,c
   632   0015EC  EFFA  F00A         	goto	u791
   633   0015F0  EFFC  F00A         	goto	u790
   634   0015F4                     u791:
   635   0015F4  EFFE  F00A         	goto	l1888
   636   0015F8                     u790:
   637   0015F8                     
   638                           ;DC_MOTOR/ecu_dc_motor.c: 71:     }
   639   0015F8  EF0A  F00B         	goto	l28
   640   0015FC                     l1888:
   641                           
   642                           ;DC_MOTOR/ecu_dc_motor.c: 74:         gpio_pin_write_logic (&(my_motor->motor[0]), GPIO_
      +                          LOW);
   643   0015FC  C047  F03F         	movff	ecu_motor_stop@my_motor,gpio_pin_write_logic@_pin_config
   644   001600  0E00               	movlw	0
   645   001602  6E40               	movwf	gpio_pin_write_logic@logic^0,c
   646   001604  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   647                           
   648                           ;DC_MOTOR/ecu_dc_motor.c: 75:         gpio_pin_write_logic (&(my_motor->motor[1]), GPIO_
      +                          LOW);
   649   001608  2847               	incf	ecu_motor_stop@my_motor^0,w,c
   650   00160A  6E3F               	movwf	gpio_pin_write_logic@_pin_config^0,c
   651   00160C  0E00               	movlw	0
   652   00160E  6E40               	movwf	gpio_pin_write_logic@logic^0,c
   653   001610  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   654   001614                     l28:
   655   001614  0012               	return		;funcret
   656   001616                     __end_of_ecu_motor_stop:
   657                           	callstack 0
   658                           
   659 ;; *************** function _ecu_motor_move_right *****************
   660 ;; Defined at:
   661 ;;		line 35 in file "DC_MOTOR/ecu_dc_motor.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;  my_motor        1   13[COMRAM] PTR const struct .
   664 ;;		 -> motor(2), 
   665 ;; Auto vars:     Size  Location     Type
   666 ;;  ret             1    0        unsigned char 
   667 ;; Return value:  Size  Location     Type
   668 ;;                  1    wreg      unsigned char 
   669 ;; Registers used:
   670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   671 ;; Tracked objects:
   672 ;;		On entry : 0/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   676 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   679 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   680 ;;Total ram usage:        1 bytes
   681 ;; Hardware stack levels used: 1
   682 ;; Hardware stack levels required when called: 6
   683 ;; This function calls:
   684 ;;		_gpio_pin_write_logic
   685 ;; This function is called by:
   686 ;;		_main
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690                           	psect	text2
   691   001616                     __ptext2:
   692                           	callstack 0
   693   001616                     _ecu_motor_move_right:
   694                           	callstack 24
   695   001616                     
   696                           ;DC_MOTOR/ecu_dc_motor.c: 37:     if(((void*)0) == my_motor){
   697   001616  5047               	movf	ecu_motor_move_right@my_motor^0,w,c
   698   001618  A4D8               	btfss	status,2,c
   699   00161A  EF11  F00B         	goto	u781
   700   00161E  EF13  F00B         	goto	u780
   701   001622                     u781:
   702   001622  EF15  F00B         	goto	l1880
   703   001626                     u780:
   704   001626                     
   705                           ;DC_MOTOR/ecu_dc_motor.c: 39:     }
   706   001626  EF21  F00B         	goto	l18
   707   00162A                     l1880:
   708                           
   709                           ;DC_MOTOR/ecu_dc_motor.c: 42:         gpio_pin_write_logic (&(my_motor->motor[0]), GPIO_
      +                          HIGH);
   710   00162A  C047  F03F         	movff	ecu_motor_move_right@my_motor,gpio_pin_write_logic@_pin_config
   711   00162E  0E01               	movlw	1
   712   001630  6E40               	movwf	gpio_pin_write_logic@logic^0,c
   713   001632  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   714                           
   715                           ;DC_MOTOR/ecu_dc_motor.c: 43:         gpio_pin_write_logic (&(my_motor->motor[1]), GPIO_
      +                          LOW);
   716   001636  2847               	incf	ecu_motor_move_right@my_motor^0,w,c
   717   001638  6E3F               	movwf	gpio_pin_write_logic@_pin_config^0,c
   718   00163A  0E00               	movlw	0
   719   00163C  6E40               	movwf	gpio_pin_write_logic@logic^0,c
   720   00163E  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   721   001642                     l18:
   722   001642  0012               	return		;funcret
   723   001644                     __end_of_ecu_motor_move_right:
   724                           	callstack 0
   725                           
   726 ;; *************** function _ecu_motor_initialization *****************
   727 ;; Defined at:
   728 ;;		line 18 in file "DC_MOTOR/ecu_dc_motor.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;  my_motor        1   12[COMRAM] PTR const struct .
   731 ;;		 -> motor(2), 
   732 ;; Auto vars:     Size  Location     Type
   733 ;;  ret             1    0        unsigned char 
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      unsigned char 
   736 ;; Registers used:
   737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   743 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   746 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   747 ;;Total ram usage:        1 bytes
   748 ;; Hardware stack levels used: 1
   749 ;; Hardware stack levels required when called: 6
   750 ;; This function calls:
   751 ;;		_gpio_pin_direction_intialization
   752 ;; This function is called by:
   753 ;;		_main
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           	psect	text3
   758   0016FC                     __ptext3:
   759                           	callstack 0
   760   0016FC                     _ecu_motor_initialization:
   761                           	callstack 24
   762   0016FC                     
   763                           ;DC_MOTOR/ecu_dc_motor.c: 20:     if(((void*)0) == my_motor){
   764   0016FC  5046               	movf	ecu_motor_initialization@my_motor^0,w,c
   765   0016FE  A4D8               	btfss	status,2,c
   766   001700  EF84  F00B         	goto	u771
   767   001704  EF86  F00B         	goto	u770
   768   001708                     u771:
   769   001708  EF88  F00B         	goto	l1872
   770   00170C                     u770:
   771   00170C                     
   772                           ;DC_MOTOR/ecu_dc_motor.c: 22:     }
   773   00170C  EF90  F00B         	goto	l13
   774   001710                     l1872:
   775                           
   776                           ;DC_MOTOR/ecu_dc_motor.c: 26:          gpio_pin_direction_intialization (&(my_motor->mot
      +                          or[0]));
   777   001710  C046  F03F         	movff	ecu_motor_initialization@my_motor,gpio_pin_direction_intialization@_pin_config
   778   001714  EC01  F008         	call	_gpio_pin_direction_intialization	;wreg free
   779                           
   780                           ;DC_MOTOR/ecu_dc_motor.c: 27:          gpio_pin_direction_intialization (&(my_motor->mot
      +                          or[1]));
   781   001718  2846               	incf	ecu_motor_initialization@my_motor^0,w,c
   782   00171A  6E3F               	movwf	gpio_pin_direction_intialization@_pin_config^0,c
   783   00171C  EC01  F008         	call	_gpio_pin_direction_intialization	;wreg free
   784   001720                     l13:
   785   001720  0012               	return		;funcret
   786   001722                     __end_of_ecu_motor_initialization:
   787                           	callstack 0
   788                           
   789 ;; *************** function _ecu_led_on *****************
   790 ;; Defined at:
   791 ;;		line 37 in file "LED/ecu_led.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;  led             1   13[COMRAM] PTR const struct .
   794 ;;		 -> led(1), 
   795 ;; Auto vars:     Size  Location     Type
   796 ;;  mid_term        1   15[COMRAM] struct .
   797 ;;  ret             1    0        unsigned char 
   798 ;; Return value:  Size  Location     Type
   799 ;;                  1    wreg      unsigned char 
   800 ;; Registers used:
   801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   802 ;; Tracked objects:
   803 ;;		On entry : 0/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   807 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   808 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   809 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   810 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   811 ;;Total ram usage:        3 bytes
   812 ;; Hardware stack levels used: 1
   813 ;; Hardware stack levels required when called: 6
   814 ;; This function calls:
   815 ;;		_gpio_pin_write_logic
   816 ;; This function is called by:
   817 ;;		_main
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821                           	psect	text4
   822   001416                     __ptext4:
   823                           	callstack 0
   824   001416                     _ecu_led_on:
   825                           	callstack 24
   826   001416                     
   827                           ;LED/ecu_led.c: 40:     if(((void*)0)==led){
   828   001416  5047               	movf	ecu_led_on@led^0,w,c
   829   001418  A4D8               	btfss	status,2,c
   830   00141A  EF11  F00A         	goto	u821
   831   00141E  EF13  F00A         	goto	u820
   832   001422                     u821:
   833   001422  EF15  F00A         	goto	l157
   834   001426                     u820:
   835   001426                     
   836                           ;LED/ecu_led.c: 42:     }
   837   001426  EF3F  F00A         	goto	l161
   838   00142A                     l157:
   839                           
   840                           ;LED/ecu_led.c: 44:         pin_config_t mid_term={.port=led->port ,.pin=led->pin, .dire
      +                          ction=GPIO_DIRECTION_OUTPUT, .logic=led->led_logic};
   841   00142A  C036  F049         	movff	ecu_led_on@F3739,ecu_led_on@mid_term
   842   00142E  5047               	movf	ecu_led_on@led^0,w,c
   843   001430  6ED9               	movwf	fsr2l,c
   844   001432  6ADA               	clrf	fsr2h,c
   845   001434  50DF               	movf	223,w,c
   846   001436  0B0F               	andlw	15
   847   001438  6E48               	movwf	??_ecu_led_on^0,c
   848   00143A  5049               	movf	ecu_led_on@mid_term^0,w,c
   849   00143C  1848               	xorwf	??_ecu_led_on^0,w,c
   850   00143E  0BF8               	andlw	-8
   851   001440  1848               	xorwf	??_ecu_led_on^0,w,c
   852   001442  6E49               	movwf	ecu_led_on@mid_term^0,c
   853   001444  5047               	movf	ecu_led_on@led^0,w,c
   854   001446  6ED9               	movwf	fsr2l,c
   855   001448  6ADA               	clrf	fsr2h,c
   856   00144A  38DF               	swapf	223,w,c
   857   00144C  0B07               	andlw	7
   858   00144E  6E48               	movwf	??_ecu_led_on^0,c
   859   001450  4648               	rlncf	??_ecu_led_on^0,f,c
   860   001452  4648               	rlncf	??_ecu_led_on^0,f,c
   861   001454  4648               	rlncf	??_ecu_led_on^0,f,c
   862   001456  5049               	movf	ecu_led_on@mid_term^0,w,c
   863   001458  1848               	xorwf	??_ecu_led_on^0,w,c
   864   00145A  0BC7               	andlw	-57
   865   00145C  1848               	xorwf	??_ecu_led_on^0,w,c
   866   00145E  6E49               	movwf	ecu_led_on@mid_term^0,c
   867   001460  9C49               	bcf	ecu_led_on@mid_term^0,6,c
   868   001462  5047               	movf	ecu_led_on@led^0,w,c
   869   001464  6ED9               	movwf	fsr2l,c
   870   001466  6ADA               	clrf	fsr2h,c
   871   001468  AEDF               	btfss	indf2,7,c
   872   00146A  D002               	bra	u835
   873   00146C  8E49               	bsf	ecu_led_on@mid_term^0,7,c
   874   00146E  D001               	bra	u837
   875   001470                     u835:
   876   001470  9E49               	bcf	ecu_led_on@mid_term^0,7,c
   877   001472                     u837:
   878   001472                     
   879                           ;LED/ecu_led.c: 45:         gpio_pin_write_logic(&mid_term,GPIO_HIGH);
   880   001472  0E49               	movlw	low ecu_led_on@mid_term
   881   001474  6E3F               	movwf	gpio_pin_write_logic@_pin_config^0,c
   882   001476  0E01               	movlw	1
   883   001478  6E40               	movwf	gpio_pin_write_logic@logic^0,c
   884   00147A  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   885   00147E                     l161:
   886   00147E  0012               	return		;funcret
   887   001480                     __end_of_ecu_led_on:
   888                           	callstack 0
   889                           
   890 ;; *************** function _ecu_led_off *****************
   891 ;; Defined at:
   892 ;;		line 54 in file "LED/ecu_led.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;  led             1   13[COMRAM] PTR const struct .
   895 ;;		 -> led(1), 
   896 ;; Auto vars:     Size  Location     Type
   897 ;;  mid_term        1   15[COMRAM] struct .
   898 ;;  ret             1    0        unsigned char 
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      unsigned char 
   901 ;; Registers used:
   902 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   908 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   909 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   910 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   911 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   912 ;;Total ram usage:        3 bytes
   913 ;; Hardware stack levels used: 1
   914 ;; Hardware stack levels required when called: 6
   915 ;; This function calls:
   916 ;;		_gpio_pin_write_logic
   917 ;; This function is called by:
   918 ;;		_main
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           	psect	text5
   923   001480                     __ptext5:
   924                           	callstack 0
   925   001480                     _ecu_led_off:
   926                           	callstack 24
   927   001480                     
   928                           ;LED/ecu_led.c: 57:     if(((void*)0)==led){
   929   001480  5047               	movf	ecu_led_off@led^0,w,c
   930   001482  A4D8               	btfss	status,2,c
   931   001484  EF46  F00A         	goto	u841
   932   001488  EF48  F00A         	goto	u840
   933   00148C                     u841:
   934   00148C  EF4A  F00A         	goto	l164
   935   001490                     u840:
   936   001490                     
   937                           ;LED/ecu_led.c: 59:     }
   938   001490  EF74  F00A         	goto	l168
   939   001494                     l164:
   940                           
   941                           ;LED/ecu_led.c: 61:         pin_config_t mid_term={.port=led->port ,.pin=led->pin, .dire
      +                          ction=GPIO_DIRECTION_OUTPUT, .logic=led->led_logic};
   942   001494  C035  F049         	movff	ecu_led_off@F3744,ecu_led_off@mid_term
   943   001498  5047               	movf	ecu_led_off@led^0,w,c
   944   00149A  6ED9               	movwf	fsr2l,c
   945   00149C  6ADA               	clrf	fsr2h,c
   946   00149E  50DF               	movf	223,w,c
   947   0014A0  0B0F               	andlw	15
   948   0014A2  6E48               	movwf	??_ecu_led_off^0,c
   949   0014A4  5049               	movf	ecu_led_off@mid_term^0,w,c
   950   0014A6  1848               	xorwf	??_ecu_led_off^0,w,c
   951   0014A8  0BF8               	andlw	-8
   952   0014AA  1848               	xorwf	??_ecu_led_off^0,w,c
   953   0014AC  6E49               	movwf	ecu_led_off@mid_term^0,c
   954   0014AE  5047               	movf	ecu_led_off@led^0,w,c
   955   0014B0  6ED9               	movwf	fsr2l,c
   956   0014B2  6ADA               	clrf	fsr2h,c
   957   0014B4  38DF               	swapf	223,w,c
   958   0014B6  0B07               	andlw	7
   959   0014B8  6E48               	movwf	??_ecu_led_off^0,c
   960   0014BA  4648               	rlncf	??_ecu_led_off^0,f,c
   961   0014BC  4648               	rlncf	??_ecu_led_off^0,f,c
   962   0014BE  4648               	rlncf	??_ecu_led_off^0,f,c
   963   0014C0  5049               	movf	ecu_led_off@mid_term^0,w,c
   964   0014C2  1848               	xorwf	??_ecu_led_off^0,w,c
   965   0014C4  0BC7               	andlw	-57
   966   0014C6  1848               	xorwf	??_ecu_led_off^0,w,c
   967   0014C8  6E49               	movwf	ecu_led_off@mid_term^0,c
   968   0014CA  9C49               	bcf	ecu_led_off@mid_term^0,6,c
   969   0014CC  5047               	movf	ecu_led_off@led^0,w,c
   970   0014CE  6ED9               	movwf	fsr2l,c
   971   0014D0  6ADA               	clrf	fsr2h,c
   972   0014D2  AEDF               	btfss	indf2,7,c
   973   0014D4  D002               	bra	u855
   974   0014D6  8E49               	bsf	ecu_led_off@mid_term^0,7,c
   975   0014D8  D001               	bra	u857
   976   0014DA                     u855:
   977   0014DA  9E49               	bcf	ecu_led_off@mid_term^0,7,c
   978   0014DC                     u857:
   979   0014DC                     
   980                           ;LED/ecu_led.c: 62:         gpio_pin_write_logic(&mid_term,GPIO_LOW);
   981   0014DC  0E49               	movlw	low ecu_led_off@mid_term
   982   0014DE  6E3F               	movwf	gpio_pin_write_logic@_pin_config^0,c
   983   0014E0  0E00               	movlw	0
   984   0014E2  6E40               	movwf	gpio_pin_write_logic@logic^0,c
   985   0014E4  EC8A  F008         	call	_gpio_pin_write_logic	;wreg free
   986   0014E8                     l168:
   987   0014E8  0012               	return		;funcret
   988   0014EA                     __end_of_ecu_led_off:
   989                           	callstack 0
   990                           
   991 ;; *************** function _gpio_pin_write_logic *****************
   992 ;; Defined at:
   993 ;;		line 47 in file "GPIO_MODULES/hal_GPIO.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;  _pin_config     1    5[COMRAM] PTR const struct .
   996 ;;		 -> motor$motor(2), motor(2), ecu_led_off@mid_term(1), ecu_led_on@mid_term(1), 
   997 ;;  logic           1    6[COMRAM] enum E3664
   998 ;; Auto vars:     Size  Location     Type
   999 ;;  ret             1   12[COMRAM] unsigned char 
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      unsigned char 
  1002 ;; Registers used:
  1003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1009 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1010 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1011 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1012 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1013 ;;Total ram usage:        8 bytes
  1014 ;; Hardware stack levels used: 1
  1015 ;; Hardware stack levels required when called: 5
  1016 ;; This function calls:
  1017 ;;		Nothing
  1018 ;; This function is called by:
  1019 ;;		_ecu_motor_move_right
  1020 ;;		_ecu_motor_stop
  1021 ;;		_ecu_led_on
  1022 ;;		_ecu_led_off
  1023 ;;		_ecu_motor_move_left
  1024 ;;		_gpio_pin_initialization
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           	psect	text6
  1029   001114                     __ptext6:
  1030                           	callstack 0
  1031   001114                     _gpio_pin_write_logic:
  1032                           	callstack 24
  1033   001114                     
  1034                           ;GPIO_MODULES/hal_GPIO.c: 49:   Std_ReturnType ret = (Std_ReturnType)0x00;
  1035   001114  0E00               	movlw	0
  1036   001116  6E46               	movwf	gpio_pin_write_logic@ret^0,c
  1037                           
  1038                           ;GPIO_MODULES/hal_GPIO.c: 51:     if(((void*)0) == _pin_config || (_pin_config ->pin) > 
      +                          8 -1 ){
  1039   001118  503F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1040   00111A  B4D8               	btfsc	status,2,c
  1041   00111C  EF92  F008         	goto	u731
  1042   001120  EF94  F008         	goto	u730
  1043   001124                     u731:
  1044   001124  EFA4  F008         	goto	l1836
  1045   001128                     u730:
  1046   001128  503F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1047   00112A  6ED9               	movwf	fsr2l,c
  1048   00112C  6ADA               	clrf	fsr2h,c
  1049   00112E  30DF               	rrcf	223,w,c
  1050   001130  32E8               	rrcf	wreg,f,c
  1051   001132  32E8               	rrcf	wreg,f,c
  1052   001134  0B07               	andlw	7
  1053   001136  6E41               	movwf	??_gpio_pin_write_logic^0,c
  1054   001138  0E07               	movlw	7
  1055   00113A  6441               	cpfsgt	??_gpio_pin_write_logic^0,c
  1056   00113C  EFA2  F008         	goto	u741
  1057   001140  EFA4  F008         	goto	u740
  1058   001144                     u741:
  1059   001144  EFFB  F008         	goto	l1846
  1060   001148                     u740:
  1061   001148                     l1836:
  1062                           
  1063                           ;GPIO_MODULES/hal_GPIO.c: 52:         ret = (Std_ReturnType)0x01;
  1064   001148  0E01               	movlw	1
  1065   00114A  6E46               	movwf	gpio_pin_write_logic@ret^0,c
  1066                           
  1067                           ;GPIO_MODULES/hal_GPIO.c: 53:     }
  1068   00114C  EF10  F009         	goto	l1848
  1069   001150                     l1838:
  1070                           
  1071                           ;GPIO_MODULES/hal_GPIO.c: 59:                 (*(lat_reg[_pin_config->port]) &= ~((uint8
      +                          )1 << (_pin_config->pin)));
  1072   001150  503F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1073   001152  6ED9               	movwf	fsr2l,c
  1074   001154  6ADA               	clrf	fsr2h,c
  1075   001156  30DF               	rrcf	223,w,c
  1076   001158  32E8               	rrcf	wreg,f,c
  1077   00115A  32E8               	rrcf	wreg,f,c
  1078   00115C  0B07               	andlw	7
  1079   00115E  6E41               	movwf	??_gpio_pin_write_logic^0,c
  1080   001160  0E01               	movlw	1
  1081   001162  6E42               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1082   001164  2A41               	incf	??_gpio_pin_write_logic^0,f,c
  1083   001166  EFB7  F008         	goto	u754
  1084   00116A                     u755:
  1085   00116A  90D8               	bcf	status,0,c
  1086   00116C  3642               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1087   00116E                     u754:
  1088   00116E  2E41               	decfsz	??_gpio_pin_write_logic^0,f,c
  1089   001170  EFB5  F008         	goto	u755
  1090   001174  5042               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1091   001176  0AFF               	xorlw	255
  1092   001178  6E43               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1093   00117A  503F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1094   00117C  6ED9               	movwf	fsr2l,c
  1095   00117E  6ADA               	clrf	fsr2h,c
  1096   001180  50DF               	movf	223,w,c
  1097   001182  0B07               	andlw	7
  1098   001184  0D02               	mullw	2
  1099   001186  50F3               	movf	243,w,c
  1100   001188  0F0B               	addlw	low _lat_reg
  1101   00118A  6ED9               	movwf	fsr2l,c
  1102   00118C  6ADA               	clrf	fsr2h,c
  1103   00118E  CFDE F044          	movff	postinc2,??_gpio_pin_write_logic+3
  1104   001192  CFDD F045          	movff	postdec2,??_gpio_pin_write_logic+4
  1105   001196  C044  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1106   00119A  C045  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1107   00119E  5043               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1108   0011A0  16DF               	andwf	indf2,f,c
  1109                           
  1110                           ;GPIO_MODULES/hal_GPIO.c: 60:                 break;
  1111   0011A2  EF10  F009         	goto	l1848
  1112   0011A6                     l1840:
  1113                           
  1114                           ;GPIO_MODULES/hal_GPIO.c: 62:                 (*(lat_reg[_pin_config->port]) |= ((uint8)
      +                          1 << (_pin_config->pin)));
  1115   0011A6  503F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1116   0011A8  6ED9               	movwf	fsr2l,c
  1117   0011AA  6ADA               	clrf	fsr2h,c
  1118   0011AC  30DF               	rrcf	223,w,c
  1119   0011AE  32E8               	rrcf	wreg,f,c
  1120   0011B0  32E8               	rrcf	wreg,f,c
  1121   0011B2  0B07               	andlw	7
  1122   0011B4  6E41               	movwf	??_gpio_pin_write_logic^0,c
  1123   0011B6  0E01               	movlw	1
  1124   0011B8  6E42               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1125   0011BA  2A41               	incf	??_gpio_pin_write_logic^0,f,c
  1126   0011BC  EFE2  F008         	goto	u764
  1127   0011C0                     u765:
  1128   0011C0  90D8               	bcf	status,0,c
  1129   0011C2  3642               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1130   0011C4                     u764:
  1131   0011C4  2E41               	decfsz	??_gpio_pin_write_logic^0,f,c
  1132   0011C6  EFE0  F008         	goto	u765
  1133   0011CA  503F               	movf	gpio_pin_write_logic@_pin_config^0,w,c
  1134   0011CC  6ED9               	movwf	fsr2l,c
  1135   0011CE  6ADA               	clrf	fsr2h,c
  1136   0011D0  50DF               	movf	223,w,c
  1137   0011D2  0B07               	andlw	7
  1138   0011D4  0D02               	mullw	2
  1139   0011D6  50F3               	movf	243,w,c
  1140   0011D8  0F0B               	addlw	low _lat_reg
  1141   0011DA  6ED9               	movwf	fsr2l,c
  1142   0011DC  6ADA               	clrf	fsr2h,c
  1143   0011DE  CFDE F043          	movff	postinc2,??_gpio_pin_write_logic+2
  1144   0011E2  CFDD F044          	movff	postdec2,??_gpio_pin_write_logic+3
  1145   0011E6  C043  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1146   0011EA  C044  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1147   0011EE  5042               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1148   0011F0  12DF               	iorwf	indf2,f,c
  1149                           
  1150                           ;GPIO_MODULES/hal_GPIO.c: 63:                 break;
  1151   0011F2  EF10  F009         	goto	l1848
  1152   0011F6                     l1846:
  1153   0011F6  5040               	movf	gpio_pin_write_logic@logic^0,w,c
  1154   0011F8  6E41               	movwf	??_gpio_pin_write_logic^0,c
  1155   0011FA  6A42               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1156                           
  1157                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1158                           ; Switch size 1, requested type "simple"
  1159                           ; Number of cases is 1, Range of values is 0 to 0
  1160                           ; switch strategies available:
  1161                           ; Name         Instructions Cycles
  1162                           ; simple_byte            4     3 (average)
  1163                           ;	Chosen strategy is simple_byte
  1164   0011FC  5042               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1165   0011FE  0A00               	xorlw	0	; case 0
  1166   001200  B4D8               	btfsc	status,2,c
  1167   001202  EF05  F009         	goto	l2026
  1168   001206  EFA4  F008         	goto	l1836
  1169   00120A                     l2026:
  1170                           
  1171                           ; Switch size 1, requested type "simple"
  1172                           ; Number of cases is 2, Range of values is 0 to 1
  1173                           ; switch strategies available:
  1174                           ; Name         Instructions Cycles
  1175                           ; simple_byte            7     4 (average)
  1176                           ;	Chosen strategy is simple_byte
  1177   00120A  5041               	movf	??_gpio_pin_write_logic^0,w,c
  1178   00120C  0A00               	xorlw	0	; case 0
  1179   00120E  B4D8               	btfsc	status,2,c
  1180   001210  EFA8  F008         	goto	l1838
  1181   001214  0A01               	xorlw	1	; case 1
  1182   001216  B4D8               	btfsc	status,2,c
  1183   001218  EFD3  F008         	goto	l1840
  1184   00121C  EFA4  F008         	goto	l1836
  1185   001220                     l1848:
  1186                           
  1187                           ;GPIO_MODULES/hal_GPIO.c: 70:     return ret;
  1188   001220  5046               	movf	gpio_pin_write_logic@ret^0,w,c
  1189   001222  0012               	return		;funcret
  1190   001224                     __end_of_gpio_pin_write_logic:
  1191                           	callstack 0
  1192                           
  1193 ;; *************** function _ecu_led_initialization *****************
  1194 ;; Defined at:
  1195 ;;		line 20 in file "LED/ecu_led.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;  led             1   12[COMRAM] PTR const struct .
  1198 ;;		 -> led(1), 
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;  mid_term        1   14[COMRAM] struct .
  1201 ;;  ret             1    0        unsigned char 
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  1    wreg      unsigned char 
  1204 ;; Registers used:
  1205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1211 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1213 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1214 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1215 ;;Total ram usage:        3 bytes
  1216 ;; Hardware stack levels used: 1
  1217 ;; Hardware stack levels required when called: 6
  1218 ;; This function calls:
  1219 ;;		_gpio_pin_direction_intialization
  1220 ;; This function is called by:
  1221 ;;		_main
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           	psect	text7
  1226   0014EA                     __ptext7:
  1227                           	callstack 0
  1228   0014EA                     _ecu_led_initialization:
  1229                           	callstack 24
  1230   0014EA                     
  1231                           ;LED/ecu_led.c: 23:     if(((void*)0)==led){
  1232   0014EA  5046               	movf	ecu_led_initialization@led^0,w,c
  1233   0014EC  A4D8               	btfss	status,2,c
  1234   0014EE  EF7B  F00A         	goto	u801
  1235   0014F2  EF7D  F00A         	goto	u800
  1236   0014F6                     u801:
  1237   0014F6  EF7F  F00A         	goto	l150
  1238   0014FA                     u800:
  1239   0014FA                     
  1240                           ;LED/ecu_led.c: 25:     }
  1241   0014FA  EFA7  F00A         	goto	l154
  1242   0014FE                     l150:
  1243                           
  1244                           ;LED/ecu_led.c: 27:         pin_config_t mid_term={.port=led->port ,.pin=led->pin, .dire
      +                          ction=GPIO_DIRECTION_OUTPUT, .logic=led->led_logic};
  1245   0014FE  C037  F048         	movff	ecu_led_initialization@F3734,ecu_led_initialization@mid_term
  1246   001502  5046               	movf	ecu_led_initialization@led^0,w,c
  1247   001504  6ED9               	movwf	fsr2l,c
  1248   001506  6ADA               	clrf	fsr2h,c
  1249   001508  50DF               	movf	223,w,c
  1250   00150A  0B0F               	andlw	15
  1251   00150C  6E47               	movwf	??_ecu_led_initialization^0,c
  1252   00150E  5048               	movf	ecu_led_initialization@mid_term^0,w,c
  1253   001510  1847               	xorwf	??_ecu_led_initialization^0,w,c
  1254   001512  0BF8               	andlw	-8
  1255   001514  1847               	xorwf	??_ecu_led_initialization^0,w,c
  1256   001516  6E48               	movwf	ecu_led_initialization@mid_term^0,c
  1257   001518  5046               	movf	ecu_led_initialization@led^0,w,c
  1258   00151A  6ED9               	movwf	fsr2l,c
  1259   00151C  6ADA               	clrf	fsr2h,c
  1260   00151E  38DF               	swapf	223,w,c
  1261   001520  0B07               	andlw	7
  1262   001522  6E47               	movwf	??_ecu_led_initialization^0,c
  1263   001524  4647               	rlncf	??_ecu_led_initialization^0,f,c
  1264   001526  4647               	rlncf	??_ecu_led_initialization^0,f,c
  1265   001528  4647               	rlncf	??_ecu_led_initialization^0,f,c
  1266   00152A  5048               	movf	ecu_led_initialization@mid_term^0,w,c
  1267   00152C  1847               	xorwf	??_ecu_led_initialization^0,w,c
  1268   00152E  0BC7               	andlw	-57
  1269   001530  1847               	xorwf	??_ecu_led_initialization^0,w,c
  1270   001532  6E48               	movwf	ecu_led_initialization@mid_term^0,c
  1271   001534  9C48               	bcf	ecu_led_initialization@mid_term^0,6,c
  1272   001536  5046               	movf	ecu_led_initialization@led^0,w,c
  1273   001538  6ED9               	movwf	fsr2l,c
  1274   00153A  6ADA               	clrf	fsr2h,c
  1275   00153C  AEDF               	btfss	indf2,7,c
  1276   00153E  D002               	bra	u815
  1277   001540  8E48               	bsf	ecu_led_initialization@mid_term^0,7,c
  1278   001542  D001               	bra	u817
  1279   001544                     u815:
  1280   001544  9E48               	bcf	ecu_led_initialization@mid_term^0,7,c
  1281   001546                     u817:
  1282   001546                     
  1283                           ;LED/ecu_led.c: 28:         gpio_pin_direction_intialization(&mid_term);
  1284   001546  0E48               	movlw	low ecu_led_initialization@mid_term
  1285   001548  6E3F               	movwf	gpio_pin_direction_intialization@_pin_config^0,c
  1286   00154A  EC01  F008         	call	_gpio_pin_direction_intialization	;wreg free
  1287   00154E                     l154:
  1288   00154E  0012               	return		;funcret
  1289   001550                     __end_of_ecu_led_initialization:
  1290                           	callstack 0
  1291                           
  1292 ;; *************** function _gpio_pin_direction_intialization *****************
  1293 ;; Defined at:
  1294 ;;		line 18 in file "GPIO_MODULES/hal_GPIO.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;  _pin_config     1    5[COMRAM] PTR const struct .
  1297 ;;		 -> motor$motor(2), motor(2), ecu_led_initialization@mid_term(1), 
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;  ret             1   11[COMRAM] unsigned char 
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  1    wreg      unsigned char 
  1302 ;; Registers used:
  1303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1309 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1310 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1311 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1312 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1313 ;;Total ram usage:        7 bytes
  1314 ;; Hardware stack levels used: 1
  1315 ;; Hardware stack levels required when called: 5
  1316 ;; This function calls:
  1317 ;;		Nothing
  1318 ;; This function is called by:
  1319 ;;		_ecu_motor_initialization
  1320 ;;		_ecu_led_initialization
  1321 ;;		_gpio_pin_initialization
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           	psect	text8
  1326   001002                     __ptext8:
  1327                           	callstack 0
  1328   001002                     _gpio_pin_direction_intialization:
  1329                           	callstack 24
  1330   001002                     
  1331                           ;GPIO_MODULES/hal_GPIO.c: 20:     Std_ReturnType ret = (Std_ReturnType)0x00;
  1332   001002  0E00               	movlw	0
  1333   001004  6E45               	movwf	gpio_pin_direction_intialization@ret^0,c
  1334                           
  1335                           ;GPIO_MODULES/hal_GPIO.c: 22:     if(((void*)0) == _pin_config || (_pin_config ->pin) > 
      +                          8 ){
  1336   001006  503F               	movf	gpio_pin_direction_intialization@_pin_config^0,w,c
  1337   001008  B4D8               	btfsc	status,2,c
  1338   00100A  EF09  F008         	goto	u681
  1339   00100E  EF0B  F008         	goto	u680
  1340   001012                     u681:
  1341   001012  EF1B  F008         	goto	l1816
  1342   001016                     u680:
  1343   001016  503F               	movf	gpio_pin_direction_intialization@_pin_config^0,w,c
  1344   001018  6ED9               	movwf	fsr2l,c
  1345   00101A  6ADA               	clrf	fsr2h,c
  1346   00101C  30DF               	rrcf	223,w,c
  1347   00101E  32E8               	rrcf	wreg,f,c
  1348   001020  32E8               	rrcf	wreg,f,c
  1349   001022  0B07               	andlw	7
  1350   001024  6E40               	movwf	??_gpio_pin_direction_intialization^0,c
  1351   001026  0E08               	movlw	8
  1352   001028  6440               	cpfsgt	??_gpio_pin_direction_intialization^0,c
  1353   00102A  EF19  F008         	goto	u691
  1354   00102E  EF1B  F008         	goto	u690
  1355   001032                     u691:
  1356   001032  EF72  F008         	goto	l1826
  1357   001036                     u690:
  1358   001036                     l1816:
  1359                           
  1360                           ;GPIO_MODULES/hal_GPIO.c: 23:         ret = (Std_ReturnType)0x01;
  1361   001036  0E01               	movlw	1
  1362   001038  6E45               	movwf	gpio_pin_direction_intialization@ret^0,c
  1363                           
  1364                           ;GPIO_MODULES/hal_GPIO.c: 24:     }
  1365   00103A  EF88  F008         	goto	l1828
  1366   00103E                     l1818:
  1367                           
  1368                           ;GPIO_MODULES/hal_GPIO.c: 30:                 (*(tris_reg[_pin_config->port]) &= ~((uint
      +                          8)1 << (_pin_config->pin)));
  1369   00103E  503F               	movf	gpio_pin_direction_intialization@_pin_config^0,w,c
  1370   001040  6ED9               	movwf	fsr2l,c
  1371   001042  6ADA               	clrf	fsr2h,c
  1372   001044  30DF               	rrcf	223,w,c
  1373   001046  32E8               	rrcf	wreg,f,c
  1374   001048  32E8               	rrcf	wreg,f,c
  1375   00104A  0B07               	andlw	7
  1376   00104C  6E40               	movwf	??_gpio_pin_direction_intialization^0,c
  1377   00104E  0E01               	movlw	1
  1378   001050  6E41               	movwf	(??_gpio_pin_direction_intialization+1)^0,c
  1379   001052  2A40               	incf	??_gpio_pin_direction_intialization^0,f,c
  1380   001054  EF2E  F008         	goto	u704
  1381   001058                     u705:
  1382   001058  90D8               	bcf	status,0,c
  1383   00105A  3641               	rlcf	(??_gpio_pin_direction_intialization+1)^0,f,c
  1384   00105C                     u704:
  1385   00105C  2E40               	decfsz	??_gpio_pin_direction_intialization^0,f,c
  1386   00105E  EF2C  F008         	goto	u705
  1387   001062  5041               	movf	(??_gpio_pin_direction_intialization+1)^0,w,c
  1388   001064  0AFF               	xorlw	255
  1389   001066  6E42               	movwf	(??_gpio_pin_direction_intialization+2)^0,c
  1390   001068  503F               	movf	gpio_pin_direction_intialization@_pin_config^0,w,c
  1391   00106A  6ED9               	movwf	fsr2l,c
  1392   00106C  6ADA               	clrf	fsr2h,c
  1393   00106E  50DF               	movf	223,w,c
  1394   001070  0B07               	andlw	7
  1395   001072  0D02               	mullw	2
  1396   001074  50F3               	movf	243,w,c
  1397   001076  0F15               	addlw	low _tris_reg
  1398   001078  6ED9               	movwf	fsr2l,c
  1399   00107A  6ADA               	clrf	fsr2h,c
  1400   00107C  CFDE F043          	movff	postinc2,??_gpio_pin_direction_intialization+3
  1401   001080  CFDD F044          	movff	postdec2,??_gpio_pin_direction_intialization+4
  1402   001084  C043  FFD9         	movff	??_gpio_pin_direction_intialization+3,fsr2l
  1403   001088  C044  FFDA         	movff	??_gpio_pin_direction_intialization+4,fsr2h
  1404   00108C  5042               	movf	(??_gpio_pin_direction_intialization+2)^0,w,c
  1405   00108E  16DF               	andwf	indf2,f,c
  1406                           
  1407                           ;GPIO_MODULES/hal_GPIO.c: 31:                 break;
  1408   001090  EF88  F008         	goto	l1828
  1409   001094                     l1820:
  1410                           
  1411                           ;GPIO_MODULES/hal_GPIO.c: 33:                 (*(tris_reg[_pin_config->port]) |= ((uint8
      +                          )1 << (_pin_config->pin)));
  1412   001094  503F               	movf	gpio_pin_direction_intialization@_pin_config^0,w,c
  1413   001096  6ED9               	movwf	fsr2l,c
  1414   001098  6ADA               	clrf	fsr2h,c
  1415   00109A  30DF               	rrcf	223,w,c
  1416   00109C  32E8               	rrcf	wreg,f,c
  1417   00109E  32E8               	rrcf	wreg,f,c
  1418   0010A0  0B07               	andlw	7
  1419   0010A2  6E40               	movwf	??_gpio_pin_direction_intialization^0,c
  1420   0010A4  0E01               	movlw	1
  1421   0010A6  6E41               	movwf	(??_gpio_pin_direction_intialization+1)^0,c
  1422   0010A8  2A40               	incf	??_gpio_pin_direction_intialization^0,f,c
  1423   0010AA  EF59  F008         	goto	u714
  1424   0010AE                     u715:
  1425   0010AE  90D8               	bcf	status,0,c
  1426   0010B0  3641               	rlcf	(??_gpio_pin_direction_intialization+1)^0,f,c
  1427   0010B2                     u714:
  1428   0010B2  2E40               	decfsz	??_gpio_pin_direction_intialization^0,f,c
  1429   0010B4  EF57  F008         	goto	u715
  1430   0010B8  503F               	movf	gpio_pin_direction_intialization@_pin_config^0,w,c
  1431   0010BA  6ED9               	movwf	fsr2l,c
  1432   0010BC  6ADA               	clrf	fsr2h,c
  1433   0010BE  50DF               	movf	223,w,c
  1434   0010C0  0B07               	andlw	7
  1435   0010C2  0D02               	mullw	2
  1436   0010C4  50F3               	movf	243,w,c
  1437   0010C6  0F15               	addlw	low _tris_reg
  1438   0010C8  6ED9               	movwf	fsr2l,c
  1439   0010CA  6ADA               	clrf	fsr2h,c
  1440   0010CC  CFDE F042          	movff	postinc2,??_gpio_pin_direction_intialization+2
  1441   0010D0  CFDD F043          	movff	postdec2,??_gpio_pin_direction_intialization+3
  1442   0010D4  C042  FFD9         	movff	??_gpio_pin_direction_intialization+2,fsr2l
  1443   0010D8  C043  FFDA         	movff	??_gpio_pin_direction_intialization+3,fsr2h
  1444   0010DC  5041               	movf	(??_gpio_pin_direction_intialization+1)^0,w,c
  1445   0010DE  12DF               	iorwf	indf2,f,c
  1446                           
  1447                           ;GPIO_MODULES/hal_GPIO.c: 34:                 break;
  1448   0010E0  EF88  F008         	goto	l1828
  1449   0010E4                     l1826:
  1450   0010E4  503F               	movf	gpio_pin_direction_intialization@_pin_config^0,w,c
  1451   0010E6  6ED9               	movwf	fsr2l,c
  1452   0010E8  6ADA               	clrf	fsr2h,c
  1453   0010EA  BCDF               	btfsc	indf2,6,c
  1454   0010EC  EF7A  F008         	goto	u721
  1455   0010F0  EF7D  F008         	goto	u720
  1456   0010F4                     u721:
  1457   0010F4  0E01               	movlw	1
  1458   0010F6  EF7E  F008         	goto	u726
  1459   0010FA                     u720:
  1460   0010FA  0E00               	movlw	0
  1461   0010FC                     u726:
  1462                           
  1463                           ; Switch size 1, requested type "simple"
  1464                           ; Number of cases is 2, Range of values is 0 to 1
  1465                           ; switch strategies available:
  1466                           ; Name         Instructions Cycles
  1467                           ; simple_byte            7     4 (average)
  1468                           ;	Chosen strategy is simple_byte
  1469   0010FC  0A00               	xorlw	0	; case 0
  1470   0010FE  B4D8               	btfsc	status,2,c
  1471   001100  EF1F  F008         	goto	l1818
  1472   001104  0A01               	xorlw	1	; case 1
  1473   001106  B4D8               	btfsc	status,2,c
  1474   001108  EF4A  F008         	goto	l1820
  1475   00110C  EF1B  F008         	goto	l1816
  1476   001110                     l1828:
  1477                           
  1478                           ;GPIO_MODULES/hal_GPIO.c: 41:     return ret;
  1479   001110  5045               	movf	gpio_pin_direction_intialization@ret^0,w,c
  1480   001112  0012               	return		;funcret
  1481   001114                     __end_of_gpio_pin_direction_intialization:
  1482                           	callstack 0
  1483                           
  1484 ;; *************** function _SYSTEM_Initialize *****************
  1485 ;; Defined at:
  1486 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;		None
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;		None
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      void 
  1493 ;; Registers used:
  1494 ;;		wreg, status,2, status,0, cstack
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;Total ram usage:        0 bytes
  1505 ;; Hardware stack levels used: 1
  1506 ;; Hardware stack levels required when called: 6
  1507 ;; This function calls:
  1508 ;;		_I2C_Initialize
  1509 ;;		_INTERRUPT_Initialize
  1510 ;;		_OSCILLATOR_Initialize
  1511 ;;		_PIN_MANAGER_Initialize
  1512 ;; This function is called by:
  1513 ;;		_main
  1514 ;; This function uses a non-reentrant model
  1515 ;;
  1516                           
  1517                           	psect	text9
  1518   0017B2                     __ptext9:
  1519                           	callstack 0
  1520   0017B2                     _SYSTEM_Initialize:
  1521                           	callstack 24
  1522   0017B2                     
  1523                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  1524   0017B2  EC27  F00C         	call	_INTERRUPT_Initialize	;wreg free
  1525   0017B6                     
  1526                           ;mcc_generated_files/mcc.c: 54:     I2C_Initialize();
  1527   0017B6  ECE2  F00B         	call	_I2C_Initialize	;wreg free
  1528   0017BA                     
  1529                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  1530   0017BA  EC22  F00B         	call	_PIN_MANAGER_Initialize	;wreg free
  1531   0017BE                     
  1532                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  1533   0017BE  ECEA  F00B         	call	_OSCILLATOR_Initialize	;wreg free
  1534   0017C2  0012               	return		;funcret
  1535   0017C4                     __end_of_SYSTEM_Initialize:
  1536                           	callstack 0
  1537                           
  1538 ;; *************** function _PIN_MANAGER_Initialize *****************
  1539 ;; Defined at:
  1540 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;		None
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;		None
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      void 
  1547 ;; Registers used:
  1548 ;;		wreg, status,2
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1558 ;;Total ram usage:        0 bytes
  1559 ;; Hardware stack levels used: 1
  1560 ;; Hardware stack levels required when called: 5
  1561 ;; This function calls:
  1562 ;;		Nothing
  1563 ;; This function is called by:
  1564 ;;		_SYSTEM_Initialize
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           	psect	text10
  1569   001644                     __ptext10:
  1570                           	callstack 0
  1571   001644                     _PIN_MANAGER_Initialize:
  1572                           	callstack 24
  1573   001644                     
  1574                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  1575   001644  0E00               	movlw	0
  1576   001646  6E8D               	movwf	141,c	;volatile
  1577                           
  1578                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  1579   001648  0E00               	movlw	0
  1580   00164A  6E8C               	movwf	140,c	;volatile
  1581                           
  1582                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  1583   00164C  0E00               	movlw	0
  1584   00164E  6E89               	movwf	137,c	;volatile
  1585                           
  1586                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  1587   001650  0E00               	movlw	0
  1588   001652  6E8A               	movwf	138,c	;volatile
  1589                           
  1590                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  1591   001654  0E00               	movlw	0
  1592   001656  6E8B               	movwf	139,c	;volatile
  1593                           
  1594                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  1595   001658  0E07               	movlw	7
  1596   00165A  6E96               	movwf	150,c	;volatile
  1597   00165C                     
  1598                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  1599   00165C  6892               	setf	146,c	;volatile
  1600   00165E                     
  1601                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  1602   00165E  6893               	setf	147,c	;volatile
  1603   001660                     
  1604                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  1605   001660  6894               	setf	148,c	;volatile
  1606   001662                     
  1607                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  1608   001662  6895               	setf	149,c	;volatile
  1609   001664                     
  1610                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
  1611   001664  687E               	setf	126,c	;volatile
  1612                           
  1613                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
  1614   001666  0E1F               	movlw	31
  1615   001668  6E7F               	movwf	127,c	;volatile
  1616                           
  1617                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  1618   00166A  0E00               	movlw	0
  1619   00166C  6E7C               	movwf	124,c	;volatile
  1620   00166E                     
  1621                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  1622   00166E  8EF1               	bsf	241,7,c	;volatile
  1623   001670  0012               	return		;funcret
  1624   001672                     __end_of_PIN_MANAGER_Initialize:
  1625                           	callstack 0
  1626                           
  1627 ;; *************** function _OSCILLATOR_Initialize *****************
  1628 ;; Defined at:
  1629 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;		None
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;		None
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  1    wreg      void 
  1636 ;; Registers used:
  1637 ;;		wreg, status,2
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1647 ;;Total ram usage:        0 bytes
  1648 ;; Hardware stack levels used: 1
  1649 ;; Hardware stack levels required when called: 5
  1650 ;; This function calls:
  1651 ;;		Nothing
  1652 ;; This function is called by:
  1653 ;;		_SYSTEM_Initialize
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           	psect	text11
  1658   0017D4                     __ptext11:
  1659                           	callstack 0
  1660   0017D4                     _OSCILLATOR_Initialize:
  1661                           	callstack 24
  1662   0017D4                     
  1663                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x30;
  1664   0017D4  0E30               	movlw	48
  1665   0017D6  6ED3               	movwf	211,c	;volatile
  1666                           
  1667                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  1668   0017D8  0E00               	movlw	0
  1669   0017DA  6E9B               	movwf	155,c	;volatile
  1670   0017DC  0012               	return		;funcret
  1671   0017DE                     __end_of_OSCILLATOR_Initialize:
  1672                           	callstack 0
  1673                           
  1674 ;; *************** function _INTERRUPT_Initialize *****************
  1675 ;; Defined at:
  1676 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;		None
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;		None
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  1    wreg      void 
  1683 ;; Registers used:
  1684 ;;		None
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;Total ram usage:        0 bytes
  1695 ;; Hardware stack levels used: 1
  1696 ;; Hardware stack levels required when called: 5
  1697 ;; This function calls:
  1698 ;;		Nothing
  1699 ;; This function is called by:
  1700 ;;		_SYSTEM_Initialize
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           	psect	text12
  1705   00184E                     __ptext12:
  1706                           	callstack 0
  1707   00184E                     _INTERRUPT_Initialize:
  1708                           	callstack 24
  1709   00184E                     
  1710                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  1711   00184E  9ED0               	bcf	208,7,c	;volatile
  1712   001850  0012               	return		;funcret
  1713   001852                     __end_of_INTERRUPT_Initialize:
  1714                           	callstack 0
  1715                           
  1716 ;; *************** function _I2C_Initialize *****************
  1717 ;; Defined at:
  1718 ;;		line 108 in file "mcc_generated_files/i2c_slave.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;		None
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;		None
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      void 
  1725 ;; Registers used:
  1726 ;;		wreg, status,2, status,0
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1736 ;;Total ram usage:        0 bytes
  1737 ;; Hardware stack levels used: 1
  1738 ;; Hardware stack levels required when called: 5
  1739 ;; This function calls:
  1740 ;;		Nothing
  1741 ;; This function is called by:
  1742 ;;		_SYSTEM_Initialize
  1743 ;;		_I2C_Enable
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text13
  1748   0017C4                     __ptext13:
  1749                           	callstack 0
  1750   0017C4                     _I2C_Initialize:
  1751                           	callstack 24
  1752   0017C4                     
  1753                           ;mcc_generated_files/i2c_slave.c: 110:     SSPSTAT = 0x00;
  1754   0017C4  0E00               	movlw	0
  1755   0017C6  6EC7               	movwf	199,c	;volatile
  1756   0017C8                     
  1757                           ;mcc_generated_files/i2c_slave.c: 111:     SSPCON1 |= 0x06;
  1758   0017C8  0E06               	movlw	6
  1759   0017CA  12C6               	iorwf	198,f,c	;volatile
  1760   0017CC                     
  1761                           ;mcc_generated_files/i2c_slave.c: 112:     SSPCON2 = 0x00;
  1762   0017CC  0E00               	movlw	0
  1763   0017CE  6EC5               	movwf	197,c	;volatile
  1764   0017D0                     
  1765                           ;mcc_generated_files/i2c_slave.c: 113:     SSPCON1bits.SSPEN = 0;
  1766   0017D0  9AC6               	bcf	198,5,c	;volatile
  1767   0017D2  0012               	return		;funcret
  1768   0017D4                     __end_of_I2C_Initialize:
  1769                           	callstack 0
  1770                           
  1771 ;; *************** function _I2C_Open *****************
  1772 ;; Defined at:
  1773 ;;		line 116 in file "mcc_generated_files/i2c_slave.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;		None
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;		None
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  1    wreg      void 
  1780 ;; Registers used:
  1781 ;;		wreg, status,2, status,0, cstack
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1791 ;;Total ram usage:        0 bytes
  1792 ;; Hardware stack levels used: 1
  1793 ;; Hardware stack levels required when called: 6
  1794 ;; This function calls:
  1795 ;;		_I2C_SlaveEnableIrq
  1796 ;;		_I2C_SlaveOpen
  1797 ;;		_I2C_SlaveSetAddrIntHandler
  1798 ;;		_I2C_SlaveSetBusColIntHandler
  1799 ;;		_I2C_SlaveSetIsrHandler
  1800 ;;		_I2C_SlaveSetReadIntHandler
  1801 ;;		_I2C_SlaveSetSlaveAddr
  1802 ;;		_I2C_SlaveSetSlaveMask
  1803 ;;		_I2C_SlaveSetWrColIntHandler
  1804 ;;		_I2C_SlaveSetWriteIntHandler
  1805 ;; This function is called by:
  1806 ;;		_main
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           	psect	text14
  1811   001550                     __ptext14:
  1812                           	callstack 0
  1813   001550                     _I2C_Open:
  1814                           	callstack 24
  1815   001550                     
  1816                           ;mcc_generated_files/i2c_slave.c: 118:     I2C_SlaveOpen();
  1817   001550  ECA2  F00B         	call	_I2C_SlaveOpen	;wreg free
  1818                           
  1819                           ;mcc_generated_files/i2c_slave.c: 119:     I2C_SlaveSetSlaveAddr(0x03);
  1820   001554  0E03               	movlw	3
  1821   001556  ECFE  F00B         	call	_I2C_SlaveSetSlaveAddr
  1822                           
  1823                           ;mcc_generated_files/i2c_slave.c: 120:     I2C_SlaveSetSlaveMask(127);
  1824   00155A  0E7F               	movlw	127
  1825   00155C  ECF9  F00B         	call	_I2C_SlaveSetSlaveMask
  1826                           
  1827                           ;mcc_generated_files/i2c_slave.c: 121:     I2C_SlaveSetIsrHandler(I2C_Isr);
  1828   001560  0E24               	movlw	low _I2C_Isr
  1829   001562  6E3F               	movwf	I2C_SlaveSetIsrHandler@handler^0,c
  1830   001564  0E12               	movlw	high _I2C_Isr
  1831   001566  6E40               	movwf	(I2C_SlaveSetIsrHandler@handler+1)^0,c
  1832   001568  EC08  F00C         	call	_I2C_SlaveSetIsrHandler	;wreg free
  1833                           
  1834                           ;mcc_generated_files/i2c_slave.c: 122:     I2C_SlaveSetBusColIntHandler(I2C_SlaveDefBusC
      +                          olInterruptHandler);
  1835   00156C  0E00               	movlw	0
  1836   00156E  6E3F               	movwf	I2C_SlaveSetBusColIntHandler@handler^0,c
  1837   001570  0E00               	movlw	0
  1838   001572  6E40               	movwf	(I2C_SlaveSetBusColIntHandler@handler+1)^0,c
  1839   001574  EC0D  F00C         	call	_I2C_SlaveSetBusColIntHandler	;wreg free
  1840                           
  1841                           ;mcc_generated_files/i2c_slave.c: 123:     I2C_SlaveSetWriteIntHandler(I2C_SlaveDefWrInt
      +                          erruptHandler);
  1842   001578  0E2E               	movlw	low _I2C_SlaveDefWrInterruptHandler
  1843   00157A  6E3F               	movwf	I2C_SlaveSetWriteIntHandler@handler^0,c
  1844   00157C  0E18               	movlw	high _I2C_SlaveDefWrInterruptHandler
  1845   00157E  6E40               	movwf	(I2C_SlaveSetWriteIntHandler@handler+1)^0,c
  1846   001580  ECEF  F00B         	call	_I2C_SlaveSetWriteIntHandler	;wreg free
  1847                           
  1848                           ;mcc_generated_files/i2c_slave.c: 124:     I2C_SlaveSetReadIntHandler(I2C_SlaveDefRdInte
      +                          rruptHandler);
  1849   001584  0E3E               	movlw	low _I2C_SlaveDefRdInterruptHandler
  1850   001586  6E3F               	movwf	I2C_SlaveSetReadIntHandler@handler^0,c
  1851   001588  0E18               	movlw	high _I2C_SlaveDefRdInterruptHandler
  1852   00158A  6E40               	movwf	(I2C_SlaveSetReadIntHandler@handler+1)^0,c
  1853   00158C  EC03  F00C         	call	_I2C_SlaveSetReadIntHandler	;wreg free
  1854                           
  1855                           ;mcc_generated_files/i2c_slave.c: 125:     I2C_SlaveSetAddrIntHandler(I2C_SlaveDefAddrIn
      +                          terruptHandler);
  1856   001590  0E46               	movlw	low _I2C_SlaveDefAddrInterruptHandler
  1857   001592  6E3F               	movwf	I2C_SlaveSetAddrIntHandler@handler^0,c
  1858   001594  0E18               	movlw	high _I2C_SlaveDefAddrInterruptHandler
  1859   001596  6E40               	movwf	(I2C_SlaveSetAddrIntHandler@handler+1)^0,c
  1860   001598  EC12  F00C         	call	_I2C_SlaveSetAddrIntHandler	;wreg free
  1861                           
  1862                           ;mcc_generated_files/i2c_slave.c: 126:     I2C_SlaveSetWrColIntHandler(I2C_SlaveDefWrCol
      +                          InterruptHandler);
  1863   00159C  0E00               	movlw	0
  1864   00159E  6E3F               	movwf	I2C_SlaveSetWrColIntHandler@handler^0,c
  1865   0015A0  0E00               	movlw	0
  1866   0015A2  6E40               	movwf	(I2C_SlaveSetWrColIntHandler@handler+1)^0,c
  1867   0015A4  ECF4  F00B         	call	_I2C_SlaveSetWrColIntHandler	;wreg free
  1868   0015A8                     
  1869                           ;mcc_generated_files/i2c_slave.c: 127:     I2C_SlaveEnableIrq();
  1870   0015A8  EC29  F00C         	call	_I2C_SlaveEnableIrq	;wreg free
  1871   0015AC  0012               	return		;funcret
  1872   0015AE                     __end_of_I2C_Open:
  1873                           	callstack 0
  1874                           
  1875 ;; *************** function _I2C_SlaveSetWriteIntHandler *****************
  1876 ;; Defined at:
  1877 ;;		line 246 in file "mcc_generated_files/i2c_slave.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;  handler         2    5[COMRAM] PTR FTN()void 
  1880 ;;		 -> I2C_SlaveDefWrInterruptHandler(1), 
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;		None
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  1    wreg      void 
  1885 ;; Registers used:
  1886 ;;		wreg, status,2, status,0
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1892 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1895 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1896 ;;Total ram usage:        2 bytes
  1897 ;; Hardware stack levels used: 1
  1898 ;; Hardware stack levels required when called: 5
  1899 ;; This function calls:
  1900 ;;		Nothing
  1901 ;; This function is called by:
  1902 ;;		_I2C_Open
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           	psect	text15
  1907   0017DE                     __ptext15:
  1908                           	callstack 0
  1909   0017DE                     _I2C_SlaveSetWriteIntHandler:
  1910                           	callstack 24
  1911   0017DE                     
  1912                           ;mcc_generated_files/i2c_slave.c: 247:     I2C_SlaveWrInterruptHandler = handler;
  1913   0017DE  C03F  F028         	movff	I2C_SlaveSetWriteIntHandler@handler,_I2C_SlaveWrInterruptHandler
  1914   0017E2  C040  F029         	movff	I2C_SlaveSetWriteIntHandler@handler+1,_I2C_SlaveWrInterruptHandler+1
  1915   0017E6  0012               	return		;funcret
  1916   0017E8                     __end_of_I2C_SlaveSetWriteIntHandler:
  1917                           	callstack 0
  1918                           
  1919 ;; *************** function _I2C_SlaveSetWrColIntHandler *****************
  1920 ;; Defined at:
  1921 ;;		line 279 in file "mcc_generated_files/i2c_slave.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;  handler         2    5[COMRAM] PTR FTN()void 
  1924 ;;		 -> I2C_SlaveDefWrColInterruptHandler(1), 
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;		None
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  1    wreg      void 
  1929 ;; Registers used:
  1930 ;;		wreg, status,2, status,0
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1936 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1939 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1940 ;;Total ram usage:        2 bytes
  1941 ;; Hardware stack levels used: 1
  1942 ;; Hardware stack levels required when called: 5
  1943 ;; This function calls:
  1944 ;;		Nothing
  1945 ;; This function is called by:
  1946 ;;		_I2C_Open
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           	psect	text16
  1951   0017E8                     __ptext16:
  1952                           	callstack 0
  1953   0017E8                     _I2C_SlaveSetWrColIntHandler:
  1954                           	callstack 24
  1955   0017E8                     
  1956                           ;mcc_generated_files/i2c_slave.c: 280:     I2C_SlaveWrColInterruptHandler = handler;
  1957   0017E8  C03F  F022         	movff	I2C_SlaveSetWrColIntHandler@handler,_I2C_SlaveWrColInterruptHandler
  1958   0017EC  C040  F023         	movff	I2C_SlaveSetWrColIntHandler@handler+1,_I2C_SlaveWrColInterruptHandler+1
  1959   0017F0  0012               	return		;funcret
  1960   0017F2                     __end_of_I2C_SlaveSetWrColIntHandler:
  1961                           	callstack 0
  1962                           
  1963 ;; *************** function _I2C_SlaveSetSlaveMask *****************
  1964 ;; Defined at:
  1965 ;;		line 336 in file "mcc_generated_files/i2c_slave.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;  maskAddr        1    wreg     unsigned char 
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;  maskAddr        1    5[COMRAM] unsigned char 
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  1    wreg      void 
  1972 ;; Registers used:
  1973 ;;		wreg, status,2, status,0
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1980 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1982 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1983 ;;Total ram usage:        1 bytes
  1984 ;; Hardware stack levels used: 1
  1985 ;; Hardware stack levels required when called: 5
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_I2C_Open
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           	psect	text17
  1994   0017F2                     __ptext17:
  1995                           	callstack 0
  1996   0017F2                     _I2C_SlaveSetSlaveMask:
  1997                           	callstack 24
  1998                           
  1999                           ;incstack = 0
  2000                           ;I2C_SlaveSetSlaveMask@maskAddr stored from wreg
  2001   0017F2  6E3F               	movwf	I2C_SlaveSetSlaveMask@maskAddr^0,c
  2002   0017F4                     
  2003                           ;mcc_generated_files/i2c_slave.c: 336: static __attribute__((inline)) void I2C_SlaveSetS
      +                          laveMask(uint8_t maskAddr);mcc_generated_files/i2c_slave.c: 337: {;mcc_generated_files/i
      +                          2c_slave.c: 338:     SSPMSK = (uint8_t) (maskAddr << 1);
  2004   0017F4  503F               	movf	I2C_SlaveSetSlaveMask@maskAddr^0,w,c
  2005   0017F6  243F               	addwf	I2C_SlaveSetSlaveMask@maskAddr^0,w,c
  2006   0017F8  6E77               	movwf	119,c	;volatile
  2007   0017FA  0012               	return		;funcret
  2008   0017FC                     __end_of_I2C_SlaveSetSlaveMask:
  2009                           	callstack 0
  2010                           
  2011 ;; *************** function _I2C_SlaveSetSlaveAddr *****************
  2012 ;; Defined at:
  2013 ;;		line 331 in file "mcc_generated_files/i2c_slave.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  slaveAddr       1    wreg     unsigned char 
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;  slaveAddr       1    5[COMRAM] unsigned char 
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  1    wreg      void 
  2020 ;; Registers used:
  2021 ;;		wreg, status,2, status,0
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2030 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2031 ;;Total ram usage:        1 bytes
  2032 ;; Hardware stack levels used: 1
  2033 ;; Hardware stack levels required when called: 5
  2034 ;; This function calls:
  2035 ;;		Nothing
  2036 ;; This function is called by:
  2037 ;;		_I2C_Open
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           	psect	text18
  2042   0017FC                     __ptext18:
  2043                           	callstack 0
  2044   0017FC                     _I2C_SlaveSetSlaveAddr:
  2045                           	callstack 24
  2046                           
  2047                           ;incstack = 0
  2048                           ;I2C_SlaveSetSlaveAddr@slaveAddr stored from wreg
  2049   0017FC  6E3F               	movwf	I2C_SlaveSetSlaveAddr@slaveAddr^0,c
  2050   0017FE                     
  2051                           ;mcc_generated_files/i2c_slave.c: 331: static __attribute__((inline)) void I2C_SlaveSetS
      +                          laveAddr(uint8_t slaveAddr);mcc_generated_files/i2c_slave.c: 332: {;mcc_generated_files/
      +                          i2c_slave.c: 333:     SSPADD = (uint8_t) (slaveAddr << 1);
  2052   0017FE  503F               	movf	I2C_SlaveSetSlaveAddr@slaveAddr^0,w,c
  2053   001800  243F               	addwf	I2C_SlaveSetSlaveAddr@slaveAddr^0,w,c
  2054   001802  6EC8               	movwf	200,c	;volatile
  2055   001804  0012               	return		;funcret
  2056   001806                     __end_of_I2C_SlaveSetSlaveAddr:
  2057                           	callstack 0
  2058                           
  2059 ;; *************** function _I2C_SlaveSetReadIntHandler *****************
  2060 ;; Defined at:
  2061 ;;		line 229 in file "mcc_generated_files/i2c_slave.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  handler         2    5[COMRAM] PTR FTN()void 
  2064 ;;		 -> I2C_SlaveDefRdInterruptHandler(1), 
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;		None
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  1    wreg      void 
  2069 ;; Registers used:
  2070 ;;		wreg, status,2, status,0
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2076 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2079 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;Total ram usage:        2 bytes
  2081 ;; Hardware stack levels used: 1
  2082 ;; Hardware stack levels required when called: 5
  2083 ;; This function calls:
  2084 ;;		Nothing
  2085 ;; This function is called by:
  2086 ;;		_I2C_Open
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           	psect	text19
  2091   001806                     __ptext19:
  2092                           	callstack 0
  2093   001806                     _I2C_SlaveSetReadIntHandler:
  2094                           	callstack 24
  2095   001806                     
  2096                           ;mcc_generated_files/i2c_slave.c: 230:     I2C_SlaveRdInterruptHandler = handler;
  2097   001806  C03F  F02A         	movff	I2C_SlaveSetReadIntHandler@handler,_I2C_SlaveRdInterruptHandler
  2098   00180A  C040  F02B         	movff	I2C_SlaveSetReadIntHandler@handler+1,_I2C_SlaveRdInterruptHandler+1
  2099   00180E  0012               	return		;funcret
  2100   001810                     __end_of_I2C_SlaveSetReadIntHandler:
  2101                           	callstack 0
  2102                           
  2103 ;; *************** function _I2C_SlaveSetIsrHandler *****************
  2104 ;; Defined at:
  2105 ;;		line 223 in file "mcc_generated_files/i2c_slave.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;  handler         2    5[COMRAM] PTR FTN()void 
  2108 ;;		 -> I2C_Isr(1), 
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;		None
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      void 
  2113 ;; Registers used:
  2114 ;;		wreg, status,2, status,0
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2120 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2123 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2124 ;;Total ram usage:        2 bytes
  2125 ;; Hardware stack levels used: 1
  2126 ;; Hardware stack levels required when called: 5
  2127 ;; This function calls:
  2128 ;;		Nothing
  2129 ;; This function is called by:
  2130 ;;		_I2C_Open
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           	psect	text20
  2135   001810                     __ptext20:
  2136                           	callstack 0
  2137   001810                     _I2C_SlaveSetIsrHandler:
  2138                           	callstack 24
  2139   001810                     
  2140                           ;mcc_generated_files/i2c_slave.c: 223: void I2C_SlaveSetIsrHandler(i2cInterruptHandler h
      +                          andler);mcc_generated_files/i2c_slave.c: 224: {;mcc_generated_files/i2c_slave.c: 225:   
      +                            MSSP_InterruptHandler = handler;
  2141   001810  C03F  F02C         	movff	I2C_SlaveSetIsrHandler@handler,_MSSP_InterruptHandler
  2142   001814  C040  F02D         	movff	I2C_SlaveSetIsrHandler@handler+1,_MSSP_InterruptHandler+1
  2143   001818  0012               	return		;funcret
  2144   00181A                     __end_of_I2C_SlaveSetIsrHandler:
  2145                           	callstack 0
  2146                           
  2147 ;; *************** function _I2C_SlaveSetBusColIntHandler *****************
  2148 ;; Defined at:
  2149 ;;		line 295 in file "mcc_generated_files/i2c_slave.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  handler         2    5[COMRAM] PTR FTN()void 
  2152 ;;		 -> I2C_SlaveDefBusColInterruptHandler(1), 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      void 
  2157 ;; Registers used:
  2158 ;;		wreg, status,2, status,0
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2164 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;Total ram usage:        2 bytes
  2169 ;; Hardware stack levels used: 1
  2170 ;; Hardware stack levels required when called: 5
  2171 ;; This function calls:
  2172 ;;		Nothing
  2173 ;; This function is called by:
  2174 ;;		_I2C_Open
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text21
  2179   00181A                     __ptext21:
  2180                           	callstack 0
  2181   00181A                     _I2C_SlaveSetBusColIntHandler:
  2182                           	callstack 24
  2183   00181A                     
  2184                           ;mcc_generated_files/i2c_slave.c: 296:     I2C_SlaveBusColInterruptHandler = handler;
  2185   00181A  C03F  F024         	movff	I2C_SlaveSetBusColIntHandler@handler,_I2C_SlaveBusColInterruptHandler
  2186   00181E  C040  F025         	movff	I2C_SlaveSetBusColIntHandler@handler+1,_I2C_SlaveBusColInterruptHandler+1
  2187   001822  0012               	return		;funcret
  2188   001824                     __end_of_I2C_SlaveSetBusColIntHandler:
  2189                           	callstack 0
  2190                           
  2191 ;; *************** function _I2C_SlaveSetAddrIntHandler *****************
  2192 ;; Defined at:
  2193 ;;		line 263 in file "mcc_generated_files/i2c_slave.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;  handler         2    5[COMRAM] PTR FTN()void 
  2196 ;;		 -> I2C_SlaveDefAddrInterruptHandler(1), 
  2197 ;; Auto vars:     Size  Location     Type
  2198 ;;		None
  2199 ;; Return value:  Size  Location     Type
  2200 ;;                  1    wreg      void 
  2201 ;; Registers used:
  2202 ;;		wreg, status,2, status,0
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2208 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2211 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2212 ;;Total ram usage:        2 bytes
  2213 ;; Hardware stack levels used: 1
  2214 ;; Hardware stack levels required when called: 5
  2215 ;; This function calls:
  2216 ;;		Nothing
  2217 ;; This function is called by:
  2218 ;;		_I2C_Open
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222                           	psect	text22
  2223   001824                     __ptext22:
  2224                           	callstack 0
  2225   001824                     _I2C_SlaveSetAddrIntHandler:
  2226                           	callstack 24
  2227   001824                     
  2228                           ;mcc_generated_files/i2c_slave.c: 264:     I2C_SlaveAddrInterruptHandler = handler;
  2229   001824  C03F  F026         	movff	I2C_SlaveSetAddrIntHandler@handler,_I2C_SlaveAddrInterruptHandler
  2230   001828  C040  F027         	movff	I2C_SlaveSetAddrIntHandler@handler+1,_I2C_SlaveAddrInterruptHandler+1
  2231   00182C  0012               	return		;funcret
  2232   00182E                     __end_of_I2C_SlaveSetAddrIntHandler:
  2233                           	callstack 0
  2234                           
  2235 ;; *************** function _I2C_SlaveOpen *****************
  2236 ;; Defined at:
  2237 ;;		line 310 in file "mcc_generated_files/i2c_slave.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;		None
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;		None
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      _Bool 
  2244 ;; Registers used:
  2245 ;;		wreg, status,2, status,0
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2255 ;;Total ram usage:        0 bytes
  2256 ;; Hardware stack levels used: 1
  2257 ;; Hardware stack levels required when called: 5
  2258 ;; This function calls:
  2259 ;;		Nothing
  2260 ;; This function is called by:
  2261 ;;		_I2C_Open
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           	psect	text23
  2266   001744                     __ptext23:
  2267                           	callstack 0
  2268   001744                     _I2C_SlaveOpen:
  2269                           	callstack 24
  2270   001744                     
  2271                           ;mcc_generated_files/i2c_slave.c: 312:     if(!SSPCON1bits.SSPEN)
  2272   001744  BAC6               	btfsc	198,5,c	;volatile
  2273   001746  EFA7  F00B         	goto	u101
  2274   00174A  EFA9  F00B         	goto	u100
  2275   00174E                     u101:
  2276   00174E  EFB0  F00B         	goto	l380
  2277   001752                     u100:
  2278   001752                     
  2279                           ;mcc_generated_files/i2c_slave.c: 313:     {;mcc_generated_files/i2c_slave.c: 314:      
      +                             SSPSTAT = 0x00;
  2280   001752  0E00               	movlw	0
  2281   001754  6EC7               	movwf	199,c	;volatile
  2282   001756                     
  2283                           ;mcc_generated_files/i2c_slave.c: 315:         SSPCON1 |= 0x06;
  2284   001756  0E06               	movlw	6
  2285   001758  12C6               	iorwf	198,f,c	;volatile
  2286   00175A                     
  2287                           ;mcc_generated_files/i2c_slave.c: 316:         SSPCON2 = 0x00;
  2288   00175A  0E00               	movlw	0
  2289   00175C  6EC5               	movwf	197,c	;volatile
  2290   00175E                     
  2291                           ;mcc_generated_files/i2c_slave.c: 317:         SSPCON1bits.SSPEN = 1;
  2292   00175E  8AC6               	bsf	198,5,c	;volatile
  2293   001760                     l380:
  2294   001760  0012               	return		;funcret
  2295   001762                     __end_of_I2C_SlaveOpen:
  2296                           	callstack 0
  2297                           
  2298 ;; *************** function _I2C_SlaveEnableIrq *****************
  2299 ;; Defined at:
  2300 ;;		line 341 in file "mcc_generated_files/i2c_slave.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;		None
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;		None
  2305 ;; Return value:  Size  Location     Type
  2306 ;;                  1    wreg      void 
  2307 ;; Registers used:
  2308 ;;		None
  2309 ;; Tracked objects:
  2310 ;;		On entry : 0/0
  2311 ;;		On exit  : 0/0
  2312 ;;		Unchanged: 0/0
  2313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2318 ;;Total ram usage:        0 bytes
  2319 ;; Hardware stack levels used: 1
  2320 ;; Hardware stack levels required when called: 5
  2321 ;; This function calls:
  2322 ;;		Nothing
  2323 ;; This function is called by:
  2324 ;;		_I2C_Open
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328                           	psect	text24
  2329   001852                     __ptext24:
  2330                           	callstack 0
  2331   001852                     _I2C_SlaveEnableIrq:
  2332                           	callstack 24
  2333   001852                     
  2334                           ;mcc_generated_files/i2c_slave.c: 343:     PIE1bits.SSPIE = 1;
  2335   001852  869D               	bsf	157,3,c	;volatile
  2336   001854  0012               	return		;funcret
  2337   001856                     __end_of_I2C_SlaveEnableIrq:
  2338                           	callstack 0
  2339                           
  2340 ;; *************** function _INTERRUPT_InterruptManager *****************
  2341 ;; Defined at:
  2342 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;		None
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;		None
  2347 ;; Return value:  Size  Location     Type
  2348 ;;                  1    wreg      void 
  2349 ;; Registers used:
  2350 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/0
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2360 ;;Total ram usage:        2 bytes
  2361 ;; Hardware stack levels used: 1
  2362 ;; Hardware stack levels required when called: 4
  2363 ;; This function calls:
  2364 ;;		NULL
  2365 ;;		_I2C_Isr
  2366 ;; This function is called by:
  2367 ;;		Interrupt level 2
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           	psect	intcode
  2372   000008                     __pintcode:
  2373                           	callstack 0
  2374   000008                     _INTERRUPT_InterruptManager:
  2375                           	callstack 24
  2376                           
  2377                           ;incstack = 0
  2378   000008  824C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2379   00000A  CFFA F03D          	movff	pclath,??_INTERRUPT_InterruptManager
  2380   00000E  CFFB F03E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2381   000012                     
  2382                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  2383   000012  ACF2               	btfss	242,6,c	;volatile
  2384   000014  EF0E  F000         	goto	i2u62_41
  2385   000018  EF10  F000         	goto	i2u62_40
  2386   00001C                     i2u62_41:
  2387   00001C  EF3D  F000         	goto	i2l541
  2388   000020                     i2u62_40:
  2389   000020                     
  2390                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE2bits.BCLIE == 1 && PIR2bits.BCLIF == 1)
  2391   000020  A6A0               	btfss	160,3,c	;volatile
  2392   000022  EF15  F000         	goto	i2u63_41
  2393   000026  EF17  F000         	goto	i2u63_40
  2394   00002A                     i2u63_41:
  2395   00002A  EF2D  F000         	goto	i2l536
  2396   00002E                     i2u63_40:
  2397   00002E  A6A1               	btfss	161,3,c	;volatile
  2398   000030  EF1C  F000         	goto	i2u64_41
  2399   000034  EF1E  F000         	goto	i2u64_40
  2400   000038                     i2u64_41:
  2401   000038  EF2D  F000         	goto	i2l536
  2402   00003C                     i2u64_40:
  2403   00003C                     i2l1734:
  2404                           
  2405                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             MSSP_InterruptHandler();
  2406   00003C  D802               	call	i2u65_48
  2407   00003E  EF2B  F000         	goto	i2u65_49
  2408   000042                     i2u65_48:
  2409   000042  0005               	push	
  2410   000044  6EFA               	movwf	pclath,c
  2411   000046  502C               	movf	_MSSP_InterruptHandler^0,w,c
  2412   000048  6EFD               	movwf	tosl,c
  2413   00004A  502D               	movf	(_MSSP_InterruptHandler+1)^0,w,c
  2414   00004C  6EFE               	movwf	tosh,c
  2415   00004E  50F8               	movf	tblptru,w,c
  2416   000050  6EFF               	movwf	tosu,c
  2417   000052  50FA               	movf	pclath,w,c
  2418   000054  0012               	return		;indir
  2419   000056                     i2u65_49:
  2420                           
  2421                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  2422   000056  EF3D  F000         	goto	i2l541
  2423   00005A                     i2l536:
  2424   00005A  A69D               	btfss	157,3,c	;volatile
  2425   00005C  EF32  F000         	goto	i2u66_41
  2426   000060  EF34  F000         	goto	i2u66_40
  2427   000064                     i2u66_41:
  2428   000064  EF3D  F000         	goto	i2l537
  2429   000068                     i2u66_40:
  2430   000068  A69E               	btfss	158,3,c	;volatile
  2431   00006A  EF39  F000         	goto	i2u67_41
  2432   00006E  EF3B  F000         	goto	i2u67_40
  2433   000072                     i2u67_41:
  2434   000072  EF3D  F000         	goto	i2l537
  2435   000076                     i2u67_40:
  2436   000076  EF1E  F000         	goto	i2l1734
  2437   00007A                     i2l537:
  2438   00007A                     i2l541:
  2439   00007A  C03E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2440   00007E  C03D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2441   000082  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2442   000084  0011               	retfie		f
  2443   000086                     __end_of_INTERRUPT_InterruptManager:
  2444                           	callstack 0
  2445                           
  2446 ;; *************** function _I2C_Isr *****************
  2447 ;; Defined at:
  2448 ;;		line 165 in file "mcc_generated_files/i2c_slave.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;		None
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;		None
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  1    wreg      void 
  2455 ;; Registers used:
  2456 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2464 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2465 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2466 ;;Total ram usage:        2 bytes
  2467 ;; Hardware stack levels used: 1
  2468 ;; Hardware stack levels required when called: 3
  2469 ;; This function calls:
  2470 ;;		_I2C_SlaveAddrCallBack
  2471 ;;		_I2C_SlaveClearIrq
  2472 ;;		_I2C_SlaveIsAddr
  2473 ;;		_I2C_SlaveIsRead
  2474 ;;		_I2C_SlaveIsRxBufFull
  2475 ;;		_I2C_SlaveIsTxBufEmpty
  2476 ;;		_I2C_SlaveRdCallBack
  2477 ;;		_I2C_SlaveReleaseClock
  2478 ;;		_I2C_SlaveWrCallBack
  2479 ;; This function is called by:
  2480 ;;		_I2C_Open
  2481 ;;		_INTERRUPT_InterruptManager
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485                           	psect	text26
  2486   001224                     __ptext26:
  2487                           	callstack 0
  2488   001224                     _I2C_Isr:
  2489                           	callstack 24
  2490   001224                     
  2491                           ;mcc_generated_files/i2c_slave.c: 167:     I2C_SlaveClearIrq();
  2492   001224  EC2D  F00C         	call	_I2C_SlaveClearIrq	;wreg free
  2493   001228                     
  2494                           ;mcc_generated_files/i2c_slave.c: 169:     if(I2C_SlaveIsAddr())
  2495   001228  ECCF  F00B         	call	_I2C_SlaveIsAddr	;wreg free
  2496   00122C  0900               	iorlw	0
  2497   00122E  B4D8               	btfsc	status,2,c
  2498   001230  EF1C  F009         	goto	i2u35_41
  2499   001234  EF1E  F009         	goto	i2u35_40
  2500   001238                     i2u35_41:
  2501   001238  EF30  F009         	goto	i2l1518
  2502   00123C                     i2u35_40:
  2503   00123C                     
  2504                           ;mcc_generated_files/i2c_slave.c: 170:     {;mcc_generated_files/i2c_slave.c: 171:      
      +                             if(I2C_SlaveIsRead())
  2505   00123C  ECC5  F00B         	call	_I2C_SlaveIsRead	;wreg free
  2506   001240  0900               	iorlw	0
  2507   001242  B4D8               	btfsc	status,2,c
  2508   001244  EF26  F009         	goto	i2u36_41
  2509   001248  EF28  F009         	goto	i2u36_40
  2510   00124C                     i2u36_41:
  2511   00124C  EF2C  F009         	goto	i2l1516
  2512   001250                     i2u36_40:
  2513   001250                     
  2514                           ;mcc_generated_files/i2c_slave.c: 172:         {;mcc_generated_files/i2c_slave.c: 173:  
      +                                     i2cSlaveState = I2C_ADDR_TX;
  2515   001250  0E01               	movlw	1
  2516   001252  6E30               	movwf	_i2cSlaveState^0,c	;volatile
  2517                           
  2518                           ;mcc_generated_files/i2c_slave.c: 174:         }
  2519   001254  EF70  F009         	goto	i2l1542
  2520   001258                     i2l1516:
  2521                           
  2522                           ;mcc_generated_files/i2c_slave.c: 176:         {;mcc_generated_files/i2c_slave.c: 177:  
      +                                     i2cSlaveState = I2C_ADDR_RX;
  2523   001258  0E02               	movlw	2
  2524   00125A  6E30               	movwf	_i2cSlaveState^0,c	;volatile
  2525   00125C  EF70  F009         	goto	i2l1542
  2526   001260                     i2l1518:
  2527                           
  2528                           ;mcc_generated_files/i2c_slave.c: 181:     {;mcc_generated_files/i2c_slave.c: 182:      
      +                             if(I2C_SlaveIsRead())
  2529   001260  ECC5  F00B         	call	_I2C_SlaveIsRead	;wreg free
  2530   001264  0900               	iorlw	0
  2531   001266  B4D8               	btfsc	status,2,c
  2532   001268  EF38  F009         	goto	i2u37_41
  2533   00126C  EF3A  F009         	goto	i2u37_40
  2534   001270                     i2u37_41:
  2535   001270  EF3E  F009         	goto	i2l1522
  2536   001274                     i2u37_40:
  2537   001274                     
  2538                           ;mcc_generated_files/i2c_slave.c: 183:         {;mcc_generated_files/i2c_slave.c: 184:  
      +                                     i2cSlaveState = I2C_DATA_TX;
  2539   001274  0E03               	movlw	3
  2540   001276  6E30               	movwf	_i2cSlaveState^0,c	;volatile
  2541                           
  2542                           ;mcc_generated_files/i2c_slave.c: 185:         }
  2543   001278  EF70  F009         	goto	i2l1542
  2544   00127C                     i2l1522:
  2545                           
  2546                           ;mcc_generated_files/i2c_slave.c: 187:         {;mcc_generated_files/i2c_slave.c: 188:  
      +                                     i2cSlaveState = I2C_DATA_RX;
  2547   00127C  0E04               	movlw	4
  2548   00127E  6E30               	movwf	_i2cSlaveState^0,c	;volatile
  2549   001280  EF70  F009         	goto	i2l1542
  2550   001284                     i2l1524:
  2551                           
  2552                           ;mcc_generated_files/i2c_slave.c: 195:             I2C_SlaveAddrCallBack();
  2553   001284  EC67  F00B         	call	_I2C_SlaveAddrCallBack	;wreg free
  2554   001288                     
  2555                           ;mcc_generated_files/i2c_slave.c: 196:             if(I2C_SlaveIsTxBufEmpty())
  2556   001288  ECB1  F00B         	call	_I2C_SlaveIsTxBufEmpty	;wreg free
  2557   00128C  0900               	iorlw	0
  2558   00128E  B4D8               	btfsc	status,2,c
  2559   001290  EF4C  F009         	goto	i2u38_41
  2560   001294  EF4E  F009         	goto	i2u38_40
  2561   001298                     i2u38_41:
  2562   001298  EF8D  F009         	goto	i2l1544
  2563   00129C                     i2u38_40:
  2564   00129C                     i2l1528:
  2565                           
  2566                           ;mcc_generated_files/i2c_slave.c: 197:             {;mcc_generated_files/i2c_slave.c: 19
      +                          8:                 I2C_SlaveWrCallBack();
  2567   00129C  EC39  F00B         	call	_I2C_SlaveWrCallBack	;wreg free
  2568   0012A0  EF8D  F009         	goto	i2l1544
  2569   0012A4                     i2l1530:
  2570                           
  2571                           ;mcc_generated_files/i2c_slave.c: 202:             I2C_SlaveAddrCallBack();
  2572   0012A4  EC67  F00B         	call	_I2C_SlaveAddrCallBack	;wreg free
  2573                           
  2574                           ;mcc_generated_files/i2c_slave.c: 203:             break;
  2575   0012A8  EF8D  F009         	goto	i2l1544
  2576   0012AC                     i2l1532:
  2577                           
  2578                           ;mcc_generated_files/i2c_slave.c: 205:             if(I2C_SlaveIsTxBufEmpty())
  2579   0012AC  ECB1  F00B         	call	_I2C_SlaveIsTxBufEmpty	;wreg free
  2580   0012B0  0900               	iorlw	0
  2581   0012B2  B4D8               	btfsc	status,2,c
  2582   0012B4  EF5E  F009         	goto	i2u39_41
  2583   0012B8  EF60  F009         	goto	i2u39_40
  2584   0012BC                     i2u39_41:
  2585   0012BC  EF8D  F009         	goto	i2l1544
  2586   0012C0                     i2u39_40:
  2587   0012C0  EF4E  F009         	goto	i2l1528
  2588   0012C4                     i2l1536:
  2589                           
  2590                           ;mcc_generated_files/i2c_slave.c: 211:             if(I2C_SlaveIsRxBufFull())
  2591   0012C4  ECBB  F00B         	call	_I2C_SlaveIsRxBufFull	;wreg free
  2592   0012C8  0900               	iorlw	0
  2593   0012CA  B4D8               	btfsc	status,2,c
  2594   0012CC  EF6A  F009         	goto	i2u40_41
  2595   0012D0  EF6C  F009         	goto	i2u40_40
  2596   0012D4                     i2u40_41:
  2597   0012D4  EF8D  F009         	goto	i2l1544
  2598   0012D8                     i2u40_40:
  2599   0012D8                     
  2600                           ;mcc_generated_files/i2c_slave.c: 212:             {;mcc_generated_files/i2c_slave.c: 21
      +                          3:                 I2C_SlaveRdCallBack();
  2601   0012D8  EC50  F00B         	call	_I2C_SlaveRdCallBack	;wreg free
  2602   0012DC  EF8D  F009         	goto	i2l1544
  2603   0012E0                     i2l1542:
  2604   0012E0  5030               	movf	_i2cSlaveState^0,w,c	;volatile
  2605   0012E2  6E3B               	movwf	??_I2C_Isr^0,c
  2606   0012E4  6A3C               	clrf	(??_I2C_Isr+1)^0,c
  2607                           
  2608                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2609                           ; Switch size 1, requested type "simple"
  2610                           ; Number of cases is 1, Range of values is 0 to 0
  2611                           ; switch strategies available:
  2612                           ; Name         Instructions Cycles
  2613                           ; simple_byte            4     3 (average)
  2614                           ;	Chosen strategy is simple_byte
  2615   0012E6  503C               	movf	(??_I2C_Isr+1)^0,w,c
  2616   0012E8  0A00               	xorlw	0	; case 0
  2617   0012EA  B4D8               	btfsc	status,2,c
  2618   0012EC  EF7A  F009         	goto	i2l2028
  2619   0012F0  EF8D  F009         	goto	i2l1544
  2620   0012F4                     i2l2028:
  2621                           
  2622                           ; Switch size 1, requested type "simple"
  2623                           ; Number of cases is 4, Range of values is 1 to 4
  2624                           ; switch strategies available:
  2625                           ; Name         Instructions Cycles
  2626                           ; simple_byte           13     7 (average)
  2627                           ;	Chosen strategy is simple_byte
  2628   0012F4  503B               	movf	??_I2C_Isr^0,w,c
  2629   0012F6  0A01               	xorlw	1	; case 1
  2630   0012F8  B4D8               	btfsc	status,2,c
  2631   0012FA  EF42  F009         	goto	i2l1524
  2632   0012FE  0A03               	xorlw	3	; case 2
  2633   001300  B4D8               	btfsc	status,2,c
  2634   001302  EF52  F009         	goto	i2l1530
  2635   001306  0A01               	xorlw	1	; case 3
  2636   001308  B4D8               	btfsc	status,2,c
  2637   00130A  EF56  F009         	goto	i2l1532
  2638   00130E  0A07               	xorlw	7	; case 4
  2639   001310  B4D8               	btfsc	status,2,c
  2640   001312  EF62  F009         	goto	i2l1536
  2641   001316  EF8D  F009         	goto	i2l1544
  2642   00131A                     i2l1544:
  2643                           
  2644                           ;mcc_generated_files/i2c_slave.c: 219:     I2C_SlaveReleaseClock();
  2645   00131A  EC2B  F00C         	call	_I2C_SlaveReleaseClock	;wreg free
  2646   00131E  0012               	return		;funcret
  2647   001320                     __end_of_I2C_Isr:
  2648                           	callstack 0
  2649                           
  2650 ;; *************** function _I2C_SlaveWrCallBack *****************
  2651 ;; Defined at:
  2652 ;;		line 250 in file "mcc_generated_files/i2c_slave.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;		None
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;		None
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  1    wreg      void 
  2659 ;; Registers used:
  2660 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2670 ;;Total ram usage:        0 bytes
  2671 ;; Hardware stack levels used: 1
  2672 ;; Hardware stack levels required when called: 2
  2673 ;; This function calls:
  2674 ;;		NULL
  2675 ;;		_I2C_SlaveDefWrInterruptHandler
  2676 ;; This function is called by:
  2677 ;;		_I2C_Isr
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           	psect	text27
  2682   001672                     __ptext27:
  2683                           	callstack 0
  2684   001672                     _I2C_SlaveWrCallBack:
  2685                           	callstack 24
  2686   001672                     
  2687                           ;mcc_generated_files/i2c_slave.c: 252:     if (I2C_SlaveWrInterruptHandler)
  2688   001672  5028               	movf	_I2C_SlaveWrInterruptHandler^0,w,c
  2689   001674  1029               	iorwf	(_I2C_SlaveWrInterruptHandler+1)^0,w,c
  2690   001676  B4D8               	btfsc	status,2,c
  2691   001678  EF40  F00B         	goto	i2u18_41
  2692   00167C  EF42  F00B         	goto	i2u18_40
  2693   001680                     i2u18_41:
  2694   001680  EF4F  F00B         	goto	i2l343
  2695   001684                     i2u18_40:
  2696   001684                     
  2697                           ;mcc_generated_files/i2c_slave.c: 253:     {;mcc_generated_files/i2c_slave.c: 254:      
      +                             I2C_SlaveWrInterruptHandler();
  2698   001684  D802               	call	i2u19_48
  2699   001686  EF4F  F00B         	goto	i2u19_49
  2700   00168A                     i2u19_48:
  2701   00168A  0005               	push	
  2702   00168C  6EFA               	movwf	pclath,c
  2703   00168E  5028               	movf	_I2C_SlaveWrInterruptHandler^0,w,c
  2704   001690  6EFD               	movwf	tosl,c
  2705   001692  5029               	movf	(_I2C_SlaveWrInterruptHandler+1)^0,w,c
  2706   001694  6EFE               	movwf	tosh,c
  2707   001696  50F8               	movf	tblptru,w,c
  2708   001698  6EFF               	movwf	tosu,c
  2709   00169A  50FA               	movf	pclath,w,c
  2710   00169C  0012               	return		;indir
  2711   00169E                     i2u19_49:
  2712   00169E                     i2l343:
  2713   00169E  0012               	return		;funcret
  2714   0016A0                     __end_of_I2C_SlaveWrCallBack:
  2715                           	callstack 0
  2716                           
  2717 ;; *************** function _I2C_SlaveDefWrInterruptHandler *****************
  2718 ;; Defined at:
  2719 ;;		line 258 in file "mcc_generated_files/i2c_slave.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;		None
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;		None
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  1    wreg      void 
  2726 ;; Registers used:
  2727 ;;		wreg, status,2, cstack
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2737 ;;Total ram usage:        0 bytes
  2738 ;; Hardware stack levels used: 1
  2739 ;; Hardware stack levels required when called: 1
  2740 ;; This function calls:
  2741 ;;		_I2C_SlaveSendTxData
  2742 ;; This function is called by:
  2743 ;;		_I2C_Open
  2744 ;;		_I2C_SlaveWrCallBack
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           	psect	text28
  2749   00182E                     __ptext28:
  2750                           	callstack 0
  2751   00182E                     _I2C_SlaveDefWrInterruptHandler:
  2752                           	callstack 24
  2753   00182E                     
  2754                           ;mcc_generated_files/i2c_slave.c: 259:     I2C_SlaveSendTxData(i2cWrData);
  2755   00182E  5033               	movf	_i2cWrData^0,w,c	;volatile
  2756   001830  EC1B  F00C         	call	_I2C_SlaveSendTxData
  2757   001834  0012               	return		;funcret
  2758   001836                     __end_of_I2C_SlaveDefWrInterruptHandler:
  2759                           	callstack 0
  2760                           
  2761 ;; *************** function _I2C_SlaveSendTxData *****************
  2762 ;; Defined at:
  2763 ;;		line 391 in file "mcc_generated_files/i2c_slave.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  data            1    wreg     unsigned char 
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;  data            1    0[COMRAM] unsigned char 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  1    wreg      void 
  2770 ;; Registers used:
  2771 ;;		wreg
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2778 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;Total ram usage:        1 bytes
  2782 ;; Hardware stack levels used: 1
  2783 ;; This function calls:
  2784 ;;		Nothing
  2785 ;; This function is called by:
  2786 ;;		_I2C_SlaveDefWrInterruptHandler
  2787 ;;		_I2C_Write
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           	psect	text29
  2792   001836                     __ptext29:
  2793                           	callstack 0
  2794   001836                     _I2C_SlaveSendTxData:
  2795                           	callstack 24
  2796                           
  2797                           ;incstack = 0
  2798                           ;I2C_SlaveSendTxData@data stored from wreg
  2799   001836  6E3A               	movwf	I2C_SlaveSendTxData@data^0,c
  2800   001838                     
  2801                           ;mcc_generated_files/i2c_slave.c: 391: static __attribute__((inline)) void I2C_SlaveSend
      +                          TxData(uint8_t data);mcc_generated_files/i2c_slave.c: 392: {;mcc_generated_files/i2c_sla
      +                          ve.c: 393:     SSPBUF = data;
  2802   001838  C03A  FFC9         	movff	I2C_SlaveSendTxData@data,4041	;volatile
  2803   00183C  0012               	return		;funcret
  2804   00183E                     __end_of_I2C_SlaveSendTxData:
  2805                           	callstack 0
  2806                           
  2807 ;; *************** function _I2C_SlaveReleaseClock *****************
  2808 ;; Defined at:
  2809 ;;		line 361 in file "mcc_generated_files/i2c_slave.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;		None
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;		None
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      void 
  2816 ;; Registers used:
  2817 ;;		None
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;Total ram usage:        0 bytes
  2828 ;; Hardware stack levels used: 1
  2829 ;; This function calls:
  2830 ;;		Nothing
  2831 ;; This function is called by:
  2832 ;;		_I2C_Isr
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836                           	psect	text30
  2837   001856                     __ptext30:
  2838                           	callstack 0
  2839   001856                     _I2C_SlaveReleaseClock:
  2840                           	callstack 26
  2841   001856                     
  2842                           ;mcc_generated_files/i2c_slave.c: 363:     SSPCON1bits.CKP = 1;
  2843   001856  88C6               	bsf	198,4,c	;volatile
  2844   001858  0012               	return		;funcret
  2845   00185A                     __end_of_I2C_SlaveReleaseClock:
  2846                           	callstack 0
  2847                           
  2848 ;; *************** function _I2C_SlaveRdCallBack *****************
  2849 ;; Defined at:
  2850 ;;		line 233 in file "mcc_generated_files/i2c_slave.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;		None
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;		None
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  1    wreg      void 
  2857 ;; Registers used:
  2858 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2868 ;;Total ram usage:        0 bytes
  2869 ;; Hardware stack levels used: 1
  2870 ;; Hardware stack levels required when called: 2
  2871 ;; This function calls:
  2872 ;;		NULL
  2873 ;;		_I2C_SlaveDefRdInterruptHandler
  2874 ;; This function is called by:
  2875 ;;		_I2C_Isr
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           	psect	text31
  2880   0016A0                     __ptext31:
  2881                           	callstack 0
  2882   0016A0                     _I2C_SlaveRdCallBack:
  2883                           	callstack 24
  2884   0016A0                     
  2885                           ;mcc_generated_files/i2c_slave.c: 235:     if (I2C_SlaveRdInterruptHandler)
  2886   0016A0  502A               	movf	_I2C_SlaveRdInterruptHandler^0,w,c
  2887   0016A2  102B               	iorwf	(_I2C_SlaveRdInterruptHandler+1)^0,w,c
  2888   0016A4  B4D8               	btfsc	status,2,c
  2889   0016A6  EF57  F00B         	goto	i2u21_41
  2890   0016AA  EF59  F00B         	goto	i2u21_40
  2891   0016AE                     i2u21_41:
  2892   0016AE  EF66  F00B         	goto	i2l333
  2893   0016B2                     i2u21_40:
  2894   0016B2                     
  2895                           ;mcc_generated_files/i2c_slave.c: 236:     {;mcc_generated_files/i2c_slave.c: 237:      
      +                             I2C_SlaveRdInterruptHandler();
  2896   0016B2  D802               	call	i2u22_48
  2897   0016B4  EF66  F00B         	goto	i2u22_49
  2898   0016B8                     i2u22_48:
  2899   0016B8  0005               	push	
  2900   0016BA  6EFA               	movwf	pclath,c
  2901   0016BC  502A               	movf	_I2C_SlaveRdInterruptHandler^0,w,c
  2902   0016BE  6EFD               	movwf	tosl,c
  2903   0016C0  502B               	movf	(_I2C_SlaveRdInterruptHandler+1)^0,w,c
  2904   0016C2  6EFE               	movwf	tosh,c
  2905   0016C4  50F8               	movf	tblptru,w,c
  2906   0016C6  6EFF               	movwf	tosu,c
  2907   0016C8  50FA               	movf	pclath,w,c
  2908   0016CA  0012               	return		;indir
  2909   0016CC                     i2u22_49:
  2910   0016CC                     i2l333:
  2911   0016CC  0012               	return		;funcret
  2912   0016CE                     __end_of_I2C_SlaveRdCallBack:
  2913                           	callstack 0
  2914                           
  2915 ;; *************** function _I2C_SlaveDefRdInterruptHandler *****************
  2916 ;; Defined at:
  2917 ;;		line 241 in file "mcc_generated_files/i2c_slave.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;		None
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;		None
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  1    wreg      void 
  2924 ;; Registers used:
  2925 ;;		wreg, status,2, cstack
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2935 ;;Total ram usage:        0 bytes
  2936 ;; Hardware stack levels used: 1
  2937 ;; Hardware stack levels required when called: 1
  2938 ;; This function calls:
  2939 ;;		_I2C_SlaveGetRxData
  2940 ;; This function is called by:
  2941 ;;		_I2C_Open
  2942 ;;		_I2C_SlaveRdCallBack
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           	psect	text32
  2947   00183E                     __ptext32:
  2948                           	callstack 0
  2949   00183E                     _I2C_SlaveDefRdInterruptHandler:
  2950                           	callstack 24
  2951   00183E                     
  2952                           ;mcc_generated_files/i2c_slave.c: 242:     i2cRdData = I2C_SlaveGetRxData();
  2953   00183E  EC2F  F00C         	call	_I2C_SlaveGetRxData	;wreg free
  2954   001842  6E32               	movwf	_i2cRdData^0,c	;volatile
  2955   001844  0012               	return		;funcret
  2956   001846                     __end_of_I2C_SlaveDefRdInterruptHandler:
  2957                           	callstack 0
  2958                           
  2959 ;; *************** function _I2C_SlaveIsTxBufEmpty *****************
  2960 ;; Defined at:
  2961 ;;		line 381 in file "mcc_generated_files/i2c_slave.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;		None
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;		None
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  1    wreg      _Bool 
  2968 ;; Registers used:
  2969 ;;		wreg
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2979 ;;Total ram usage:        0 bytes
  2980 ;; Hardware stack levels used: 1
  2981 ;; This function calls:
  2982 ;;		Nothing
  2983 ;; This function is called by:
  2984 ;;		_I2C_Isr
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           	psect	text33
  2989   001762                     __ptext33:
  2990                           	callstack 0
  2991   001762                     _I2C_SlaveIsTxBufEmpty:
  2992                           	callstack 26
  2993   001762                     
  2994                           ;mcc_generated_files/i2c_slave.c: 383:     return !SSPSTATbits.BF;
  2995   001762  A0C7               	btfss	199,0,c	;volatile
  2996   001764  EFB6  F00B         	goto	i2u16_41
  2997   001768  EFB9  F00B         	goto	i2u16_40
  2998   00176C                     i2u16_41:
  2999   00176C  0E01               	movlw	1
  3000   00176E  EFBA  F00B         	goto	i2u17_40
  3001   001772                     i2u16_40:
  3002   001772  0E00               	movlw	0
  3003   001774                     i2u17_40:
  3004   001774  0012               	return		;funcret
  3005   001776                     __end_of_I2C_SlaveIsTxBufEmpty:
  3006                           	callstack 0
  3007                           
  3008 ;; *************** function _I2C_SlaveIsRxBufFull *****************
  3009 ;; Defined at:
  3010 ;;		line 386 in file "mcc_generated_files/i2c_slave.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;		None
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;		None
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  1    wreg      _Bool 
  3017 ;; Registers used:
  3018 ;;		wreg
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3028 ;;Total ram usage:        0 bytes
  3029 ;; Hardware stack levels used: 1
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_I2C_Isr
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037                           	psect	text34
  3038   001776                     __ptext34:
  3039                           	callstack 0
  3040   001776                     _I2C_SlaveIsRxBufFull:
  3041                           	callstack 26
  3042   001776                     
  3043                           ;mcc_generated_files/i2c_slave.c: 388:     return SSPSTATbits.BF;
  3044   001776  B0C7               	btfsc	199,0,c	;volatile
  3045   001778  EFC0  F00B         	goto	i2u20_41
  3046   00177C  EFC3  F00B         	goto	i2u20_40
  3047   001780                     i2u20_41:
  3048   001780  0E01               	movlw	1
  3049   001782  EFC4  F00B         	goto	i2u20_46
  3050   001786                     i2u20_40:
  3051   001786  0E00               	movlw	0
  3052   001788                     i2u20_46:
  3053   001788  0012               	return		;funcret
  3054   00178A                     __end_of_I2C_SlaveIsRxBufFull:
  3055                           	callstack 0
  3056                           
  3057 ;; *************** function _I2C_SlaveIsRead *****************
  3058 ;; Defined at:
  3059 ;;		line 351 in file "mcc_generated_files/i2c_slave.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;		None
  3062 ;; Auto vars:     Size  Location     Type
  3063 ;;		None
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  1    wreg      _Bool 
  3066 ;; Registers used:
  3067 ;;		wreg
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3077 ;;Total ram usage:        0 bytes
  3078 ;; Hardware stack levels used: 1
  3079 ;; This function calls:
  3080 ;;		Nothing
  3081 ;; This function is called by:
  3082 ;;		_I2C_Isr
  3083 ;;		_I2C_IsRead
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087                           	psect	text35
  3088   00178A                     __ptext35:
  3089                           	callstack 0
  3090   00178A                     _I2C_SlaveIsRead:
  3091                           	callstack 26
  3092   00178A                     
  3093                           ;mcc_generated_files/i2c_slave.c: 353:     return (SSPSTATbits.R_nW);
  3094   00178A  B4C7               	btfsc	199,2,c	;volatile
  3095   00178C  EFCA  F00B         	goto	i2u11_41
  3096   001790  EFCD  F00B         	goto	i2u11_40
  3097   001794                     i2u11_41:
  3098   001794  0E01               	movlw	1
  3099   001796  EFCE  F00B         	goto	i2u11_46
  3100   00179A                     i2u11_40:
  3101   00179A  0E00               	movlw	0
  3102   00179C                     i2u11_46:
  3103   00179C  0012               	return		;funcret
  3104   00179E                     __end_of_I2C_SlaveIsRead:
  3105                           	callstack 0
  3106                           
  3107 ;; *************** function _I2C_SlaveIsAddr *****************
  3108 ;; Defined at:
  3109 ;;		line 346 in file "mcc_generated_files/i2c_slave.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;		None
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;		None
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      _Bool 
  3116 ;; Registers used:
  3117 ;;		wreg
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3127 ;;Total ram usage:        0 bytes
  3128 ;; Hardware stack levels used: 1
  3129 ;; This function calls:
  3130 ;;		Nothing
  3131 ;; This function is called by:
  3132 ;;		_I2C_Isr
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           	psect	text36
  3137   00179E                     __ptext36:
  3138                           	callstack 0
  3139   00179E                     _I2C_SlaveIsAddr:
  3140                           	callstack 26
  3141   00179E                     
  3142                           ;mcc_generated_files/i2c_slave.c: 348:     return !(SSPSTATbits.D_nA);
  3143   00179E  AAC7               	btfss	199,5,c	;volatile
  3144   0017A0  EFD4  F00B         	goto	i2u12_41
  3145   0017A4  EFD7  F00B         	goto	i2u12_40
  3146   0017A8                     i2u12_41:
  3147   0017A8  0E01               	movlw	1
  3148   0017AA  EFD8  F00B         	goto	i2u13_40
  3149   0017AE                     i2u12_40:
  3150   0017AE  0E00               	movlw	0
  3151   0017B0                     i2u13_40:
  3152   0017B0  0012               	return		;funcret
  3153   0017B2                     __end_of_I2C_SlaveIsAddr:
  3154                           	callstack 0
  3155                           
  3156 ;; *************** function _I2C_SlaveClearIrq *****************
  3157 ;; Defined at:
  3158 ;;		line 356 in file "mcc_generated_files/i2c_slave.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;		None
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;		None
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      void 
  3165 ;; Registers used:
  3166 ;;		None
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3176 ;;Total ram usage:        0 bytes
  3177 ;; Hardware stack levels used: 1
  3178 ;; This function calls:
  3179 ;;		Nothing
  3180 ;; This function is called by:
  3181 ;;		_I2C_Isr
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           	psect	text37
  3186   00185A                     __ptext37:
  3187                           	callstack 0
  3188   00185A                     _I2C_SlaveClearIrq:
  3189                           	callstack 26
  3190   00185A                     
  3191                           ;mcc_generated_files/i2c_slave.c: 358:     PIR1bits.SSPIF = 0;
  3192   00185A  969E               	bcf	158,3,c	;volatile
  3193   00185C  0012               	return		;funcret
  3194   00185E                     __end_of_I2C_SlaveClearIrq:
  3195                           	callstack 0
  3196                           
  3197 ;; *************** function _I2C_SlaveAddrCallBack *****************
  3198 ;; Defined at:
  3199 ;;		line 267 in file "mcc_generated_files/i2c_slave.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;		None
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;		None
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  1    wreg      void 
  3206 ;; Registers used:
  3207 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3217 ;;Total ram usage:        0 bytes
  3218 ;; Hardware stack levels used: 1
  3219 ;; Hardware stack levels required when called: 2
  3220 ;; This function calls:
  3221 ;;		NULL
  3222 ;;		_I2C_SlaveDefAddrInterruptHandler
  3223 ;; This function is called by:
  3224 ;;		_I2C_Isr
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228                           	psect	text38
  3229   0016CE                     __ptext38:
  3230                           	callstack 0
  3231   0016CE                     _I2C_SlaveAddrCallBack:
  3232                           	callstack 24
  3233   0016CE                     
  3234                           ;mcc_generated_files/i2c_slave.c: 269:     if (I2C_SlaveAddrInterruptHandler) {
  3235   0016CE  5026               	movf	_I2C_SlaveAddrInterruptHandler^0,w,c
  3236   0016D0  1027               	iorwf	(_I2C_SlaveAddrInterruptHandler+1)^0,w,c
  3237   0016D2  B4D8               	btfsc	status,2,c
  3238   0016D4  EF6E  F00B         	goto	i2u14_41
  3239   0016D8  EF70  F00B         	goto	i2u14_40
  3240   0016DC                     i2u14_41:
  3241   0016DC  EF7D  F00B         	goto	i2l353
  3242   0016E0                     i2u14_40:
  3243   0016E0                     
  3244                           ;mcc_generated_files/i2c_slave.c: 270:         I2C_SlaveAddrInterruptHandler();
  3245   0016E0  D802               	call	i2u15_48
  3246   0016E2  EF7D  F00B         	goto	i2u15_49
  3247   0016E6                     i2u15_48:
  3248   0016E6  0005               	push	
  3249   0016E8  6EFA               	movwf	pclath,c
  3250   0016EA  5026               	movf	_I2C_SlaveAddrInterruptHandler^0,w,c
  3251   0016EC  6EFD               	movwf	tosl,c
  3252   0016EE  5027               	movf	(_I2C_SlaveAddrInterruptHandler+1)^0,w,c
  3253   0016F0  6EFE               	movwf	tosh,c
  3254   0016F2  50F8               	movf	tblptru,w,c
  3255   0016F4  6EFF               	movwf	tosu,c
  3256   0016F6  50FA               	movf	pclath,w,c
  3257   0016F8  0012               	return		;indir
  3258   0016FA                     i2u15_49:
  3259   0016FA                     i2l353:
  3260   0016FA  0012               	return		;funcret
  3261   0016FC                     __end_of_I2C_SlaveAddrCallBack:
  3262                           	callstack 0
  3263                           
  3264 ;; *************** function _I2C_SlaveDefAddrInterruptHandler *****************
  3265 ;; Defined at:
  3266 ;;		line 274 in file "mcc_generated_files/i2c_slave.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;		None
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;		None
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  1    wreg      void 
  3273 ;; Registers used:
  3274 ;;		wreg, status,2, cstack
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3284 ;;Total ram usage:        0 bytes
  3285 ;; Hardware stack levels used: 1
  3286 ;; Hardware stack levels required when called: 1
  3287 ;; This function calls:
  3288 ;;		_I2C_SlaveGetRxData
  3289 ;; This function is called by:
  3290 ;;		_I2C_Open
  3291 ;;		_I2C_SlaveAddrCallBack
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           	psect	text39
  3296   001846                     __ptext39:
  3297                           	callstack 0
  3298   001846                     _I2C_SlaveDefAddrInterruptHandler:
  3299                           	callstack 24
  3300   001846                     
  3301                           ;mcc_generated_files/i2c_slave.c: 275:     i2cSlaveAddr = I2C_SlaveGetRxData();
  3302   001846  EC2F  F00C         	call	_I2C_SlaveGetRxData	;wreg free
  3303   00184A  6E31               	movwf	_i2cSlaveAddr^0,c	;volatile
  3304   00184C  0012               	return		;funcret
  3305   00184E                     __end_of_I2C_SlaveDefAddrInterruptHandler:
  3306                           	callstack 0
  3307                           
  3308 ;; *************** function _I2C_SlaveGetRxData *****************
  3309 ;; Defined at:
  3310 ;;		line 396 in file "mcc_generated_files/i2c_slave.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;		None
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;		None
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  1    wreg      unsigned char 
  3317 ;; Registers used:
  3318 ;;		wreg, status,2
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3328 ;;Total ram usage:        0 bytes
  3329 ;; Hardware stack levels used: 1
  3330 ;; This function calls:
  3331 ;;		Nothing
  3332 ;; This function is called by:
  3333 ;;		_I2C_SlaveDefRdInterruptHandler
  3334 ;;		_I2C_SlaveDefAddrInterruptHandler
  3335 ;;		_I2C_Read
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339                           	psect	text40
  3340   00185E                     __ptext40:
  3341                           	callstack 0
  3342   00185E                     _I2C_SlaveGetRxData:
  3343                           	callstack 24
  3344   00185E                     
  3345                           ;mcc_generated_files/i2c_slave.c: 398:     return SSPBUF;
  3346   00185E  50C9               	movf	201,w,c	;volatile
  3347   001860  0012               	return		;funcret
  3348   001862                     __end_of_I2C_SlaveGetRxData:
  3349                           	callstack 0
  3350                           
  3351                           	psect	smallconst
  3352   001000                     __psmallconst:
  3353                           	callstack 0
  3354   001000  00                 	db	0
  3355   001001  00                 	db	0	; dummy byte at the end
  3356   000000                     
  3357                           	psect	rparam
  3358   000000                     
  3359                           	psect	temp
  3360   00004C                     btemp:
  3361                           	callstack 0
  3362   00004C                     	ds	1
  3363   000000                     int$flags	set	btemp
  3364   000000                     wtemp8	set	btemp+1
  3365   000000                     ttemp5	set	btemp+1
  3366   000000                     ttemp6	set	btemp+4
  3367   000000                     ttemp7	set	btemp+8
  3368                           
  3369                           	psect	config
  3370                           
  3371                           ; Padding undefined space
  3372   300000                     	org	3145728
  3373   300000  FF                 	db	255
  3374                           
  3375                           ;Config register CONFIG1H @ 0x300001
  3376                           ;	Oscillator Selection bits
  3377                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  3378                           ;	Fail-Safe Clock Monitor Enable bit
  3379                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3380                           ;	Internal/External Oscillator Switchover bit
  3381                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3382   300001                     	org	3145729
  3383   300001  08                 	db	8
  3384                           
  3385                           ;Config register CONFIG2L @ 0x300002
  3386                           ;	Power-up Timer Enable bit
  3387                           ;	PWRTEN = OFF, PWRT disabled
  3388                           ;	Brown-out Reset Enable bits
  3389                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  3390                           ;	Brown Out Reset Voltage bits
  3391                           ;	BORV = 18, VBOR set to 1.8 V nominal
  3392   300002                     	org	3145730
  3393   300002  1F                 	db	31
  3394                           
  3395                           ;Config register CONFIG2H @ 0x300003
  3396                           ;	Watchdog Timer Enable bit
  3397                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  3398                           ;	Watchdog Timer Postscale Select bits
  3399                           ;	WDTPS = 32768, 1:32768
  3400   300003                     	org	3145731
  3401   300003  1E                 	db	30
  3402                           
  3403                           ; Padding undefined space
  3404   300004                     	org	3145732
  3405   300004  FF                 	db	255
  3406                           
  3407                           ;Config register CONFIG3H @ 0x300005
  3408                           ;	CCP2 MUX bit
  3409                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3410                           ;	PORTB A/D Enable bit
  3411                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  3412                           ;	Low-Power Timer1 Oscillator Enable bit
  3413                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3414                           ;	HFINTOSC Fast Start-up
  3415                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  3416                           ;	MCLR Pin Enable bit
  3417                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3418   300005                     	org	3145733
  3419   300005  8B                 	db	139
  3420                           
  3421                           ;Config register CONFIG4L @ 0x300006
  3422                           ;	Stack Full/Underflow Reset Enable bit
  3423                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3424                           ;	Single-Supply ICSP Enable bit
  3425                           ;	LVP = ON, Single-Supply ICSP enabled
  3426                           ;	Extended Instruction Set Enable bit
  3427                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3428                           ;	Background Debugger Enable bit
  3429                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  3430   300006                     	org	3145734
  3431   300006  85                 	db	133
  3432                           
  3433                           ; Padding undefined space
  3434   300007                     	org	3145735
  3435   300007  FF                 	db	255
  3436                           
  3437                           ;Config register CONFIG5L @ 0x300008
  3438                           ;	Code Protection Block 0
  3439                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3440                           ;	Code Protection Block 1
  3441                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3442                           ;	Code Protection Block 2
  3443                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3444                           ;	Code Protection Block 3
  3445                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3446   300008                     	org	3145736
  3447   300008  0F                 	db	15
  3448                           
  3449                           ;Config register CONFIG5H @ 0x300009
  3450                           ;	Boot Block Code Protection bit
  3451                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3452                           ;	Data EEPROM Code Protection bit
  3453                           ;	CPD = OFF, Data EEPROM not code-protected
  3454   300009                     	org	3145737
  3455   300009  C0                 	db	192
  3456                           
  3457                           ;Config register CONFIG6L @ 0x30000A
  3458                           ;	Write Protection Block 0
  3459                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3460                           ;	Write Protection Block 1
  3461                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3462                           ;	Write Protection Block 2
  3463                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3464                           ;	Write Protection Block 3
  3465                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  3466   30000A                     	org	3145738
  3467   30000A  0F                 	db	15
  3468                           
  3469                           ;Config register CONFIG6H @ 0x30000B
  3470                           ;	Configuration Register Write Protection bit
  3471                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3472                           ;	Boot Block Write Protection bit
  3473                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3474                           ;	Data EEPROM Write Protection bit
  3475                           ;	WRTD = OFF, Data EEPROM not write-protected
  3476   30000B                     	org	3145739
  3477   30000B  E0                 	db	224
  3478                           
  3479                           ;Config register CONFIG7L @ 0x30000C
  3480                           ;	Table Read Protection Block 0
  3481                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3482                           ;	Table Read Protection Block 1
  3483                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3484                           ;	Table Read Protection Block 2
  3485                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3486                           ;	Table Read Protection Block 3
  3487                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3488   30000C                     	org	3145740
  3489   30000C  0F                 	db	15
  3490                           
  3491                           ;Config register CONFIG7H @ 0x30000D
  3492                           ;	Boot Block Table Read Protection bit
  3493                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3494   30000D                     	org	3145741
  3495   30000D  40                 	db	64
  3496                           tosu	equ	0xFFF
  3497                           tosh	equ	0xFFE
  3498                           tosl	equ	0xFFD
  3499                           stkptr	equ	0xFFC
  3500                           pclatu	equ	0xFFB
  3501                           pclath	equ	0xFFA
  3502                           pcl	equ	0xFF9
  3503                           tblptru	equ	0xFF8
  3504                           tblptrh	equ	0xFF7
  3505                           tblptrl	equ	0xFF6
  3506                           tablat	equ	0xFF5
  3507                           prodh	equ	0xFF4
  3508                           prodl	equ	0xFF3
  3509                           indf0	equ	0xFEF
  3510                           postinc0	equ	0xFEE
  3511                           postdec0	equ	0xFED
  3512                           preinc0	equ	0xFEC
  3513                           plusw0	equ	0xFEB
  3514                           fsr0h	equ	0xFEA
  3515                           fsr0l	equ	0xFE9
  3516                           wreg	equ	0xFE8
  3517                           indf1	equ	0xFE7
  3518                           postinc1	equ	0xFE6
  3519                           postdec1	equ	0xFE5
  3520                           preinc1	equ	0xFE4
  3521                           plusw1	equ	0xFE3
  3522                           fsr1h	equ	0xFE2
  3523                           fsr1l	equ	0xFE1
  3524                           bsr	equ	0xFE0
  3525                           indf2	equ	0xFDF
  3526                           postinc2	equ	0xFDE
  3527                           postdec2	equ	0xFDD
  3528                           preinc2	equ	0xFDC
  3529                           plusw2	equ	0xFDB
  3530                           fsr2h	equ	0xFDA
  3531                           fsr2l	equ	0xFD9
  3532                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        33
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     18      75
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    ecu_led_initialization@led	PTR const struct . size(1) Largest target is 1
		 -> led(COMRAM[1]), 

    ecu_led_off@led	PTR const struct . size(1) Largest target is 1
		 -> led(COMRAM[1]), 

    ecu_led_on@led	PTR const struct . size(1) Largest target is 1
		 -> led(COMRAM[1]), 

    ecu_motor_initialization@my_motor	PTR const struct . size(1) Largest target is 2
		 -> motor(COMRAM[2]), 

    ecu_motor_move_right@my_motor	PTR const struct . size(1) Largest target is 2
		 -> motor(COMRAM[2]), 

    ecu_motor_stop@my_motor	PTR const struct . size(1) Largest target is 2
		 -> motor(COMRAM[2]), 

    gpio_pin_direction_intialization@_pin_config	PTR const struct . size(1) Largest target is 2
		 -> ecu_led_initialization@mid_term(COMRAM[1]), motor(COMRAM[2]), motor$motor(COMRAM[2]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(1) Largest target is 2
		 -> ecu_led_off@mid_term(COMRAM[1]), ecu_led_on@mid_term(COMRAM[1]), motor(COMRAM[2]), motor$motor(COMRAM[2]), 

    I2C_SlaveAddrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefAddrInterruptHandler(), NULL(), 

    I2C_SlaveBusColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefBusColInterruptHandler(), NULL(), 

    I2C_SlaveRdInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefRdInterruptHandler(), NULL(), 

    I2C_SlaveSetAddrIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefAddrInterruptHandler(), 

    I2C_SlaveSetBusColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefBusColInterruptHandler(), 

    I2C_SlaveSetIsrHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_Isr(), 

    I2C_SlaveSetReadIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefRdInterruptHandler(), 

    I2C_SlaveSetWrColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrColInterruptHandler(), 

    I2C_SlaveSetWriteIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrInterruptHandler(), 

    I2C_SlaveWrColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrColInterruptHandler(), NULL(), 

    I2C_SlaveWrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrInterruptHandler(), NULL(), 

    lat_reg	PTR unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRllll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_Isr(), NULL(), 

    port_reg	PTR unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRllll[1]), PORTB(BITBIGSFRllh[1]), PORTC(BITBIGSFRllh[1]), PORTD(BITBIGSFRllh[1]), 
		 -> PORTE(BITBIGSFRllh[1]), 

    tris_reg	PTR unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRllll[1]), TRISB(BITBIGSFRhlll[1]), TRISC(BITBIGSFRhlll[1]), TRISD(BITBIGSFRhlll[1]), 
		 -> TRISE(BITBIGSFRhlll[1]), 


Critical Paths under _main in COMRAM

    _main->_ecu_led_off
    _main->_ecu_led_on
    _ecu_motor_stop->_gpio_pin_write_logic
    _ecu_motor_move_right->_gpio_pin_write_logic
    _ecu_motor_initialization->_gpio_pin_direction_intialization
    _ecu_led_on->_gpio_pin_write_logic
    _ecu_led_off->_gpio_pin_write_logic
    _ecu_led_initialization->_gpio_pin_direction_intialization
    _I2C_Open->_I2C_SlaveSetAddrIntHandler
    _I2C_Open->_I2C_SlaveSetBusColIntHandler
    _I2C_Open->_I2C_SlaveSetIsrHandler
    _I2C_Open->_I2C_SlaveSetReadIntHandler
    _I2C_Open->_I2C_SlaveSetWrColIntHandler
    _I2C_Open->_I2C_SlaveSetWriteIntHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_I2C_Isr
    _I2C_SlaveDefWrInterruptHandler->_I2C_SlaveSendTxData

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8835
                                             16 COMRAM     2     2      0
                           _I2C_Open
                  _SYSTEM_Initialize
             _ecu_led_initialization
                        _ecu_led_off
                         _ecu_led_on
           _ecu_motor_initialization
               _ecu_motor_move_right
                     _ecu_motor_stop
 ---------------------------------------------------------------------------------
 (1) _ecu_motor_stop                                       2     1      1    1697
                                             13 COMRAM     1     0      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _ecu_motor_move_right                                 2     1      1    1697
                                             13 COMRAM     1     0      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _ecu_motor_initialization                             2     1      1     633
                                             12 COMRAM     1     0      1
   _gpio_pin_direction_intialization
 ---------------------------------------------------------------------------------
 (1) _ecu_led_on                                           4     3      1    1751
                                             13 COMRAM     3     2      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _ecu_led_off                                          4     3      1    1751
                                             13 COMRAM     3     2      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 8     6      2    1547
                                              5 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _ecu_led_initialization                               4     3      1     688
                                             12 COMRAM     3     2      1
   _gpio_pin_direction_intialization
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_direction_intialization                     7     6      1     483
                                              5 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Open                                             0     0      0     618
                 _I2C_SlaveEnableIrq
                      _I2C_SlaveOpen
         _I2C_SlaveSetAddrIntHandler
       _I2C_SlaveSetBusColIntHandler
             _I2C_SlaveSetIsrHandler
         _I2C_SlaveSetReadIntHandler
              _I2C_SlaveSetSlaveAddr
              _I2C_SlaveSetSlaveMask
        _I2C_SlaveSetWrColIntHandler
        _I2C_SlaveSetWriteIntHandler
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetWriteIntHandler                          2     0      2      98
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetWrColIntHandler                          2     0      2      98
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetSlaveMask                                1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetSlaveAddr                                1     1      0      15
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetReadIntHandler                           2     0      2      98
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetIsrHandler                               2     0      2      98
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetBusColIntHandler                         2     0      2      98
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetAddrIntHandler                           2     0      2      98
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveOpen                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveEnableIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_InterruptManager                           2     2      0      15
                                              3 COMRAM     2     2      0
                                NULL *
                            _I2C_Isr *
 ---------------------------------------------------------------------------------
 (4) _I2C_Isr                                              2     2      0      15
                                              1 COMRAM     2     2      0
              _I2C_SlaveAddrCallBack
                  _I2C_SlaveClearIrq
                    _I2C_SlaveIsAddr
                    _I2C_SlaveIsRead
               _I2C_SlaveIsRxBufFull
              _I2C_SlaveIsTxBufEmpty
                _I2C_SlaveRdCallBack
              _I2C_SlaveReleaseClock
                _I2C_SlaveWrCallBack
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveWrCallBack                                  0     0      0      15
                                NULL *
     _I2C_SlaveDefWrInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveDefWrInterruptHandler                       0     0      0      15
                _I2C_SlaveSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveSendTxData                                  1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveReleaseClock                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveRdCallBack                                  0     0      0       0
                                NULL *
     _I2C_SlaveDefRdInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveDefRdInterruptHandler                       0     0      0       0
                 _I2C_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveIsTxBufEmpty                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveIsRxBufFull                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveIsRead                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveIsAddr                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveClearIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_SlaveAddrCallBack                                0     0      0       0
                                NULL *
   _I2C_SlaveDefAddrInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _I2C_SlaveDefAddrInterruptHandler                     0     0      0       0
                 _I2C_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (7) _I2C_SlaveGetRxData                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Open
     _I2C_SlaveEnableIrq
     _I2C_SlaveOpen
     _I2C_SlaveSetAddrIntHandler
     _I2C_SlaveSetBusColIntHandler
     _I2C_SlaveSetIsrHandler
     _I2C_SlaveSetReadIntHandler
     _I2C_SlaveSetSlaveAddr
     _I2C_SlaveSetSlaveMask
     _I2C_SlaveSetWrColIntHandler
     _I2C_SlaveSetWriteIntHandler
   _SYSTEM_Initialize
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _ecu_led_initialization
     _gpio_pin_direction_intialization
   _ecu_led_off
     _gpio_pin_write_logic
   _ecu_led_on
     _gpio_pin_write_logic
   _ecu_motor_initialization
     _gpio_pin_direction_intialization
   _ecu_motor_move_right
     _gpio_pin_write_logic
   _ecu_motor_stop
     _gpio_pin_write_logic

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _I2C_Isr *
     _I2C_SlaveAddrCallBack
       NULL(Fake) *
       _I2C_SlaveDefAddrInterruptHandler *
         _I2C_SlaveGetRxData
     _I2C_SlaveClearIrq
     _I2C_SlaveIsAddr
     _I2C_SlaveIsRead
     _I2C_SlaveIsRxBufFull
     _I2C_SlaveIsTxBufEmpty
     _I2C_SlaveRdCallBack
       NULL(Fake) *
       _I2C_SlaveDefRdInterruptHandler *
         _I2C_SlaveGetRxData
     _I2C_SlaveReleaseClock
     _I2C_SlaveWrCallBack
       NULL(Fake) *
       _I2C_SlaveDefWrInterruptHandler *
         _I2C_SlaveSendTxData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      50        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     12      4B       1       79.8%
BITBIGSFRhlhh       23      0       0      40        0.0%
BITBIGSFRhhhl       1D      0       0      37        0.0%
BITBIGSFRllll       17      0       0      48        0.0%
BITBIGSFRhhhh        D      0       0      36        0.0%
BITBIGSFRhhll        6      0       0      39        0.0%
BITBIGSFRlllhll      4      0       0      47        0.0%
BITBIGSFRllh         4      0       0      45        0.0%
BITBIGSFRlh          4      0       0      44        0.0%
BITBIGSFRhlll        4      0       0      43        0.0%
BITBIGSFRhhlh        2      0       0      38        0.0%
BITBIGSFRlllhlh      1      0       0      46        0.0%
BITBIGSFRhllh        1      0       0      42        0.0%
BITBIGSFRhlhl        1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4B      49        0.0%
DATA                 0      0      4B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Aug 28 16:25:05 2024

                                _SSPSTATbits 0FC7                                           l13 1720  
                                         l18 1642                                           l28 1614  
                                         l76 1112                                           l88 1222  
                                        l150 14FE                                          l161 147E  
                                        l154 154E                                          l500 1670  
                                        l164 1494                                          l157 142A  
                                        l326 1818                                          l280 17D2  
                                        l168 14E8                                          l329 180E  
                                        l530 1850                                          l339 17E6  
                                        l283 15AC                                          l380 1760  
                                        l349 182C                                          l359 17F0  
                                        l392 1854                                          l464 17C2  
                                        l369 1822                                          l386 1804  
                                        l467 17DC                                          l389 17FA  
       __end_of_I2C_SlaveSetBusColIntHandler 1824                 _I2C_SlaveSetBusColIntHandler 181A  
                                        u100 1752                                          u101 174E  
                                        u720 10FA                                          u704 105C  
                                        u800 14FA                                          u721 10F4  
                                        u705 1058                                          u801 14F6  
                                        u714 10B2                                          u730 1128  
                                        u715 10AE                                          u731 1124  
                                        u740 1148                                          u820 1426  
                                        u741 1144                                          u821 1422  
                                        u726 10FC                                          u815 1544  
                                        u680 1016                                          u840 1490  
                                        u681 1012                                          u817 1546  
                                        u841 148C                                          u690 1036  
                                        u754 116E                                          u770 170C  
                                        u691 1032                                          u755 116A  
                                        u835 1470                                          u771 1708  
                                        u764 11C4                                          u780 1626  
                                        u765 11C0                                          u837 1472  
                                        u781 1622                                          u790 15F8  
                                        u855 14DA                                          u791 15F4  
                                        u857 14DC                                          u877 1382  
                                        u887 1396                                          u897 13AE  
                      ??_I2C_SlaveRdCallBack 003A                                          _led 0021  
                        _I2C_SlaveSendTxData 1836                I2C_SlaveSetSlaveMask@maskAddr 003F  
                            __end_of_I2C_Isr 1320                                          tosl 0FFD  
                                        wreg 0FE8                          _I2C_SlaveWrCallBack 1672  
                                       l2004 13BC                                         l2008 13C4  
                                       l2016 13CC                                         l1410 184E  
                                       l2026 120A                                         l1340 17C4  
                                       l1420 1662                                         l1412 1644  
                                       l1350 1752                                         l1342 17C8  
                                       l1422 1664                                         l1414 165C  
                                       l1352 1756                                         l1360 17FE  
                                       l1344 17CC                                         l1424 166E  
                                       l1416 165E                                         l1354 175A  
                                       l1362 17F4                                         l1346 17D0  
                                       l1426 17D4                                         l1418 1660  
                                       l1356 175E                                         l1348 1744  
                                       l1550 17B2                                         l1376 1852  
                                       l1552 17B6                                         l1554 17BA  
                                       l1556 17BE                                         l1820 1094  
                                       l1812 1002                                         l1900 1536  
                                       l1814 1016                                         l1902 1546  
                                       l1910 142E                                         l1816 1036  
                                       l1840 11A6                                         l1832 1114  
                                       l1920 1480                                         l1912 1460  
                                       l1818 103E                                         l1826 10E4  
                                       l1834 1128                                         l1930 14DC  
                                       l1922 1490                                         l1914 1462  
                                       l1906 1416                                         l1860 17DE  
                                       l1828 1110                                         l1836 1148  
                                       l1924 1498                                         l1916 1472  
                                       l1908 1426                                         l1862 1806  
                                       l1934 1550                                         l1838 1150  
                                       l1846 11F6                                         l1926 14CA  
                                       l1870 170C                                         l1864 1824  
                                       l1856 1810                                         l1936 15A8  
                                       l1848 1220                                         l1928 14CC  
                                       l1872 1710                                         l1880 162A  
                                       l1960 1338                                         l1858 181A  
                                       l1866 17E8                                         l1970 1342  
                                       l1962 133A                                         l1954 1320  
                                       l1892 14EA                                         l1868 16FC  
                                       l1876 1616                                         l1884 15E8  
                                       l1980 1366                                         l1972 134A  
                                       l1964 133C                                         l1956 1328  
                                       l1894 14FA                                         l1878 1626  
                                       l1886 15F8                                         l1990 1380  
                                       l1974 1352                                         l1966 133E  
                                       l1958 1330                                         l1896 1502  
                                       l1888 15FC                                         l1992 138A  
                                       l1984 1372                                         l1976 135A  
                                       l1968 1340                                         l1898 1534  
                                       l1996 13A6                                         l1988 137E  
                                       l1998 13A8                                         _LATA 0F89  
                                       _LATB 0F8A                                         _LATC 0F8B  
                                       _LATD 0F8C                                         _LATE 0F8D  
                                       _WPUB 0F7C                      __end_of_I2C_SlaveIsAddr 17B2  
                    __end_of_I2C_SlaveIsRead 179E                                         _main 1320  
                                       _mmmm 002F            I2C_SlaveSetAddrIntHandler@handler 003F  
                                       fsr2h 0FDA                                         indf2 0FDF  
                                       fsr1l 0FE1                                         fsr2l 0FD9  
                           __end_of_I2C_Open 15AE                                         btemp 004C  
                       ?_I2C_SlaveSendTxData 003A                                         prodl 0FF3  
                                       start 0086                       ecu_motor_stop@my_motor 0047  
                       ?_I2C_SlaveWrCallBack 003A                                 ___param_bank 0000  
          I2C_SlaveSetReadIntHandler@handler 003F                __end_of_I2C_SlaveAddrCallBack 16FC  
                       _gpio_pin_write_logic 1114                __end_of_OSCILLATOR_Initialize 17DE  
   __end_of_I2C_SlaveDefAddrInterruptHandler 184E           ??_I2C_SlaveDefAddrInterruptHandler 003A  
          ?_I2C_SlaveDefAddrInterruptHandler 003A             _I2C_SlaveDefAddrInterruptHandler 1846  
                                      ?_main 003A                                        _ANSEL 0F7E  
                   ??_ecu_led_initialization 0047                                        i2l401 185C  
                                      i2l323 131E                                        i2l404 1858  
                                      i2l333 16CC                                        i2l422 183C  
                                      i2l343 169E                                        i2l416 1774  
                                      i2l336 1844                                        i2l425 1860  
                                      i2l353 16FA                                        i2l346 1834  
                                      i2l419 1788                                        i2l356 184C  
                                      i2l541 007A                                        i2l536 005A  
                                      i2l537 007A                                        i2l395 17B0  
                                      i2l398 179C                        _I2C_SlaveReleaseClock 1856  
                                      _PORTA 0F80                                        _PORTB 0F81  
                                      _PORTC 0F82                                        _PORTD 0F83  
                                      _PORTE 0F84                                        _TRISA 0F92  
                                      _TRISB 0F93                                        _TRISC 0F94  
                                      _TRISD 0F95                                        _TRISE 0F96  
              ?_I2C_SlaveSetBusColIntHandler 003F                       ??_I2C_SlaveIsRxBufFull 003A  
                                      _ggggg 002E                                        _motor 001F  
                                      pclath 0FFA                                        pclatu 0FFB  
                                      tablat 0FF5                                        ttemp5 004D  
                                      ttemp6 0050                                        ttemp7 0054  
                                      status 0FD8                                        wtemp8 004D  
                      ??_I2C_SlaveSendTxData 003A                        ??_I2C_SlaveWrCallBack 003B  
                      _I2C_SlaveSetSlaveAddr 17FC                              __initialization 15AE  
                      _I2C_SlaveSetSlaveMask 17F2                                 __end_of_main 1416  
                      ?_gpio_pin_write_logic 003F                          ecu_led_toggle@F3749 0034  
                ?_INTERRUPT_InterruptManager 003A                                    ??_I2C_Isr 003B  
                ecu_led_initialization@F3734 0037                                       ??_main 004A  
                              __activetblptr 0002                  _I2C_SlaveRdInterruptHandler 002A  
                _I2C_SlaveWrInterruptHandler 0028                         _ecu_motor_move_right 1616  
                 __end_of_I2C_SlaveEnableIrq 1856                   __end_of_I2C_SlaveGetRxData 1862  
             ecu_led_initialization@mid_term 0048                                       _ANSELH 0F7F  
                                     i2l1400 1776                                       i2l1404 16A0  
                                     i2l2028 12F4                                       i2l1406 16B2  
                                     i2l1510 1228                                       i2l1408 1856  
                                     i2l1520 1274                                       i2l1512 123C  
                                     i2l1290 183E                                       i2l1530 12A4  
                                     i2l1522 127C                                       i2l1514 1250  
                                     i2l1284 185E                                       i2l1292 182E  
                                     i2l1532 12AC                                       i2l1524 1284  
                                     i2l1516 1258                                       i2l1508 1224  
                                     i2l1294 1846                                       i2l1390 16E0  
                                     i2l1382 185A                                       i2l1526 1288  
                                     i2l1542 12E0                                       i2l1518 1260  
                                     i2l1384 179E                                       i2l1392 1762  
                                     i2l1288 1838                                       i2l1536 12C4  
                                     i2l1528 129C                                       i2l1544 131A  
                                     i2l1378 178A                                       i2l1538 12D8  
                                     i2l1730 0020                                       i2l1388 16CE  
                                     i2l1396 1672                                       i2l1732 002E  
                                     i2l1398 1684                                       i2l1734 003C  
                                     i2l1736 0068                                       i2l1728 0012  
                                     _OSCCON 0FD3                             ?_I2C_SlaveIsAddr 003A  
                                     _SSPADD 0FC8                             ?_I2C_SlaveIsRead 003A  
                                     _SSPBUF 0FC9                                       _SSPMSK 0F77  
                 ??_ecu_motor_initialization 0047                       _I2C_SlaveSetIsrHandler 1810  
                                     clear_0 15D4                                       isa$std 0001  
                     ?_I2C_SlaveReleaseClock 003A                      ??_I2C_SlaveIsTxBufEmpty 003A  
                               __pdataCOMRAM 0001                                    ?_I2C_Open 003A  
        I2C_SlaveSetBusColIntHandler@handler 003F                                 __mediumconst 0000  
                                     tblptrh 0FF7                                       tblptrl 0FF6  
                                     tblptru 0FF8                        ?_ecu_motor_move_right 0047  
                              _I2C_SlaveOpen 1744                            _SYSTEM_Initialize 17B2  
                                 __accesstop 0060                      __end_of__initialization 15DA  
         I2C_SlaveSetWrColIntHandler@handler 003F                 ??_I2C_SlaveSetAddrIntHandler 0041  
                         ?_SYSTEM_Initialize 003A                                ___rparam_used 0001  
                     ?_I2C_SlaveSetSlaveAddr 003A                       ?_I2C_SlaveSetSlaveMask 003A  
                     ??_gpio_pin_write_logic 0041                               __pcstackCOMRAM 003A  
                        ??_SYSTEM_Initialize 003F               I2C_SlaveSetSlaveAddr@slaveAddr 003F  
               ??_I2C_SlaveSetReadIntHandler 0041                                   ??_I2C_Open 0041  
                             ?_I2C_SlaveOpen 003A                    __end_of_SYSTEM_Initialize 17C4  
                     _ecu_led_initialization 14EA          __end_of_I2C_SlaveSetWrColIntHandler 17F2  
                _I2C_SlaveSetWrColIntHandler 17E8                                   _ecu_led_on 1416  
                __end_of_I2C_SlaveRdCallBack 16CE                ??_I2C_SlaveSetWrColIntHandler 0041  
                                    _I2C_Isr 1224                       ??_ecu_motor_move_right 0048  
                                    i2u11_40 179A                                      i2u11_41 1794  
                                    i2u11_46 179C                                      i2u12_40 17AE  
                                    i2u20_40 1786                                      i2u12_41 17A8  
                                    i2u20_41 1780                                      i2u20_46 1788  
                                    i2u13_40 17B0                                      i2u21_40 16B2  
                                    i2u21_41 16AE                                      i2u14_40 16E0  
                                    i2u14_41 16DC                                      i2u22_48 16B8  
                                    i2u22_49 16CC                                      i2u15_48 16E6  
                                    i2u16_40 1772                                      i2u40_40 12D8  
                                    i2u15_49 16FA                                      i2u16_41 176C  
                                    i2u40_41 12D4                                      i2u17_40 1774  
                                    i2u18_40 1684                                      i2u18_41 1680  
                                    i2u35_40 123C                                      i2u35_41 1238  
                                    i2u19_48 168A                                      i2u36_40 1250  
                                    i2u19_49 169E                                      i2u36_41 124C  
                                    i2u37_40 1274                                      i2u37_41 1270  
                                    i2u38_40 129C                                      i2u62_40 0020  
                                    i2u38_41 1298                                      i2u62_41 001C  
                                    _OSCTUNE 0F9B                                      i2u39_40 12C0  
                                    i2u63_40 002E                                      i2u39_41 12BC  
                                    i2u63_41 002A                                      i2u64_40 003C  
                                    i2u64_41 0038                                      i2u66_40 0068  
                                    i2u65_48 0042                                      i2u66_41 0064  
                                    i2u65_49 0056                                      i2u67_40 0076  
                                    i2u67_41 0072                                      _SSPCON1 0FC6  
                                    _SSPCON2 0FC5                                      _SSPSTAT 0FC7  
           __end_of_ecu_motor_initialization 1722                                      __Hparam 0000  
                                    __Lparam 0000                      I2C_SlaveSendTxData@data 003A  
                               __psmallconst 1000                        _I2C_SlaveAddrCallBack 16CE  
                                    __pcinit 15AE                               _I2C_Initialize 17C4  
                                    __ramtop 1000                                      __ptext0 1320  
                                    __ptext1 15E8                                      __ptext2 1616  
                                    __ptext3 16FC                                      __ptext4 1416  
                                    __ptext5 1480                                      __ptext6 1114  
                                    __ptext7 14EA                                      __ptext8 1002  
                                    __ptext9 17B2                              ??_I2C_SlaveOpen 003F  
                                    _lat_reg 000B                        _OSCILLATOR_Initialize 17D4  
                             ecu_led_off@led 0047                     ??_PIN_MANAGER_Initialize 003F  
              I2C_SlaveSetIsrHandler@handler 003F                  __end_of_I2C_SlaveSendTxData 183E  
                       end_of_initialization 15DA                  __end_of_I2C_SlaveWrCallBack 16A0  
         __end_of_I2C_SlaveSetAddrIntHandler 182E                   _I2C_SlaveSetAddrIntHandler 1824  
                              __Lmediumconst 0000                           _I2C_SlaveEnableIrq 1852  
                         _I2C_SlaveGetRxData 185E                      ?_I2C_SlaveSetIsrHandler 003F  
                               _i2cSlaveAddr 0031                                      postdec1 0FE5  
                                    postdec2 0FDD                                      postinc0 0FEE  
                                    postinc2 0FDE                                  ?_ecu_led_on 0047  
                     __end_of_I2C_Initialize 17D4                      ??_I2C_SlaveReleaseClock 003A  
                              ??_ecu_led_off 0048                          ?_I2C_SlaveEnableIrq 003A  
                        ?_I2C_SlaveGetRxData 003A           __end_of_I2C_SlaveSetReadIntHandler 1810  
                 _I2C_SlaveSetReadIntHandler 1806                 ?_I2C_SlaveSetWriteIntHandler 003F  
              __end_of_I2C_SlaveIsTxBufEmpty 1776                         ??_I2C_SlaveEnableIrq 003F  
                       ??_I2C_SlaveGetRxData 003A                      ??_I2C_SlaveSetSlaveAddr 003F  
                    ??_I2C_SlaveSetSlaveMask 003F               __end_of_I2C_SlaveSetIsrHandler 181A  
                     ?_I2C_SlaveAddrCallBack 003A                 __end_of_INTERRUPT_Initialize 1852  
                            ?_I2C_Initialize 003A                                __pidataCOMRAM 1722  
                             _ecu_motor_stop 15E8                                    _i2cRdData 0032  
                     ?_OSCILLATOR_Initialize 003A                    ?_ecu_motor_initialization 0046  
                                  _i2cWrData 0033                          start_initialization 15AE  
                        __end_of_ecu_led_off 14EA                      ?_ecu_led_initialization 0046  
                     __end_of_ecu_motor_stop 1616  gpio_pin_direction_intialization@_pin_config 003F  
                                   ?_I2C_Isr 003A                                  __pbssCOMRAM 0022  
             __end_of_ecu_led_initialization 1550               ??_I2C_SlaveSetBusColIntHandler 0041  
   __end_of_gpio_pin_direction_intialization 1114           ??_gpio_pin_direction_intialization 0040  
          ?_gpio_pin_direction_intialization 003F             _gpio_pin_direction_intialization 1002  
                     _PIN_MANAGER_Initialize 1644                                    __pintcode 0008  
            gpio_pin_write_logic@_pin_config 003F                              ?_ecu_motor_stop 0047  
                                _ecu_led_off 1480                    gpio_pin_write_logic@logic 0040  
               ??_INTERRUPT_InterruptManager 003D                            ??_I2C_SlaveIsAddr 003A  
                           ecu_led_off@F3744 0035                            ??_I2C_SlaveIsRead 003A  
           ??_I2C_SlaveDefRdInterruptHandler 003A              ?_I2C_SlaveDefRdInterruptHandler 003A  
           ??_I2C_SlaveDefWrInterruptHandler 003B              ?_I2C_SlaveDefWrInterruptHandler 003A  
                                __smallconst 1000                                     _I2C_Open 1550  
               ecu_motor_move_right@my_motor 0047                          ecu_led_off@mid_term 0049  
                       _INTERRUPT_Initialize 184E                                ecu_led_on@led 0047  
                ?_I2C_SlaveSetAddrIntHandler 003F                                     _PIE1bits 0F9D  
                                   _PIE2bits 0FA0             ecu_motor_initialization@my_motor 0046  
                          _I2C_SlaveClearIrq 185A                                     _PIR1bits 0F9E  
                                   _PIR2bits 0FA1                           ?_I2C_SlaveClearIrq 003A  
                                   _RCONbits 0FD0                                 ??_ecu_led_on 0048  
               __end_of_I2C_SlaveIsRxBufFull 178A                  ?_I2C_SlaveSetReadIntHandler 003F  
              __end_of_I2C_SlaveReleaseClock 185A                          ??_I2C_SlaveClearIrq 003A  
                      __end_of_I2C_SlaveOpen 1762                      gpio_pin_write_logic@ret 0046  
                                _INTCON2bits 0FF1                                    copy_data0 15C2  
                      ?_INTERRUPT_Initialize 003A                           __end_of_ecu_led_on 1480  
          _I2C_SlaveDefWrColInterruptHandler 0000                    __end_of_I2C_SlaveClearIrq 185E  
              __end_of_I2C_SlaveSetSlaveAddr 1806                __end_of_I2C_SlaveSetSlaveMask 17FC  
                           ??_I2C_Initialize 003F                      ??_I2C_SlaveAddrCallBack 003A  
                                   __Hrparam 0000                                     __Lrparam 0000  
                    ??_OSCILLATOR_Initialize 003F                _I2C_SlaveAddrInterruptHandler 0026  
         _I2C_SlaveDefBusColInterruptHandler 0000               _I2C_SlaveWrColInterruptHandler 0022  
                            ecu_led_on@F3739 0036          gpio_pin_direction_intialization@ret 0045  
                                   __ptext10 1644                                     __ptext11 17D4  
                                   __ptext20 1810                                     __ptext12 184E  
                                   __ptext21 181A                                     __ptext13 17C4  
                                   __ptext30 1856                                     __ptext22 1824  
                                   __ptext14 1550                                     __ptext31 16A0  
                                   __ptext23 1744                                     __ptext15 17DE  
                                   __ptext40 185E                                     __ptext32 183E  
                                   __ptext24 1852                                     __ptext16 17E8  
                                   __ptext33 1762                                     __ptext17 17F2  
                                   __ptext34 1776                                     __ptext26 1224  
                                   __ptext18 17FC                                     __ptext35 178A  
                                   __ptext27 1672                                     __ptext19 1806  
                                   __ptext36 179E                                     __ptext28 182E  
                                   __ptext37 185A                                     __ptext29 1836  
                                   __ptext38 16CE                                     __ptext39 1846  
                      _I2C_SlaveIsTxBufEmpty 1762                           ecu_led_on@mid_term 0049  
               ?_I2C_SlaveSetWrColIntHandler 003F                                     isa$xinst 0000  
                                   int$flags 004C                                     _port_reg 0001  
         __end_of_INTERRUPT_InterruptManager 0086                   _INTERRUPT_InterruptManager 0008  
                                   _tris_reg 0015                                   _INTCONbits 0FF2  
                     ??_INTERRUPT_Initialize 003F                 __end_of_gpio_pin_write_logic 1224  
                       _I2C_SlaveIsRxBufFull 1776                                     intlevel2 0000  
            _I2C_SlaveBusColInterruptHandler 0024                      ?_PIN_MANAGER_Initialize 003A  
                           ??_ecu_motor_stop 0048                          _I2C_SlaveRdCallBack 16A0  
                             _dc_motor_pin_1 0039                               _dc_motor_pin_2 0038  
                            _I2C_SlaveIsAddr 179E                              _I2C_SlaveIsRead 178A  
                              _i2cSlaveState 0030           I2C_SlaveSetWriteIntHandler@handler 003F  
                   _ecu_motor_initialization 16FC                                 ?_ecu_led_off 0047  
        __end_of_I2C_SlaveSetWriteIntHandler 17E8                  _I2C_SlaveSetWriteIntHandler 17DE  
                       ?_I2C_SlaveRdCallBack 003A                       ?_I2C_SlaveIsTxBufEmpty 003A  
              ??_I2C_SlaveSetWriteIntHandler 0041                                  _SSPCON1bits 0FC6  
                                _SSPCON2bits 0FC5                     ??_I2C_SlaveSetIsrHandler 0041  
                      ?_I2C_SlaveIsRxBufFull 003A               __end_of_PIN_MANAGER_Initialize 1672  
     __end_of_I2C_SlaveDefRdInterruptHandler 1846               _I2C_SlaveDefRdInterruptHandler 183E  
     __end_of_I2C_SlaveDefWrInterruptHandler 1836               _I2C_SlaveDefWrInterruptHandler 182E  
                      _MSSP_InterruptHandler 002C                 __end_of_ecu_motor_move_right 1644  
                  ecu_led_initialization@led 0046  
